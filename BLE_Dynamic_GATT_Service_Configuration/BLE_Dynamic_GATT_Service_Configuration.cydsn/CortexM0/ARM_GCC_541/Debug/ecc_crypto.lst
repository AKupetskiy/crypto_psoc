ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ecc_crypto.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 25303278 		.ascii	"%02x\000"
  22      00
  23 0005 000000   		.align	2
  24              	.LC2:
  25 0008 3E0D00   		.ascii	">\015\000"
  26              		.section	.text.vli_print,"ax",%progbits
  27              		.align	2
  28              		.global	vli_print
  29              		.code	16
  30              		.thumb_func
  31              		.type	vli_print, %function
  32              	vli_print:
  33              	.LFB36:
  34              		.file 1 "ecc_crypto.c"
   1:ecc_crypto.c  **** /* ========================================
   2:ecc_crypto.c  ****  *
   3:ecc_crypto.c  ****  * Copyright YOUR COMPANY, THE YEAR
   4:ecc_crypto.c  ****  * All Rights Reserved
   5:ecc_crypto.c  ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:ecc_crypto.c  ****  *
   7:ecc_crypto.c  ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:ecc_crypto.c  ****  * WHICH IS THE PROPERTY OF your company.
   9:ecc_crypto.c  ****  *
  10:ecc_crypto.c  ****  * ========================================
  11:ecc_crypto.c  **** */
  12:ecc_crypto.c  **** 
  13:ecc_crypto.c  **** #include "ecc_crypto.h"
  14:ecc_crypto.c  **** #include <project.h>
  15:ecc_crypto.c  **** #include "uECC.h"
  16:ecc_crypto.c  **** #include "sha256.h"
  17:ecc_crypto.c  **** 
  18:ecc_crypto.c  **** 
  19:ecc_crypto.c  **** void vli_print(uint8_t *vli, unsigned int size) {
  35              		.loc 1 19 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 2


  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39 0000 00B5     		push	{lr}
  40              		.cfi_def_cfa_offset 4
  41              		.cfi_offset 14, -4
  42 0002 85B0     		sub	sp, sp, #20
  43              		.cfi_def_cfa_offset 24
  44 0004 0190     		str	r0, [sp, #4]
  45 0006 0091     		str	r1, [sp]
  20:ecc_crypto.c  ****     printf("<");
  46              		.loc 1 20 0
  47 0008 3C20     		movs	r0, #60
  48 000a FFF7FEFF 		bl	putchar
  49              	.LBB2:
  21:ecc_crypto.c  ****     for(unsigned i=0; i<size; ++i) {
  50              		.loc 1 21 0
  51 000e 0023     		movs	r3, #0
  52 0010 0393     		str	r3, [sp, #12]
  53 0012 0CE0     		b	.L2
  54              	.L3:
  22:ecc_crypto.c  ****         printf("%02x", (unsigned)vli[i]);
  55              		.loc 1 22 0 discriminator 3
  56 0014 019A     		ldr	r2, [sp, #4]
  57 0016 039B     		ldr	r3, [sp, #12]
  58 0018 D318     		adds	r3, r2, r3
  59 001a 1B78     		ldrb	r3, [r3]
  60 001c 1A00     		movs	r2, r3
  61 001e 094B     		ldr	r3, .L4
  62 0020 1100     		movs	r1, r2
  63 0022 1800     		movs	r0, r3
  64 0024 FFF7FEFF 		bl	printf
  21:ecc_crypto.c  ****     for(unsigned i=0; i<size; ++i) {
  65              		.loc 1 21 0 discriminator 3
  66 0028 039B     		ldr	r3, [sp, #12]
  67 002a 0133     		adds	r3, r3, #1
  68 002c 0393     		str	r3, [sp, #12]
  69              	.L2:
  21:ecc_crypto.c  ****     for(unsigned i=0; i<size; ++i) {
  70              		.loc 1 21 0 is_stmt 0 discriminator 1
  71 002e 039A     		ldr	r2, [sp, #12]
  72 0030 009B     		ldr	r3, [sp]
  73 0032 9A42     		cmp	r2, r3
  74 0034 EED3     		bcc	.L3
  75              	.LBE2:
  23:ecc_crypto.c  ****     }
  24:ecc_crypto.c  ****     printf(">\r\n");
  76              		.loc 1 24 0 is_stmt 1
  77 0036 044B     		ldr	r3, .L4+4
  78 0038 1800     		movs	r0, r3
  79 003a FFF7FEFF 		bl	puts
  25:ecc_crypto.c  **** }
  80              		.loc 1 25 0
  81 003e C046     		nop
  82 0040 05B0     		add	sp, sp, #20
  83              		@ sp needed
  84 0042 00BD     		pop	{pc}
  85              	.L5:
  86              		.align	2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 3


  87              	.L4:
  88 0044 00000000 		.word	.LC0
  89 0048 08000000 		.word	.LC2
  90              		.cfi_endproc
  91              	.LFE36:
  92              		.size	vli_print, .-vli_print
  93              		.section	.rodata
  94 000b 00       		.align	2
  95              	.LC4:
  96 000c 0D0A2D2D 		.ascii	"\015\012------------------------- calculating share"
  96      2D2D2D2D 
  96      2D2D2D2D 
  96      2D2D2D2D 
  96      2D2D2D2D 
  97 0039 64207365 		.ascii	"d secret ------------------------- \015\000"
  97      63726574 
  97      202D2D2D 
  97      2D2D2D2D 
  97      2D2D2D2D 
  98 005e 0000     		.align	2
  99              	.LC6:
 100 0060 0D0A756E 		.ascii	"\015\012uncompressed Private key = \000"
 100      636F6D70 
 100      72657373 
 100      65642050 
 100      72697661 
 101 007e 0000     		.align	2
 102              	.LC8:
 103 0080 0D0A6C6F 		.ascii	"\015\012local Private key = \000"
 103      63616C20 
 103      50726976 
 103      61746520 
 103      6B657920 
 104 0097 00       		.align	2
 105              	.LC10:
 106 0098 0D0A2D2D 		.ascii	"\015\012------------------------- SUCCESS!!!! -----"
 106      2D2D2D2D 
 106      2D2D2D2D 
 106      2D2D2D2D 
 106      2D2D2D2D 
 107 00c5 2D2D2D2D 		.ascii	"-------------------- \015\000"
 107      2D2D2D2D 
 107      2D2D2D2D 
 107      2D2D2D2D 
 107      2D2D2D2D 
 108              		.align	2
 109              	.LC12:
 110 00dc 0D0A7365 		.ascii	"\015\012secret = \000"
 110      63726574 
 110      203D2000 
 111              		.section	.text.calculateSecret,"ax",%progbits
 112              		.align	2
 113              		.global	calculateSecret
 114              		.code	16
 115              		.thumb_func
 116              		.type	calculateSecret, %function
 117              	calculateSecret:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 4


 118              	.LFB37:
  26:ecc_crypto.c  **** 
  27:ecc_crypto.c  **** 
  28:ecc_crypto.c  **** unsigned calculateSecret(uint8_t *remotePublicKey, uint8_t *localPrivateKey, uint8_t *secret) {
 119              		.loc 1 28 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 88
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 00B5     		push	{lr}
 124              		.cfi_def_cfa_offset 4
 125              		.cfi_offset 14, -4
 126 0002 97B0     		sub	sp, sp, #92
 127              		.cfi_def_cfa_offset 96
 128 0004 0390     		str	r0, [sp, #12]
 129 0006 0291     		str	r1, [sp, #8]
 130 0008 0192     		str	r2, [sp, #4]
  29:ecc_crypto.c  ****     printf("\r\n------------------------- calculating shared secret ------------------------- \r\n"
 131              		.loc 1 29 0
 132 000a 214B     		ldr	r3, .L10
 133 000c 1800     		movs	r0, r3
 134 000e FFF7FEFF 		bl	puts
  30:ecc_crypto.c  ****     const struct uECC_Curve_t * curve = uECC_secp256r1();
 135              		.loc 1 30 0
 136 0012 FFF7FEFF 		bl	uECC_secp256r1
 137 0016 0300     		movs	r3, r0
 138 0018 1593     		str	r3, [sp, #84]
  31:ecc_crypto.c  ****     
  32:ecc_crypto.c  ****     uint8_t uncompressedRemotePubKey[64] = {0};
 139              		.loc 1 32 0
 140 001a 05AB     		add	r3, sp, #20
 141 001c 1800     		movs	r0, r3
 142 001e 4023     		movs	r3, #64
 143 0020 1A00     		movs	r2, r3
 144 0022 0021     		movs	r1, #0
 145 0024 FFF7FEFF 		bl	memset
  33:ecc_crypto.c  ****     uECC_decompress(remotePublicKey,uncompressedRemotePubKey,curve);
 146              		.loc 1 33 0
 147 0028 159A     		ldr	r2, [sp, #84]
 148 002a 05A9     		add	r1, sp, #20
 149 002c 039B     		ldr	r3, [sp, #12]
 150 002e 1800     		movs	r0, r3
 151 0030 FFF7FEFF 		bl	uECC_decompress
  34:ecc_crypto.c  ****     
  35:ecc_crypto.c  ****     printf("\r\nuncompressed Private key = ");
 152              		.loc 1 35 0
 153 0034 174B     		ldr	r3, .L10+4
 154 0036 1800     		movs	r0, r3
 155 0038 FFF7FEFF 		bl	printf
  36:ecc_crypto.c  ****     vli_print(uncompressedRemotePubKey, 64);
 156              		.loc 1 36 0
 157 003c 05AB     		add	r3, sp, #20
 158 003e 4021     		movs	r1, #64
 159 0040 1800     		movs	r0, r3
 160 0042 FFF7FEFF 		bl	vli_print
  37:ecc_crypto.c  ****     
  38:ecc_crypto.c  ****     printf("\r\nlocal Private key = ");
 161              		.loc 1 38 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 5


 162 0046 144B     		ldr	r3, .L10+8
 163 0048 1800     		movs	r0, r3
 164 004a FFF7FEFF 		bl	printf
  39:ecc_crypto.c  ****     vli_print(localPrivateKey, 32);
 165              		.loc 1 39 0
 166 004e 029B     		ldr	r3, [sp, #8]
 167 0050 2021     		movs	r1, #32
 168 0052 1800     		movs	r0, r3
 169 0054 FFF7FEFF 		bl	vli_print
  40:ecc_crypto.c  ****     
  41:ecc_crypto.c  ****     if (!uECC_shared_secret(uncompressedRemotePubKey, localPrivateKey, secret, curve)) {
 170              		.loc 1 41 0
 171 0058 159B     		ldr	r3, [sp, #84]
 172 005a 019A     		ldr	r2, [sp, #4]
 173 005c 0299     		ldr	r1, [sp, #8]
 174 005e 05A8     		add	r0, sp, #20
 175 0060 FFF7FEFF 		bl	uECC_shared_secret
 176 0064 031E     		subs	r3, r0, #0
 177 0066 01D1     		bne	.L7
  42:ecc_crypto.c  ****         return 0;
 178              		.loc 1 42 0
 179 0068 0023     		movs	r3, #0
 180 006a 0DE0     		b	.L9
 181              	.L7:
  43:ecc_crypto.c  ****     }
  44:ecc_crypto.c  ****     
  45:ecc_crypto.c  ****     printf("\r\n------------------------- SUCCESS!!!! ------------------------- \r\n");
 182              		.loc 1 45 0
 183 006c 0B4B     		ldr	r3, .L10+12
 184 006e 1800     		movs	r0, r3
 185 0070 FFF7FEFF 		bl	puts
  46:ecc_crypto.c  ****     
  47:ecc_crypto.c  ****     //#warning DEBUG!!!!!!!
  48:ecc_crypto.c  ****     //uint8_t *secret1 = (uint8_t *)"\x61\xf3\xd9\xdd\xe5\x90\x9b\x35\x92\x88\x39\x39\xfd\x07\xf2\x
  49:ecc_crypto.c  ****     //memcpy(secret,secret1,32);
  50:ecc_crypto.c  ****     
  51:ecc_crypto.c  ****     printf("\r\nsecret = ");
 186              		.loc 1 51 0
 187 0074 0A4B     		ldr	r3, .L10+16
 188 0076 1800     		movs	r0, r3
 189 0078 FFF7FEFF 		bl	printf
  52:ecc_crypto.c  ****     vli_print(secret, 32);
 190              		.loc 1 52 0
 191 007c 019B     		ldr	r3, [sp, #4]
 192 007e 2021     		movs	r1, #32
 193 0080 1800     		movs	r0, r3
 194 0082 FFF7FEFF 		bl	vli_print
  53:ecc_crypto.c  ****     
  54:ecc_crypto.c  ****     return 1;
 195              		.loc 1 54 0
 196 0086 0123     		movs	r3, #1
 197              	.L9:
  55:ecc_crypto.c  **** }
 198              		.loc 1 55 0 discriminator 1
 199 0088 1800     		movs	r0, r3
 200 008a 17B0     		add	sp, sp, #92
 201              		@ sp needed
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 6


 202 008c 00BD     		pop	{pc}
 203              	.L11:
 204 008e C046     		.align	2
 205              	.L10:
 206 0090 0C000000 		.word	.LC4
 207 0094 60000000 		.word	.LC6
 208 0098 80000000 		.word	.LC8
 209 009c 98000000 		.word	.LC10
 210 00a0 DC000000 		.word	.LC12
 211              		.cfi_endproc
 212              	.LFE37:
 213              		.size	calculateSecret, .-calculateSecret
 214              		.section	.rodata
 215              		.align	2
 216              	.LC14:
 217 00e8 0D0A2D2D 		.ascii	"\015\012------------------------- generating key pa"
 217      2D2D2D2D 
 217      2D2D2D2D 
 217      2D2D2D2D 
 217      2D2D2D2D 
 218 0115 6972202D 		.ascii	"ir ------------------------- \015\000"
 218      2D2D2D2D 
 218      2D2D2D2D 
 218      2D2D2D2D 
 218      2D2D2D2D 
 219              		.align	2
 220              	.LC17:
 221 0134 0D0A6C6F 		.ascii	"\015\012local public key = \000"
 221      63616C20 
 221      7075626C 
 221      6963206B 
 221      6579203D 
 222 014a 0000     		.align	2
 223              	.LC19:
 224 014c 0D0A636F 		.ascii	"\015\012compressed local public key = \000"
 224      6D707265 
 224      73736564 
 224      206C6F63 
 224      616C2070 
 225 016d 000000   		.align	2
 226              	.LC21:
 227 0170 0D0A2D2D 		.ascii	"\015\012-------------------------end generating key"
 227      2D2D2D2D 
 227      2D2D2D2D 
 227      2D2D2D2D 
 227      2D2D2D2D 
 228 019d 20706169 		.ascii	" pair ------------------------- \015\000"
 228      72202D2D 
 228      2D2D2D2D 
 228      2D2D2D2D 
 228      2D2D2D2D 
 229              		.section	.text.generateKeyPair,"ax",%progbits
 230              		.align	2
 231              		.global	generateKeyPair
 232              		.code	16
 233              		.thumb_func
 234              		.type	generateKeyPair, %function
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 7


 235              	generateKeyPair:
 236              	.LFB38:
  56:ecc_crypto.c  **** 
  57:ecc_crypto.c  **** 
  58:ecc_crypto.c  **** unsigned generateKeyPair(uint8_t *compressedPubKey, uint8_t *privateKey) {
 237              		.loc 1 58 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 80
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 00B5     		push	{lr}
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 14, -4
 244 0002 95B0     		sub	sp, sp, #84
 245              		.cfi_def_cfa_offset 88
 246 0004 0190     		str	r0, [sp, #4]
 247 0006 0091     		str	r1, [sp]
  59:ecc_crypto.c  ****     printf("\r\n------------------------- generating key pair ------------------------- \r\n");
 248              		.loc 1 59 0
 249 0008 204B     		ldr	r3, .L16
 250 000a 1800     		movs	r0, r3
 251 000c FFF7FEFF 		bl	puts
  60:ecc_crypto.c  ****     const struct uECC_Curve_t * curve = uECC_secp256r1();
 252              		.loc 1 60 0
 253 0010 FFF7FEFF 		bl	uECC_secp256r1
 254 0014 0300     		movs	r3, r0
 255 0016 1393     		str	r3, [sp, #76]
  61:ecc_crypto.c  ****     
  62:ecc_crypto.c  ****     uint8_t uncompressedLocalPubKey[64] = {0};
 256              		.loc 1 62 0
 257 0018 03AB     		add	r3, sp, #12
 258 001a 1800     		movs	r0, r3
 259 001c 4023     		movs	r3, #64
 260 001e 1A00     		movs	r2, r3
 261 0020 0021     		movs	r1, #0
 262 0022 FFF7FEFF 		bl	memset
  63:ecc_crypto.c  ****     if (!uECC_make_key(uncompressedLocalPubKey, privateKey, curve)) {
 263              		.loc 1 63 0
 264 0026 139A     		ldr	r2, [sp, #76]
 265 0028 0099     		ldr	r1, [sp]
 266 002a 03AB     		add	r3, sp, #12
 267 002c 1800     		movs	r0, r3
 268 002e FFF7FEFF 		bl	uECC_make_key
 269 0032 031E     		subs	r3, r0, #0
 270 0034 01D1     		bne	.L13
  64:ecc_crypto.c  ****         return 0;
 271              		.loc 1 64 0
 272 0036 0023     		movs	r3, #0
 273 0038 25E0     		b	.L15
 274              	.L13:
  65:ecc_crypto.c  ****     }
  66:ecc_crypto.c  ****     
  67:ecc_crypto.c  ****     //DEBUG ONLY - BEGIN
  68:ecc_crypto.c  ****     //privateKey = (uint8_t *)"\xd5\x5b\x1d\x5a\x3c\x55\xe4\x76\xad\xca\x88\xa9\x19\x2a\xb1\x63\x12
  69:ecc_crypto.c  ****     //compressedPubKey = (uint8_t *)"\x03\xc2\x8f\xc9\xcf\xb2\x15\x59\xcc\xdf\x73\x4d\xda\xc4\x79\x
  70:ecc_crypto.c  ****     // END
  71:ecc_crypto.c  ****     
  72:ecc_crypto.c  ****     printf("\r\nlocal Private key = ");
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 8


 275              		.loc 1 72 0
 276 003a 154B     		ldr	r3, .L16+4
 277 003c 1800     		movs	r0, r3
 278 003e FFF7FEFF 		bl	printf
  73:ecc_crypto.c  ****     vli_print(privateKey, 32);
 279              		.loc 1 73 0
 280 0042 009B     		ldr	r3, [sp]
 281 0044 2021     		movs	r1, #32
 282 0046 1800     		movs	r0, r3
 283 0048 FFF7FEFF 		bl	vli_print
  74:ecc_crypto.c  ****     
  75:ecc_crypto.c  ****     printf("\r\nlocal public key = ");
 284              		.loc 1 75 0
 285 004c 114B     		ldr	r3, .L16+8
 286 004e 1800     		movs	r0, r3
 287 0050 FFF7FEFF 		bl	printf
  76:ecc_crypto.c  ****     vli_print(uncompressedLocalPubKey, 64);
 288              		.loc 1 76 0
 289 0054 03AB     		add	r3, sp, #12
 290 0056 4021     		movs	r1, #64
 291 0058 1800     		movs	r0, r3
 292 005a FFF7FEFF 		bl	vli_print
  77:ecc_crypto.c  ****     
  78:ecc_crypto.c  ****     uECC_compress(uncompressedLocalPubKey,compressedPubKey,curve);
 293              		.loc 1 78 0
 294 005e 139A     		ldr	r2, [sp, #76]
 295 0060 0199     		ldr	r1, [sp, #4]
 296 0062 03AB     		add	r3, sp, #12
 297 0064 1800     		movs	r0, r3
 298 0066 FFF7FEFF 		bl	uECC_compress
  79:ecc_crypto.c  ****     
  80:ecc_crypto.c  ****     printf("\r\ncompressed local public key = ");
 299              		.loc 1 80 0
 300 006a 0B4B     		ldr	r3, .L16+12
 301 006c 1800     		movs	r0, r3
 302 006e FFF7FEFF 		bl	printf
  81:ecc_crypto.c  ****     vli_print(compressedPubKey, 33);
 303              		.loc 1 81 0
 304 0072 019B     		ldr	r3, [sp, #4]
 305 0074 2121     		movs	r1, #33
 306 0076 1800     		movs	r0, r3
 307 0078 FFF7FEFF 		bl	vli_print
  82:ecc_crypto.c  ****     
  83:ecc_crypto.c  ****     printf("\r\n-------------------------end generating key pair ------------------------- \r\n");
 308              		.loc 1 83 0
 309 007c 074B     		ldr	r3, .L16+16
 310 007e 1800     		movs	r0, r3
 311 0080 FFF7FEFF 		bl	puts
  84:ecc_crypto.c  ****     return 1;
 312              		.loc 1 84 0
 313 0084 0123     		movs	r3, #1
 314              	.L15:
  85:ecc_crypto.c  **** }
 315              		.loc 1 85 0 discriminator 1
 316 0086 1800     		movs	r0, r3
 317 0088 15B0     		add	sp, sp, #84
 318              		@ sp needed
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 9


 319 008a 00BD     		pop	{pc}
 320              	.L17:
 321              		.align	2
 322              	.L16:
 323 008c E8000000 		.word	.LC14
 324 0090 80000000 		.word	.LC8
 325 0094 34010000 		.word	.LC17
 326 0098 4C010000 		.word	.LC19
 327 009c 70010000 		.word	.LC21
 328              		.cfi_endproc
 329              	.LFE38:
 330              		.size	generateKeyPair, .-generateKeyPair
 331              		.section	.rodata
 332 01bf 00       		.align	2
 333              	.LC23:
 334 01c0 0D0A2D2D 		.ascii	"\015\012------------------------- verifying signatu"
 334      2D2D2D2D 
 334      2D2D2D2D 
 334      2D2D2D2D 
 334      2D2D2D2D 
 335 01ed 7265202D 		.ascii	"re ------------------------- \015\000"
 335      2D2D2D2D 
 335      2D2D2D2D 
 335      2D2D2D2D 
 335      2D2D2D2D 
 336              		.align	2
 337              	.LC25:
 338 020c 0D0A636F 		.ascii	"\015\012compressed remote public key = \000"
 338      6D707265 
 338      73736564 
 338      2072656D 
 338      6F746520 
 339 022e 0000     		.align	2
 340              	.LC27:
 341 0230 0D0A756E 		.ascii	"\015\012uncompressed remote public key = \000"
 341      636F6D70 
 341      72657373 
 341      65642072 
 341      656D6F74 
 342              		.align	2
 343              	.LC29:
 344 0254 0D0A7265 		.ascii	"\015\012remote public key hash = \000"
 344      6D6F7465 
 344      20707562 
 344      6C696320 
 344      6B657920 
 345              		.align	2
 346              	.LC31:
 347 0270 0D0A7265 		.ascii	"\015\012remote signature = \000"
 347      6D6F7465 
 347      20736967 
 347      6E617475 
 347      7265203D 
 348 0286 0000     		.align	2
 349              	.LC33:
 350 0288 0D0A2D2D 		.ascii	"\015\012-------------------------end verifying sign"
 350      2D2D2D2D 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 10


 350      2D2D2D2D 
 350      2D2D2D2D 
 350      2D2D2D2D 
 351 02b5 61747572 		.ascii	"ature ------------------------- \015\000"
 351      65202D2D 
 351      2D2D2D2D 
 351      2D2D2D2D 
 351      2D2D2D2D 
 352              		.section	.text.verifySignature,"ax",%progbits
 353              		.align	2
 354              		.global	verifySignature
 355              		.code	16
 356              		.thumb_func
 357              		.type	verifySignature, %function
 358              	verifySignature:
 359              	.LFB39:
  86:ecc_crypto.c  **** 
  87:ecc_crypto.c  **** unsigned verifySignature(uint8_t *remotePublicKey, uint8_t *signature) {
 360              		.loc 1 87 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 216
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 00B5     		push	{lr}
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 14, -4
 367 0002 B9B0     		sub	sp, sp, #228
 368              		.cfi_def_cfa_offset 232
 369 0004 0390     		str	r0, [sp, #12]
 370 0006 0291     		str	r1, [sp, #8]
  88:ecc_crypto.c  ****     printf("\r\n------------------------- verifying signature ------------------------- \r\n");
 371              		.loc 1 88 0
 372 0008 314B     		ldr	r3, .L20
 373 000a 1800     		movs	r0, r3
 374 000c FFF7FEFF 		bl	puts
  89:ecc_crypto.c  ****     const struct uECC_Curve_t * curve = uECC_secp256r1();
 375              		.loc 1 89 0
 376 0010 FFF7FEFF 		bl	uECC_secp256r1
 377 0014 0300     		movs	r3, r0
 378 0016 3793     		str	r3, [sp, #220]
  90:ecc_crypto.c  ****     
  91:ecc_crypto.c  ****     printf("\r\ncompressed remote public key = ");
 379              		.loc 1 91 0
 380 0018 2E4B     		ldr	r3, .L20+4
 381 001a 1800     		movs	r0, r3
 382 001c FFF7FEFF 		bl	printf
  92:ecc_crypto.c  ****     vli_print(remotePublicKey, 33);
 383              		.loc 1 92 0
 384 0020 039B     		ldr	r3, [sp, #12]
 385 0022 2121     		movs	r1, #33
 386 0024 1800     		movs	r0, r3
 387 0026 FFF7FEFF 		bl	vli_print
  93:ecc_crypto.c  ****     
  94:ecc_crypto.c  ****     uint8_t uncompressedRemotePubKey[64] = {0};
 388              		.loc 1 94 0
 389 002a 26AB     		add	r3, sp, #152
 390 002c 1800     		movs	r0, r3
 391 002e 4023     		movs	r3, #64
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 11


 392 0030 1A00     		movs	r2, r3
 393 0032 0021     		movs	r1, #0
 394 0034 FFF7FEFF 		bl	memset
  95:ecc_crypto.c  ****     uECC_decompress(remotePublicKey,uncompressedRemotePubKey,curve);
 395              		.loc 1 95 0
 396 0038 379A     		ldr	r2, [sp, #220]
 397 003a 26A9     		add	r1, sp, #152
 398 003c 039B     		ldr	r3, [sp, #12]
 399 003e 1800     		movs	r0, r3
 400 0040 FFF7FEFF 		bl	uECC_decompress
  96:ecc_crypto.c  ****     
  97:ecc_crypto.c  ****     printf("\r\nuncompressed remote public key = ");
 401              		.loc 1 97 0
 402 0044 244B     		ldr	r3, .L20+8
 403 0046 1800     		movs	r0, r3
 404 0048 FFF7FEFF 		bl	printf
  98:ecc_crypto.c  ****     vli_print(uncompressedRemotePubKey, 64);
 405              		.loc 1 98 0
 406 004c 26AB     		add	r3, sp, #152
 407 004e 4021     		movs	r1, #64
 408 0050 1800     		movs	r0, r3
 409 0052 FFF7FEFF 		bl	vli_print
  99:ecc_crypto.c  ****     
 100:ecc_crypto.c  ****     uint8_t pubKeyHash[32] = {0};
 410              		.loc 1 100 0
 411 0056 1EAB     		add	r3, sp, #120
 412 0058 1800     		movs	r0, r3
 413 005a 2023     		movs	r3, #32
 414 005c 1A00     		movs	r2, r3
 415 005e 0021     		movs	r1, #0
 416 0060 FFF7FEFF 		bl	memset
 101:ecc_crypto.c  ****     sha256_t hash;
 102:ecc_crypto.c  ****     sha256_init(&hash);
 417              		.loc 1 102 0
 418 0064 04AB     		add	r3, sp, #16
 419 0066 1800     		movs	r0, r3
 420 0068 FFF7FEFF 		bl	sha256_init
 103:ecc_crypto.c  ****     sha256_update(&hash, uncompressedRemotePubKey, 64);
 421              		.loc 1 103 0
 422 006c 26A9     		add	r1, sp, #152
 423 006e 04AB     		add	r3, sp, #16
 424 0070 4022     		movs	r2, #64
 425 0072 1800     		movs	r0, r3
 426 0074 FFF7FEFF 		bl	sha256_update
 104:ecc_crypto.c  ****     sha256_final(&hash, pubKeyHash);
 427              		.loc 1 104 0
 428 0078 1EAA     		add	r2, sp, #120
 429 007a 04AB     		add	r3, sp, #16
 430 007c 1100     		movs	r1, r2
 431 007e 1800     		movs	r0, r3
 432 0080 FFF7FEFF 		bl	sha256_final
 105:ecc_crypto.c  ****     
 106:ecc_crypto.c  ****     printf("\r\nremote public key hash = ");
 433              		.loc 1 106 0
 434 0084 154B     		ldr	r3, .L20+12
 435 0086 1800     		movs	r0, r3
 436 0088 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 12


 107:ecc_crypto.c  ****     vli_print(pubKeyHash,32);
 437              		.loc 1 107 0
 438 008c 1EAB     		add	r3, sp, #120
 439 008e 2021     		movs	r1, #32
 440 0090 1800     		movs	r0, r3
 441 0092 FFF7FEFF 		bl	vli_print
 108:ecc_crypto.c  ****     
 109:ecc_crypto.c  ****     printf("\r\nremote signature = ");
 442              		.loc 1 109 0
 443 0096 124B     		ldr	r3, .L20+16
 444 0098 1800     		movs	r0, r3
 445 009a FFF7FEFF 		bl	printf
 110:ecc_crypto.c  ****     vli_print(signature,64);
 446              		.loc 1 110 0
 447 009e 029B     		ldr	r3, [sp, #8]
 448 00a0 4021     		movs	r1, #64
 449 00a2 1800     		movs	r0, r3
 450 00a4 FFF7FEFF 		bl	vli_print
 111:ecc_crypto.c  ****     
 112:ecc_crypto.c  ****     unsigned value = uECC_verify(uncompressedRemotePubKey,pubKeyHash,32,signature,curve);
 451              		.loc 1 112 0
 452 00a8 029A     		ldr	r2, [sp, #8]
 453 00aa 1EA9     		add	r1, sp, #120
 454 00ac 26A8     		add	r0, sp, #152
 455 00ae 379B     		ldr	r3, [sp, #220]
 456 00b0 0093     		str	r3, [sp]
 457 00b2 1300     		movs	r3, r2
 458 00b4 2022     		movs	r2, #32
 459 00b6 FFF7FEFF 		bl	uECC_verify
 460 00ba 0300     		movs	r3, r0
 461 00bc 3693     		str	r3, [sp, #216]
 113:ecc_crypto.c  ****     
 114:ecc_crypto.c  ****     printf("\r\n-------------------------end verifying signature ------------------------- \r\n");
 462              		.loc 1 114 0
 463 00be 094B     		ldr	r3, .L20+20
 464 00c0 1800     		movs	r0, r3
 465 00c2 FFF7FEFF 		bl	puts
 115:ecc_crypto.c  ****     return value;
 466              		.loc 1 115 0
 467 00c6 369B     		ldr	r3, [sp, #216]
 116:ecc_crypto.c  **** }
 468              		.loc 1 116 0
 469 00c8 1800     		movs	r0, r3
 470 00ca 39B0     		add	sp, sp, #228
 471              		@ sp needed
 472 00cc 00BD     		pop	{pc}
 473              	.L21:
 474 00ce C046     		.align	2
 475              	.L20:
 476 00d0 C0010000 		.word	.LC23
 477 00d4 0C020000 		.word	.LC25
 478 00d8 30020000 		.word	.LC27
 479 00dc 54020000 		.word	.LC29
 480 00e0 70020000 		.word	.LC31
 481 00e4 88020000 		.word	.LC33
 482              		.cfi_endproc
 483              	.LFE39:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 13


 484              		.size	verifySignature, .-verifySignature
 485              		.section	.rodata
 486 02d7 00       		.align	2
 487              	.LC35:
 488 02d8 0D0A2D2D 		.ascii	"\015\012------------------------- creating signatur"
 488      2D2D2D2D 
 488      2D2D2D2D 
 488      2D2D2D2D 
 488      2D2D2D2D 
 489 0305 65202D2D 		.ascii	"e ------------------------- \015\000"
 489      2D2D2D2D 
 489      2D2D2D2D 
 489      2D2D2D2D 
 489      2D2D2D2D 
 490 0323 00       		.align	2
 491              	.LC38:
 492 0324 0D0A6C6F 		.ascii	"\015\012local public key hash = \000"
 492      63616C20 
 492      7075626C 
 492      6963206B 
 492      65792068 
 493 033f 00       		.align	2
 494              	.LC40:
 495 0340 0D0A6C6F 		.ascii	"\015\012local signature = \000"
 495      63616C20 
 495      7369676E 
 495      61747572 
 495      65203D20 
 496 0355 000000   		.align	2
 497              	.LC42:
 498 0358 0D0A2D2D 		.ascii	"\015\012-------------------------end creating signa"
 498      2D2D2D2D 
 498      2D2D2D2D 
 498      2D2D2D2D 
 498      2D2D2D2D 
 499 0385 74757265 		.ascii	"ture ------------------------- \015\000"
 499      202D2D2D 
 499      2D2D2D2D 
 499      2D2D2D2D 
 499      2D2D2D2D 
 500              		.section	.text.createSignature,"ax",%progbits
 501              		.align	2
 502              		.global	createSignature
 503              		.code	16
 504              		.thumb_func
 505              		.type	createSignature, %function
 506              	createSignature:
 507              	.LFB40:
 117:ecc_crypto.c  **** 
 118:ecc_crypto.c  **** unsigned createSignature(uint8_t *localPrivateKey, uint8_t *localPublicKey, uint8_t *signature) {
 508              		.loc 1 118 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 160
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 00B5     		push	{lr}
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 14, -4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 14


 515 0002 ABB0     		sub	sp, sp, #172
 516              		.cfi_def_cfa_offset 176
 517 0004 0590     		str	r0, [sp, #20]
 518 0006 0491     		str	r1, [sp, #16]
 519 0008 0392     		str	r2, [sp, #12]
 119:ecc_crypto.c  ****     printf("\r\n------------------------- creating signature ------------------------- \r\n");
 520              		.loc 1 119 0
 521 000a 264B     		ldr	r3, .L24
 522 000c 1800     		movs	r0, r3
 523 000e FFF7FEFF 		bl	puts
 120:ecc_crypto.c  ****     const struct uECC_Curve_t * curve = uECC_secp256r1();
 524              		.loc 1 120 0
 525 0012 FFF7FEFF 		bl	uECC_secp256r1
 526 0016 0300     		movs	r3, r0
 527 0018 2993     		str	r3, [sp, #164]
 121:ecc_crypto.c  **** 
 122:ecc_crypto.c  ****     printf("\r\ncompressed local public key = ");
 528              		.loc 1 122 0
 529 001a 234B     		ldr	r3, .L24+4
 530 001c 1800     		movs	r0, r3
 531 001e FFF7FEFF 		bl	printf
 123:ecc_crypto.c  ****     vli_print(localPublicKey, 33);
 532              		.loc 1 123 0
 533 0022 049B     		ldr	r3, [sp, #16]
 534 0024 2121     		movs	r1, #33
 535 0026 1800     		movs	r0, r3
 536 0028 FFF7FEFF 		bl	vli_print
 124:ecc_crypto.c  ****     
 125:ecc_crypto.c  ****     uint8_t pubKeyHash[32] = {0};
 537              		.loc 1 125 0
 538 002c 20AB     		add	r3, sp, #128
 539 002e 1800     		movs	r0, r3
 540 0030 2023     		movs	r3, #32
 541 0032 1A00     		movs	r2, r3
 542 0034 0021     		movs	r1, #0
 543 0036 FFF7FEFF 		bl	memset
 126:ecc_crypto.c  ****     sha256_t hash;
 127:ecc_crypto.c  ****     sha256_init(&hash);
 544              		.loc 1 127 0
 545 003a 06AB     		add	r3, sp, #24
 546 003c 1800     		movs	r0, r3
 547 003e FFF7FEFF 		bl	sha256_init
 128:ecc_crypto.c  ****     sha256_update(&hash, localPublicKey, 33);
 548              		.loc 1 128 0
 549 0042 0499     		ldr	r1, [sp, #16]
 550 0044 06AB     		add	r3, sp, #24
 551 0046 2122     		movs	r2, #33
 552 0048 1800     		movs	r0, r3
 553 004a FFF7FEFF 		bl	sha256_update
 129:ecc_crypto.c  ****     sha256_final(&hash, pubKeyHash);
 554              		.loc 1 129 0
 555 004e 20AA     		add	r2, sp, #128
 556 0050 06AB     		add	r3, sp, #24
 557 0052 1100     		movs	r1, r2
 558 0054 1800     		movs	r0, r3
 559 0056 FFF7FEFF 		bl	sha256_final
 130:ecc_crypto.c  ****     
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 15


 131:ecc_crypto.c  ****     printf("\r\nlocal public key hash = ");
 560              		.loc 1 131 0
 561 005a 144B     		ldr	r3, .L24+8
 562 005c 1800     		movs	r0, r3
 563 005e FFF7FEFF 		bl	printf
 132:ecc_crypto.c  ****     vli_print(pubKeyHash,32);
 564              		.loc 1 132 0
 565 0062 20AB     		add	r3, sp, #128
 566 0064 2021     		movs	r1, #32
 567 0066 1800     		movs	r0, r3
 568 0068 FFF7FEFF 		bl	vli_print
 133:ecc_crypto.c  **** 
 134:ecc_crypto.c  ****     unsigned value = uECC_sign(localPrivateKey,pubKeyHash,32,signature,curve);
 569              		.loc 1 134 0
 570 006c 039A     		ldr	r2, [sp, #12]
 571 006e 20A9     		add	r1, sp, #128
 572 0070 0598     		ldr	r0, [sp, #20]
 573 0072 299B     		ldr	r3, [sp, #164]
 574 0074 0093     		str	r3, [sp]
 575 0076 1300     		movs	r3, r2
 576 0078 2022     		movs	r2, #32
 577 007a FFF7FEFF 		bl	uECC_sign
 578 007e 0300     		movs	r3, r0
 579 0080 2893     		str	r3, [sp, #160]
 135:ecc_crypto.c  ****     printf("\r\nlocal signature = ");
 580              		.loc 1 135 0
 581 0082 0B4B     		ldr	r3, .L24+12
 582 0084 1800     		movs	r0, r3
 583 0086 FFF7FEFF 		bl	printf
 136:ecc_crypto.c  ****     vli_print(signature,64);
 584              		.loc 1 136 0
 585 008a 039B     		ldr	r3, [sp, #12]
 586 008c 4021     		movs	r1, #64
 587 008e 1800     		movs	r0, r3
 588 0090 FFF7FEFF 		bl	vli_print
 137:ecc_crypto.c  ****     
 138:ecc_crypto.c  ****     printf("\r\n-------------------------end creating signature ------------------------- \r\n");
 589              		.loc 1 138 0
 590 0094 074B     		ldr	r3, .L24+16
 591 0096 1800     		movs	r0, r3
 592 0098 FFF7FEFF 		bl	puts
 139:ecc_crypto.c  ****     
 140:ecc_crypto.c  ****     return value;
 593              		.loc 1 140 0
 594 009c 289B     		ldr	r3, [sp, #160]
 141:ecc_crypto.c  **** }
 595              		.loc 1 141 0
 596 009e 1800     		movs	r0, r3
 597 00a0 2BB0     		add	sp, sp, #172
 598              		@ sp needed
 599 00a2 00BD     		pop	{pc}
 600              	.L25:
 601              		.align	2
 602              	.L24:
 603 00a4 D8020000 		.word	.LC35
 604 00a8 4C010000 		.word	.LC19
 605 00ac 24030000 		.word	.LC38
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 16


 606 00b0 40030000 		.word	.LC40
 607 00b4 58030000 		.word	.LC42
 608              		.cfi_endproc
 609              	.LFE40:
 610              		.size	createSignature, .-createSignature
 611              		.text
 612              	.Letext0:
 613              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 614              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 615              		.file 4 "sha256.h"
 616              		.section	.debug_info,"",%progbits
 617              	.Ldebug_info0:
 618 0000 5D030000 		.4byte	0x35d
 619 0004 0400     		.2byte	0x4
 620 0006 00000000 		.4byte	.Ldebug_abbrev0
 621 000a 04       		.byte	0x4
 622 000b 01       		.uleb128 0x1
 623 000c 41010000 		.4byte	.LASF43
 624 0010 0C       		.byte	0xc
 625 0011 FE000000 		.4byte	.LASF44
 626 0015 00000000 		.4byte	.LASF45
 627 0019 00000000 		.4byte	.Ldebug_ranges0+0
 628 001d 00000000 		.4byte	0
 629 0021 00000000 		.4byte	.Ldebug_line0
 630 0025 02       		.uleb128 0x2
 631 0026 01       		.byte	0x1
 632 0027 06       		.byte	0x6
 633 0028 2A030000 		.4byte	.LASF0
 634 002c 03       		.uleb128 0x3
 635 002d 8C000000 		.4byte	.LASF5
 636 0031 02       		.byte	0x2
 637 0032 1D       		.byte	0x1d
 638 0033 37000000 		.4byte	0x37
 639 0037 02       		.uleb128 0x2
 640 0038 01       		.byte	0x1
 641 0039 08       		.byte	0x8
 642 003a 33010000 		.4byte	.LASF1
 643 003e 02       		.uleb128 0x2
 644 003f 02       		.byte	0x2
 645 0040 05       		.byte	0x5
 646 0041 DE020000 		.4byte	.LASF2
 647 0045 02       		.uleb128 0x2
 648 0046 02       		.byte	0x2
 649 0047 07       		.byte	0x7
 650 0048 08020000 		.4byte	.LASF3
 651 004c 02       		.uleb128 0x2
 652 004d 04       		.byte	0x4
 653 004e 05       		.byte	0x5
 654 004f 0A030000 		.4byte	.LASF4
 655 0053 03       		.uleb128 0x3
 656 0054 1B020000 		.4byte	.LASF6
 657 0058 02       		.byte	0x2
 658 0059 41       		.byte	0x41
 659 005a 5E000000 		.4byte	0x5e
 660 005e 02       		.uleb128 0x2
 661 005f 04       		.byte	0x4
 662 0060 07       		.byte	0x7
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 17


 663 0061 F6010000 		.4byte	.LASF7
 664 0065 02       		.uleb128 0x2
 665 0066 08       		.byte	0x8
 666 0067 05       		.byte	0x5
 667 0068 B0020000 		.4byte	.LASF8
 668 006c 03       		.uleb128 0x3
 669 006d 13030000 		.4byte	.LASF9
 670 0071 02       		.byte	0x2
 671 0072 5B       		.byte	0x5b
 672 0073 77000000 		.4byte	0x77
 673 0077 02       		.uleb128 0x2
 674 0078 08       		.byte	0x8
 675 0079 07       		.byte	0x7
 676 007a 1C010000 		.4byte	.LASF10
 677 007e 04       		.uleb128 0x4
 678 007f 04       		.byte	0x4
 679 0080 05       		.byte	0x5
 680 0081 696E7400 		.ascii	"int\000"
 681 0085 02       		.uleb128 0x2
 682 0086 04       		.byte	0x4
 683 0087 07       		.byte	0x7
 684 0088 6C020000 		.4byte	.LASF11
 685 008c 02       		.uleb128 0x2
 686 008d 08       		.byte	0x8
 687 008e 04       		.byte	0x4
 688 008f 1E030000 		.4byte	.LASF12
 689 0093 02       		.uleb128 0x2
 690 0094 04       		.byte	0x4
 691 0095 07       		.byte	0x7
 692 0096 97020000 		.4byte	.LASF13
 693 009a 02       		.uleb128 0x2
 694 009b 01       		.byte	0x1
 695 009c 08       		.byte	0x8
 696 009d 79020000 		.4byte	.LASF14
 697 00a1 03       		.uleb128 0x3
 698 00a2 7E020000 		.4byte	.LASF15
 699 00a6 03       		.byte	0x3
 700 00a7 18       		.byte	0x18
 701 00a8 2C000000 		.4byte	0x2c
 702 00ac 03       		.uleb128 0x3
 703 00ad 01030000 		.4byte	.LASF16
 704 00b1 03       		.byte	0x3
 705 00b2 30       		.byte	0x30
 706 00b3 53000000 		.4byte	0x53
 707 00b7 03       		.uleb128 0x3
 708 00b8 F8020000 		.4byte	.LASF17
 709 00bc 03       		.byte	0x3
 710 00bd 3C       		.byte	0x3c
 711 00be 6C000000 		.4byte	0x6c
 712 00c2 02       		.uleb128 0x2
 713 00c3 04       		.byte	0x4
 714 00c4 04       		.byte	0x4
 715 00c5 16010000 		.4byte	.LASF18
 716 00c9 02       		.uleb128 0x2
 717 00ca 08       		.byte	0x8
 718 00cb 04       		.byte	0x4
 719 00cc 2C020000 		.4byte	.LASF19
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 18


 720 00d0 05       		.uleb128 0x5
 721 00d1 04       		.byte	0x4
 722 00d2 DB000000 		.4byte	0xdb
 723 00d6 06       		.uleb128 0x6
 724 00d7 E9010000 		.4byte	.LASF46
 725 00db 07       		.uleb128 0x7
 726 00dc D6000000 		.4byte	0xd6
 727 00e0 05       		.uleb128 0x5
 728 00e1 04       		.byte	0x4
 729 00e2 A1000000 		.4byte	0xa1
 730 00e6 08       		.uleb128 0x8
 731 00e7 EF020000 		.4byte	.LASF23
 732 00eb 68       		.byte	0x68
 733 00ec 04       		.byte	0x4
 734 00ed 0C       		.byte	0xc
 735 00ee 17010000 		.4byte	0x117
 736 00f2 09       		.uleb128 0x9
 737 00f3 96000000 		.4byte	.LASF20
 738 00f7 04       		.byte	0x4
 739 00f8 0E       		.byte	0xe
 740 00f9 17010000 		.4byte	0x117
 741 00fd 00       		.byte	0
 742 00fe 09       		.uleb128 0x9
 743 00ff AC000000 		.4byte	.LASF21
 744 0103 04       		.byte	0x4
 745 0104 0F       		.byte	0xf
 746 0105 B7000000 		.4byte	0xb7
 747 0109 20       		.byte	0x20
 748 010a 09       		.uleb128 0x9
 749 010b E8020000 		.4byte	.LASF22
 750 010f 04       		.byte	0x4
 751 0110 10       		.byte	0x10
 752 0111 27010000 		.4byte	0x127
 753 0115 28       		.byte	0x28
 754 0116 00       		.byte	0
 755 0117 0A       		.uleb128 0xa
 756 0118 AC000000 		.4byte	0xac
 757 011c 27010000 		.4byte	0x127
 758 0120 0B       		.uleb128 0xb
 759 0121 93000000 		.4byte	0x93
 760 0125 07       		.byte	0x7
 761 0126 00       		.byte	0
 762 0127 0A       		.uleb128 0xa
 763 0128 37000000 		.4byte	0x37
 764 012c 37010000 		.4byte	0x137
 765 0130 0B       		.uleb128 0xb
 766 0131 93000000 		.4byte	0x93
 767 0135 3F       		.byte	0x3f
 768 0136 00       		.byte	0
 769 0137 03       		.uleb128 0x3
 770 0138 EF020000 		.4byte	.LASF23
 771 013c 04       		.byte	0x4
 772 013d 11       		.byte	0x11
 773 013e E6000000 		.4byte	0xe6
 774 0142 0C       		.uleb128 0xc
 775 0143 E4000000 		.4byte	.LASF40
 776 0147 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 19


 777 0148 13       		.byte	0x13
 778 0149 00000000 		.4byte	.LFB36
 779 014d 4C000000 		.4byte	.LFE36-.LFB36
 780 0151 01       		.uleb128 0x1
 781 0152 9C       		.byte	0x9c
 782 0153 8A010000 		.4byte	0x18a
 783 0157 0D       		.uleb128 0xd
 784 0158 766C6900 		.ascii	"vli\000"
 785 015c 01       		.byte	0x1
 786 015d 13       		.byte	0x13
 787 015e E0000000 		.4byte	0xe0
 788 0162 02       		.uleb128 0x2
 789 0163 91       		.byte	0x91
 790 0164 6C       		.sleb128 -20
 791 0165 0E       		.uleb128 0xe
 792 0166 36030000 		.4byte	.LASF24
 793 016a 01       		.byte	0x1
 794 016b 13       		.byte	0x13
 795 016c 85000000 		.4byte	0x85
 796 0170 02       		.uleb128 0x2
 797 0171 91       		.byte	0x91
 798 0172 68       		.sleb128 -24
 799 0173 0F       		.uleb128 0xf
 800 0174 0E000000 		.4byte	.LBB2
 801 0178 28000000 		.4byte	.LBE2-.LBB2
 802 017c 10       		.uleb128 0x10
 803 017d 6900     		.ascii	"i\000"
 804 017f 01       		.byte	0x1
 805 0180 15       		.byte	0x15
 806 0181 85000000 		.4byte	0x85
 807 0185 02       		.uleb128 0x2
 808 0186 91       		.byte	0x91
 809 0187 74       		.sleb128 -12
 810 0188 00       		.byte	0
 811 0189 00       		.byte	0
 812 018a 11       		.uleb128 0x11
 813 018b EE000000 		.4byte	.LASF30
 814 018f 01       		.byte	0x1
 815 0190 1C       		.byte	0x1c
 816 0191 85000000 		.4byte	0x85
 817 0195 00000000 		.4byte	.LFB37
 818 0199 A4000000 		.4byte	.LFE37-.LFB37
 819 019d 01       		.uleb128 0x1
 820 019e 9C       		.byte	0x9c
 821 019f EE010000 		.4byte	0x1ee
 822 01a3 0E       		.uleb128 0xe
 823 01a4 5C020000 		.4byte	.LASF25
 824 01a8 01       		.byte	0x1
 825 01a9 1C       		.byte	0x1c
 826 01aa E0000000 		.4byte	0xe0
 827 01ae 03       		.uleb128 0x3
 828 01af 91       		.byte	0x91
 829 01b0 AC7F     		.sleb128 -84
 830 01b2 0E       		.uleb128 0xe
 831 01b3 33020000 		.4byte	.LASF26
 832 01b7 01       		.byte	0x1
 833 01b8 1C       		.byte	0x1c
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 20


 834 01b9 E0000000 		.4byte	0xe0
 835 01bd 03       		.uleb128 0x3
 836 01be 91       		.byte	0x91
 837 01bf A87F     		.sleb128 -88
 838 01c1 0E       		.uleb128 0xe
 839 01c2 3B030000 		.4byte	.LASF27
 840 01c6 01       		.byte	0x1
 841 01c7 1C       		.byte	0x1c
 842 01c8 E0000000 		.4byte	0xe0
 843 01cc 03       		.uleb128 0x3
 844 01cd 91       		.byte	0x91
 845 01ce A47F     		.sleb128 -92
 846 01d0 12       		.uleb128 0x12
 847 01d1 26020000 		.4byte	.LASF28
 848 01d5 01       		.byte	0x1
 849 01d6 1E       		.byte	0x1e
 850 01d7 D0000000 		.4byte	0xd0
 851 01db 02       		.uleb128 0x2
 852 01dc 91       		.byte	0x91
 853 01dd 74       		.sleb128 -12
 854 01de 12       		.uleb128 0x12
 855 01df 43020000 		.4byte	.LASF29
 856 01e3 01       		.byte	0x1
 857 01e4 20       		.byte	0x20
 858 01e5 EE010000 		.4byte	0x1ee
 859 01e9 03       		.uleb128 0x3
 860 01ea 91       		.byte	0x91
 861 01eb B47F     		.sleb128 -76
 862 01ed 00       		.byte	0
 863 01ee 0A       		.uleb128 0xa
 864 01ef A1000000 		.4byte	0xa1
 865 01f3 FE010000 		.4byte	0x1fe
 866 01f7 0B       		.uleb128 0xb
 867 01f8 93000000 		.4byte	0x93
 868 01fc 3F       		.byte	0x3f
 869 01fd 00       		.byte	0
 870 01fe 11       		.uleb128 0x11
 871 01ff A0020000 		.4byte	.LASF31
 872 0203 01       		.byte	0x1
 873 0204 3A       		.byte	0x3a
 874 0205 85000000 		.4byte	0x85
 875 0209 00000000 		.4byte	.LFB38
 876 020d A0000000 		.4byte	.LFE38-.LFB38
 877 0211 01       		.uleb128 0x1
 878 0212 9C       		.byte	0x9c
 879 0213 53020000 		.4byte	0x253
 880 0217 0E       		.uleb128 0xe
 881 0218 86020000 		.4byte	.LASF32
 882 021c 01       		.byte	0x1
 883 021d 3A       		.byte	0x3a
 884 021e E0000000 		.4byte	0xe0
 885 0222 03       		.uleb128 0x3
 886 0223 91       		.byte	0x91
 887 0224 AC7F     		.sleb128 -84
 888 0226 0E       		.uleb128 0xe
 889 0227 0B010000 		.4byte	.LASF33
 890 022b 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 21


 891 022c 3A       		.byte	0x3a
 892 022d E0000000 		.4byte	0xe0
 893 0231 03       		.uleb128 0x3
 894 0232 91       		.byte	0x91
 895 0233 A87F     		.sleb128 -88
 896 0235 12       		.uleb128 0x12
 897 0236 26020000 		.4byte	.LASF28
 898 023a 01       		.byte	0x1
 899 023b 3C       		.byte	0x3c
 900 023c D0000000 		.4byte	0xd0
 901 0240 02       		.uleb128 0x2
 902 0241 91       		.byte	0x91
 903 0242 74       		.sleb128 -12
 904 0243 12       		.uleb128 0x12
 905 0244 BD000000 		.4byte	.LASF34
 906 0248 01       		.byte	0x1
 907 0249 3E       		.byte	0x3e
 908 024a EE010000 		.4byte	0x1ee
 909 024e 03       		.uleb128 0x3
 910 024f 91       		.byte	0x91
 911 0250 B47F     		.sleb128 -76
 912 0252 00       		.byte	0
 913 0253 11       		.uleb128 0x11
 914 0254 CE020000 		.4byte	.LASF35
 915 0258 01       		.byte	0x1
 916 0259 57       		.byte	0x57
 917 025a 85000000 		.4byte	0x85
 918 025e 00000000 		.4byte	.LFB39
 919 0262 E8000000 		.4byte	.LFE39-.LFB39
 920 0266 01       		.uleb128 0x1
 921 0267 9C       		.byte	0x9c
 922 0268 D4020000 		.4byte	0x2d4
 923 026c 0E       		.uleb128 0xe
 924 026d 5C020000 		.4byte	.LASF25
 925 0271 01       		.byte	0x1
 926 0272 57       		.byte	0x57
 927 0273 E0000000 		.4byte	0xe0
 928 0277 03       		.uleb128 0x3
 929 0278 91       		.byte	0x91
 930 0279 A47E     		.sleb128 -220
 931 027b 0E       		.uleb128 0xe
 932 027c 9C000000 		.4byte	.LASF36
 933 0280 01       		.byte	0x1
 934 0281 57       		.byte	0x57
 935 0282 E0000000 		.4byte	0xe0
 936 0286 03       		.uleb128 0x3
 937 0287 91       		.byte	0x91
 938 0288 A07E     		.sleb128 -224
 939 028a 12       		.uleb128 0x12
 940 028b 26020000 		.4byte	.LASF28
 941 028f 01       		.byte	0x1
 942 0290 59       		.byte	0x59
 943 0291 D0000000 		.4byte	0xd0
 944 0295 02       		.uleb128 0x2
 945 0296 91       		.byte	0x91
 946 0297 74       		.sleb128 -12
 947 0298 12       		.uleb128 0x12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 22


 948 0299 43020000 		.4byte	.LASF29
 949 029d 01       		.byte	0x1
 950 029e 5E       		.byte	0x5e
 951 029f EE010000 		.4byte	0x1ee
 952 02a3 03       		.uleb128 0x3
 953 02a4 91       		.byte	0x91
 954 02a5 B07F     		.sleb128 -80
 955 02a7 12       		.uleb128 0x12
 956 02a8 B2000000 		.4byte	.LASF37
 957 02ac 01       		.byte	0x1
 958 02ad 64       		.byte	0x64
 959 02ae D4020000 		.4byte	0x2d4
 960 02b2 03       		.uleb128 0x3
 961 02b3 91       		.byte	0x91
 962 02b4 907F     		.sleb128 -112
 963 02b6 12       		.uleb128 0x12
 964 02b7 E4010000 		.4byte	.LASF38
 965 02bb 01       		.byte	0x1
 966 02bc 65       		.byte	0x65
 967 02bd 37010000 		.4byte	0x137
 968 02c1 03       		.uleb128 0x3
 969 02c2 91       		.byte	0x91
 970 02c3 A87E     		.sleb128 -216
 971 02c5 12       		.uleb128 0x12
 972 02c6 A6000000 		.4byte	.LASF39
 973 02ca 01       		.byte	0x1
 974 02cb 70       		.byte	0x70
 975 02cc 85000000 		.4byte	0x85
 976 02d0 02       		.uleb128 0x2
 977 02d1 91       		.byte	0x91
 978 02d2 70       		.sleb128 -16
 979 02d3 00       		.byte	0
 980 02d4 0A       		.uleb128 0xa
 981 02d5 A1000000 		.4byte	0xa1
 982 02d9 E4020000 		.4byte	0x2e4
 983 02dd 0B       		.uleb128 0xb
 984 02de 93000000 		.4byte	0x93
 985 02e2 1F       		.byte	0x1f
 986 02e3 00       		.byte	0
 987 02e4 13       		.uleb128 0x13
 988 02e5 BE020000 		.4byte	.LASF41
 989 02e9 01       		.byte	0x1
 990 02ea 76       		.byte	0x76
 991 02eb 85000000 		.4byte	0x85
 992 02ef 00000000 		.4byte	.LFB40
 993 02f3 B8000000 		.4byte	.LFE40-.LFB40
 994 02f7 01       		.uleb128 0x1
 995 02f8 9C       		.byte	0x9c
 996 02f9 0E       		.uleb128 0xe
 997 02fa 33020000 		.4byte	.LASF26
 998 02fe 01       		.byte	0x1
 999 02ff 76       		.byte	0x76
 1000 0300 E0000000 		.4byte	0xe0
 1001 0304 03       		.uleb128 0x3
 1002 0305 91       		.byte	0x91
 1003 0306 E47E     		.sleb128 -156
 1004 0308 0E       		.uleb128 0xe
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 23


 1005 0309 D5000000 		.4byte	.LASF42
 1006 030d 01       		.byte	0x1
 1007 030e 76       		.byte	0x76
 1008 030f E0000000 		.4byte	0xe0
 1009 0313 03       		.uleb128 0x3
 1010 0314 91       		.byte	0x91
 1011 0315 E07E     		.sleb128 -160
 1012 0317 0E       		.uleb128 0xe
 1013 0318 9C000000 		.4byte	.LASF36
 1014 031c 01       		.byte	0x1
 1015 031d 76       		.byte	0x76
 1016 031e E0000000 		.4byte	0xe0
 1017 0322 03       		.uleb128 0x3
 1018 0323 91       		.byte	0x91
 1019 0324 DC7E     		.sleb128 -164
 1020 0326 12       		.uleb128 0x12
 1021 0327 26020000 		.4byte	.LASF28
 1022 032b 01       		.byte	0x1
 1023 032c 78       		.byte	0x78
 1024 032d D0000000 		.4byte	0xd0
 1025 0331 02       		.uleb128 0x2
 1026 0332 91       		.byte	0x91
 1027 0333 74       		.sleb128 -12
 1028 0334 12       		.uleb128 0x12
 1029 0335 B2000000 		.4byte	.LASF37
 1030 0339 01       		.byte	0x1
 1031 033a 7D       		.byte	0x7d
 1032 033b D4020000 		.4byte	0x2d4
 1033 033f 02       		.uleb128 0x2
 1034 0340 91       		.byte	0x91
 1035 0341 50       		.sleb128 -48
 1036 0342 12       		.uleb128 0x12
 1037 0343 E4010000 		.4byte	.LASF38
 1038 0347 01       		.byte	0x1
 1039 0348 7E       		.byte	0x7e
 1040 0349 37010000 		.4byte	0x137
 1041 034d 03       		.uleb128 0x3
 1042 034e 91       		.byte	0x91
 1043 034f E87E     		.sleb128 -152
 1044 0351 12       		.uleb128 0x12
 1045 0352 A6000000 		.4byte	.LASF39
 1046 0356 01       		.byte	0x1
 1047 0357 86       		.byte	0x86
 1048 0358 85000000 		.4byte	0x85
 1049 035c 02       		.uleb128 0x2
 1050 035d 91       		.byte	0x91
 1051 035e 70       		.sleb128 -16
 1052 035f 00       		.byte	0
 1053 0360 00       		.byte	0
 1054              		.section	.debug_abbrev,"",%progbits
 1055              	.Ldebug_abbrev0:
 1056 0000 01       		.uleb128 0x1
 1057 0001 11       		.uleb128 0x11
 1058 0002 01       		.byte	0x1
 1059 0003 25       		.uleb128 0x25
 1060 0004 0E       		.uleb128 0xe
 1061 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 24


 1062 0006 0B       		.uleb128 0xb
 1063 0007 03       		.uleb128 0x3
 1064 0008 0E       		.uleb128 0xe
 1065 0009 1B       		.uleb128 0x1b
 1066 000a 0E       		.uleb128 0xe
 1067 000b 55       		.uleb128 0x55
 1068 000c 17       		.uleb128 0x17
 1069 000d 11       		.uleb128 0x11
 1070 000e 01       		.uleb128 0x1
 1071 000f 10       		.uleb128 0x10
 1072 0010 17       		.uleb128 0x17
 1073 0011 00       		.byte	0
 1074 0012 00       		.byte	0
 1075 0013 02       		.uleb128 0x2
 1076 0014 24       		.uleb128 0x24
 1077 0015 00       		.byte	0
 1078 0016 0B       		.uleb128 0xb
 1079 0017 0B       		.uleb128 0xb
 1080 0018 3E       		.uleb128 0x3e
 1081 0019 0B       		.uleb128 0xb
 1082 001a 03       		.uleb128 0x3
 1083 001b 0E       		.uleb128 0xe
 1084 001c 00       		.byte	0
 1085 001d 00       		.byte	0
 1086 001e 03       		.uleb128 0x3
 1087 001f 16       		.uleb128 0x16
 1088 0020 00       		.byte	0
 1089 0021 03       		.uleb128 0x3
 1090 0022 0E       		.uleb128 0xe
 1091 0023 3A       		.uleb128 0x3a
 1092 0024 0B       		.uleb128 0xb
 1093 0025 3B       		.uleb128 0x3b
 1094 0026 0B       		.uleb128 0xb
 1095 0027 49       		.uleb128 0x49
 1096 0028 13       		.uleb128 0x13
 1097 0029 00       		.byte	0
 1098 002a 00       		.byte	0
 1099 002b 04       		.uleb128 0x4
 1100 002c 24       		.uleb128 0x24
 1101 002d 00       		.byte	0
 1102 002e 0B       		.uleb128 0xb
 1103 002f 0B       		.uleb128 0xb
 1104 0030 3E       		.uleb128 0x3e
 1105 0031 0B       		.uleb128 0xb
 1106 0032 03       		.uleb128 0x3
 1107 0033 08       		.uleb128 0x8
 1108 0034 00       		.byte	0
 1109 0035 00       		.byte	0
 1110 0036 05       		.uleb128 0x5
 1111 0037 0F       		.uleb128 0xf
 1112 0038 00       		.byte	0
 1113 0039 0B       		.uleb128 0xb
 1114 003a 0B       		.uleb128 0xb
 1115 003b 49       		.uleb128 0x49
 1116 003c 13       		.uleb128 0x13
 1117 003d 00       		.byte	0
 1118 003e 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 25


 1119 003f 06       		.uleb128 0x6
 1120 0040 13       		.uleb128 0x13
 1121 0041 00       		.byte	0
 1122 0042 03       		.uleb128 0x3
 1123 0043 0E       		.uleb128 0xe
 1124 0044 3C       		.uleb128 0x3c
 1125 0045 19       		.uleb128 0x19
 1126 0046 00       		.byte	0
 1127 0047 00       		.byte	0
 1128 0048 07       		.uleb128 0x7
 1129 0049 26       		.uleb128 0x26
 1130 004a 00       		.byte	0
 1131 004b 49       		.uleb128 0x49
 1132 004c 13       		.uleb128 0x13
 1133 004d 00       		.byte	0
 1134 004e 00       		.byte	0
 1135 004f 08       		.uleb128 0x8
 1136 0050 13       		.uleb128 0x13
 1137 0051 01       		.byte	0x1
 1138 0052 03       		.uleb128 0x3
 1139 0053 0E       		.uleb128 0xe
 1140 0054 0B       		.uleb128 0xb
 1141 0055 0B       		.uleb128 0xb
 1142 0056 3A       		.uleb128 0x3a
 1143 0057 0B       		.uleb128 0xb
 1144 0058 3B       		.uleb128 0x3b
 1145 0059 0B       		.uleb128 0xb
 1146 005a 01       		.uleb128 0x1
 1147 005b 13       		.uleb128 0x13
 1148 005c 00       		.byte	0
 1149 005d 00       		.byte	0
 1150 005e 09       		.uleb128 0x9
 1151 005f 0D       		.uleb128 0xd
 1152 0060 00       		.byte	0
 1153 0061 03       		.uleb128 0x3
 1154 0062 0E       		.uleb128 0xe
 1155 0063 3A       		.uleb128 0x3a
 1156 0064 0B       		.uleb128 0xb
 1157 0065 3B       		.uleb128 0x3b
 1158 0066 0B       		.uleb128 0xb
 1159 0067 49       		.uleb128 0x49
 1160 0068 13       		.uleb128 0x13
 1161 0069 38       		.uleb128 0x38
 1162 006a 0B       		.uleb128 0xb
 1163 006b 00       		.byte	0
 1164 006c 00       		.byte	0
 1165 006d 0A       		.uleb128 0xa
 1166 006e 01       		.uleb128 0x1
 1167 006f 01       		.byte	0x1
 1168 0070 49       		.uleb128 0x49
 1169 0071 13       		.uleb128 0x13
 1170 0072 01       		.uleb128 0x1
 1171 0073 13       		.uleb128 0x13
 1172 0074 00       		.byte	0
 1173 0075 00       		.byte	0
 1174 0076 0B       		.uleb128 0xb
 1175 0077 21       		.uleb128 0x21
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 26


 1176 0078 00       		.byte	0
 1177 0079 49       		.uleb128 0x49
 1178 007a 13       		.uleb128 0x13
 1179 007b 2F       		.uleb128 0x2f
 1180 007c 0B       		.uleb128 0xb
 1181 007d 00       		.byte	0
 1182 007e 00       		.byte	0
 1183 007f 0C       		.uleb128 0xc
 1184 0080 2E       		.uleb128 0x2e
 1185 0081 01       		.byte	0x1
 1186 0082 3F       		.uleb128 0x3f
 1187 0083 19       		.uleb128 0x19
 1188 0084 03       		.uleb128 0x3
 1189 0085 0E       		.uleb128 0xe
 1190 0086 3A       		.uleb128 0x3a
 1191 0087 0B       		.uleb128 0xb
 1192 0088 3B       		.uleb128 0x3b
 1193 0089 0B       		.uleb128 0xb
 1194 008a 27       		.uleb128 0x27
 1195 008b 19       		.uleb128 0x19
 1196 008c 11       		.uleb128 0x11
 1197 008d 01       		.uleb128 0x1
 1198 008e 12       		.uleb128 0x12
 1199 008f 06       		.uleb128 0x6
 1200 0090 40       		.uleb128 0x40
 1201 0091 18       		.uleb128 0x18
 1202 0092 9642     		.uleb128 0x2116
 1203 0094 19       		.uleb128 0x19
 1204 0095 01       		.uleb128 0x1
 1205 0096 13       		.uleb128 0x13
 1206 0097 00       		.byte	0
 1207 0098 00       		.byte	0
 1208 0099 0D       		.uleb128 0xd
 1209 009a 05       		.uleb128 0x5
 1210 009b 00       		.byte	0
 1211 009c 03       		.uleb128 0x3
 1212 009d 08       		.uleb128 0x8
 1213 009e 3A       		.uleb128 0x3a
 1214 009f 0B       		.uleb128 0xb
 1215 00a0 3B       		.uleb128 0x3b
 1216 00a1 0B       		.uleb128 0xb
 1217 00a2 49       		.uleb128 0x49
 1218 00a3 13       		.uleb128 0x13
 1219 00a4 02       		.uleb128 0x2
 1220 00a5 18       		.uleb128 0x18
 1221 00a6 00       		.byte	0
 1222 00a7 00       		.byte	0
 1223 00a8 0E       		.uleb128 0xe
 1224 00a9 05       		.uleb128 0x5
 1225 00aa 00       		.byte	0
 1226 00ab 03       		.uleb128 0x3
 1227 00ac 0E       		.uleb128 0xe
 1228 00ad 3A       		.uleb128 0x3a
 1229 00ae 0B       		.uleb128 0xb
 1230 00af 3B       		.uleb128 0x3b
 1231 00b0 0B       		.uleb128 0xb
 1232 00b1 49       		.uleb128 0x49
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 27


 1233 00b2 13       		.uleb128 0x13
 1234 00b3 02       		.uleb128 0x2
 1235 00b4 18       		.uleb128 0x18
 1236 00b5 00       		.byte	0
 1237 00b6 00       		.byte	0
 1238 00b7 0F       		.uleb128 0xf
 1239 00b8 0B       		.uleb128 0xb
 1240 00b9 01       		.byte	0x1
 1241 00ba 11       		.uleb128 0x11
 1242 00bb 01       		.uleb128 0x1
 1243 00bc 12       		.uleb128 0x12
 1244 00bd 06       		.uleb128 0x6
 1245 00be 00       		.byte	0
 1246 00bf 00       		.byte	0
 1247 00c0 10       		.uleb128 0x10
 1248 00c1 34       		.uleb128 0x34
 1249 00c2 00       		.byte	0
 1250 00c3 03       		.uleb128 0x3
 1251 00c4 08       		.uleb128 0x8
 1252 00c5 3A       		.uleb128 0x3a
 1253 00c6 0B       		.uleb128 0xb
 1254 00c7 3B       		.uleb128 0x3b
 1255 00c8 0B       		.uleb128 0xb
 1256 00c9 49       		.uleb128 0x49
 1257 00ca 13       		.uleb128 0x13
 1258 00cb 02       		.uleb128 0x2
 1259 00cc 18       		.uleb128 0x18
 1260 00cd 00       		.byte	0
 1261 00ce 00       		.byte	0
 1262 00cf 11       		.uleb128 0x11
 1263 00d0 2E       		.uleb128 0x2e
 1264 00d1 01       		.byte	0x1
 1265 00d2 3F       		.uleb128 0x3f
 1266 00d3 19       		.uleb128 0x19
 1267 00d4 03       		.uleb128 0x3
 1268 00d5 0E       		.uleb128 0xe
 1269 00d6 3A       		.uleb128 0x3a
 1270 00d7 0B       		.uleb128 0xb
 1271 00d8 3B       		.uleb128 0x3b
 1272 00d9 0B       		.uleb128 0xb
 1273 00da 27       		.uleb128 0x27
 1274 00db 19       		.uleb128 0x19
 1275 00dc 49       		.uleb128 0x49
 1276 00dd 13       		.uleb128 0x13
 1277 00de 11       		.uleb128 0x11
 1278 00df 01       		.uleb128 0x1
 1279 00e0 12       		.uleb128 0x12
 1280 00e1 06       		.uleb128 0x6
 1281 00e2 40       		.uleb128 0x40
 1282 00e3 18       		.uleb128 0x18
 1283 00e4 9642     		.uleb128 0x2116
 1284 00e6 19       		.uleb128 0x19
 1285 00e7 01       		.uleb128 0x1
 1286 00e8 13       		.uleb128 0x13
 1287 00e9 00       		.byte	0
 1288 00ea 00       		.byte	0
 1289 00eb 12       		.uleb128 0x12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 28


 1290 00ec 34       		.uleb128 0x34
 1291 00ed 00       		.byte	0
 1292 00ee 03       		.uleb128 0x3
 1293 00ef 0E       		.uleb128 0xe
 1294 00f0 3A       		.uleb128 0x3a
 1295 00f1 0B       		.uleb128 0xb
 1296 00f2 3B       		.uleb128 0x3b
 1297 00f3 0B       		.uleb128 0xb
 1298 00f4 49       		.uleb128 0x49
 1299 00f5 13       		.uleb128 0x13
 1300 00f6 02       		.uleb128 0x2
 1301 00f7 18       		.uleb128 0x18
 1302 00f8 00       		.byte	0
 1303 00f9 00       		.byte	0
 1304 00fa 13       		.uleb128 0x13
 1305 00fb 2E       		.uleb128 0x2e
 1306 00fc 01       		.byte	0x1
 1307 00fd 3F       		.uleb128 0x3f
 1308 00fe 19       		.uleb128 0x19
 1309 00ff 03       		.uleb128 0x3
 1310 0100 0E       		.uleb128 0xe
 1311 0101 3A       		.uleb128 0x3a
 1312 0102 0B       		.uleb128 0xb
 1313 0103 3B       		.uleb128 0x3b
 1314 0104 0B       		.uleb128 0xb
 1315 0105 27       		.uleb128 0x27
 1316 0106 19       		.uleb128 0x19
 1317 0107 49       		.uleb128 0x49
 1318 0108 13       		.uleb128 0x13
 1319 0109 11       		.uleb128 0x11
 1320 010a 01       		.uleb128 0x1
 1321 010b 12       		.uleb128 0x12
 1322 010c 06       		.uleb128 0x6
 1323 010d 40       		.uleb128 0x40
 1324 010e 18       		.uleb128 0x18
 1325 010f 9642     		.uleb128 0x2116
 1326 0111 19       		.uleb128 0x19
 1327 0112 00       		.byte	0
 1328 0113 00       		.byte	0
 1329 0114 00       		.byte	0
 1330              		.section	.debug_aranges,"",%progbits
 1331 0000 3C000000 		.4byte	0x3c
 1332 0004 0200     		.2byte	0x2
 1333 0006 00000000 		.4byte	.Ldebug_info0
 1334 000a 04       		.byte	0x4
 1335 000b 00       		.byte	0
 1336 000c 0000     		.2byte	0
 1337 000e 0000     		.2byte	0
 1338 0010 00000000 		.4byte	.LFB36
 1339 0014 4C000000 		.4byte	.LFE36-.LFB36
 1340 0018 00000000 		.4byte	.LFB37
 1341 001c A4000000 		.4byte	.LFE37-.LFB37
 1342 0020 00000000 		.4byte	.LFB38
 1343 0024 A0000000 		.4byte	.LFE38-.LFB38
 1344 0028 00000000 		.4byte	.LFB39
 1345 002c E8000000 		.4byte	.LFE39-.LFB39
 1346 0030 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 29


 1347 0034 B8000000 		.4byte	.LFE40-.LFB40
 1348 0038 00000000 		.4byte	0
 1349 003c 00000000 		.4byte	0
 1350              		.section	.debug_ranges,"",%progbits
 1351              	.Ldebug_ranges0:
 1352 0000 00000000 		.4byte	.LFB36
 1353 0004 4C000000 		.4byte	.LFE36
 1354 0008 00000000 		.4byte	.LFB37
 1355 000c A4000000 		.4byte	.LFE37
 1356 0010 00000000 		.4byte	.LFB38
 1357 0014 A0000000 		.4byte	.LFE38
 1358 0018 00000000 		.4byte	.LFB39
 1359 001c E8000000 		.4byte	.LFE39
 1360 0020 00000000 		.4byte	.LFB40
 1361 0024 B8000000 		.4byte	.LFE40
 1362 0028 00000000 		.4byte	0
 1363 002c 00000000 		.4byte	0
 1364              		.section	.debug_line,"",%progbits
 1365              	.Ldebug_line0:
 1366 0000 DE010000 		.section	.debug_str,"MS",%progbits,1
 1366      02002C01 
 1366      00000201 
 1366      FB0E0D00 
 1366      01010101 
 1367              	.LASF45:
 1368 0000 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 1368      726F7062 
 1368      6F785C36 
 1368      5F6B7572 
 1368      735C6469 
 1369 002f 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 1369      41424C45 
 1369      5C424C45 
 1369      5F44796E 
 1369      616D6963 
 1370 0060 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 1370      796E616D 
 1370      69635F47 
 1370      4154545F 
 1370      53657276 
 1371              	.LASF5:
 1372 008c 5F5F7569 		.ascii	"__uint8_t\000"
 1372      6E74385F 
 1372      7400
 1373              	.LASF20:
 1374 0096 73746174 		.ascii	"state\000"
 1374      6500
 1375              	.LASF36:
 1376 009c 7369676E 		.ascii	"signature\000"
 1376      61747572 
 1376      6500
 1377              	.LASF39:
 1378 00a6 76616C75 		.ascii	"value\000"
 1378      6500
 1379              	.LASF21:
 1380 00ac 636F756E 		.ascii	"count\000"
 1380      7400
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 30


 1381              	.LASF37:
 1382 00b2 7075624B 		.ascii	"pubKeyHash\000"
 1382      65794861 
 1382      736800
 1383              	.LASF34:
 1384 00bd 756E636F 		.ascii	"uncompressedLocalPubKey\000"
 1384      6D707265 
 1384      73736564 
 1384      4C6F6361 
 1384      6C507562 
 1385              	.LASF42:
 1386 00d5 6C6F6361 		.ascii	"localPublicKey\000"
 1386      6C507562 
 1386      6C69634B 
 1386      657900
 1387              	.LASF40:
 1388 00e4 766C695F 		.ascii	"vli_print\000"
 1388      7072696E 
 1388      7400
 1389              	.LASF30:
 1390 00ee 63616C63 		.ascii	"calculateSecret\000"
 1390      756C6174 
 1390      65536563 
 1390      72657400 
 1391              	.LASF44:
 1392 00fe 6563635F 		.ascii	"ecc_crypto.c\000"
 1392      63727970 
 1392      746F2E63 
 1392      00
 1393              	.LASF33:
 1394 010b 70726976 		.ascii	"privateKey\000"
 1394      6174654B 
 1394      657900
 1395              	.LASF18:
 1396 0116 666C6F61 		.ascii	"float\000"
 1396      7400
 1397              	.LASF10:
 1398 011c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1398      206C6F6E 
 1398      6720756E 
 1398      7369676E 
 1398      65642069 
 1399              	.LASF1:
 1400 0133 756E7369 		.ascii	"unsigned char\000"
 1400      676E6564 
 1400      20636861 
 1400      7200
 1401              	.LASF43:
 1402 0141 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1402      43313120 
 1402      352E342E 
 1402      31203230 
 1402      31363036 
 1403 0174 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1403      20726576 
 1403      6973696F 
 1403      6E203233 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 31


 1403      37373135 
 1404 01a7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 1404      66756E63 
 1404      74696F6E 
 1404      2D736563 
 1404      74696F6E 
 1405 01da 652D706F 		.ascii	"e-pointer\000"
 1405      696E7465 
 1405      7200
 1406              	.LASF38:
 1407 01e4 68617368 		.ascii	"hash\000"
 1407      00
 1408              	.LASF46:
 1409 01e9 75454343 		.ascii	"uECC_Curve_t\000"
 1409      5F437572 
 1409      76655F74 
 1409      00
 1410              	.LASF7:
 1411 01f6 6C6F6E67 		.ascii	"long unsigned int\000"
 1411      20756E73 
 1411      69676E65 
 1411      6420696E 
 1411      7400
 1412              	.LASF3:
 1413 0208 73686F72 		.ascii	"short unsigned int\000"
 1413      7420756E 
 1413      7369676E 
 1413      65642069 
 1413      6E7400
 1414              	.LASF6:
 1415 021b 5F5F7569 		.ascii	"__uint32_t\000"
 1415      6E743332 
 1415      5F7400
 1416              	.LASF28:
 1417 0226 63757276 		.ascii	"curve\000"
 1417      6500
 1418              	.LASF19:
 1419 022c 646F7562 		.ascii	"double\000"
 1419      6C6500
 1420              	.LASF26:
 1421 0233 6C6F6361 		.ascii	"localPrivateKey\000"
 1421      6C507269 
 1421      76617465 
 1421      4B657900 
 1422              	.LASF29:
 1423 0243 756E636F 		.ascii	"uncompressedRemotePubKey\000"
 1423      6D707265 
 1423      73736564 
 1423      52656D6F 
 1423      74655075 
 1424              	.LASF25:
 1425 025c 72656D6F 		.ascii	"remotePublicKey\000"
 1425      74655075 
 1425      626C6963 
 1425      4B657900 
 1426              	.LASF11:
 1427 026c 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 32


 1427      676E6564 
 1427      20696E74 
 1427      00
 1428              	.LASF14:
 1429 0279 63686172 		.ascii	"char\000"
 1429      00
 1430              	.LASF15:
 1431 027e 75696E74 		.ascii	"uint8_t\000"
 1431      385F7400 
 1432              	.LASF32:
 1433 0286 636F6D70 		.ascii	"compressedPubKey\000"
 1433      72657373 
 1433      65645075 
 1433      624B6579 
 1433      00
 1434              	.LASF13:
 1435 0297 73697A65 		.ascii	"sizetype\000"
 1435      74797065 
 1435      00
 1436              	.LASF31:
 1437 02a0 67656E65 		.ascii	"generateKeyPair\000"
 1437      72617465 
 1437      4B657950 
 1437      61697200 
 1438              	.LASF8:
 1439 02b0 6C6F6E67 		.ascii	"long long int\000"
 1439      206C6F6E 
 1439      6720696E 
 1439      7400
 1440              	.LASF41:
 1441 02be 63726561 		.ascii	"createSignature\000"
 1441      74655369 
 1441      676E6174 
 1441      75726500 
 1442              	.LASF35:
 1443 02ce 76657269 		.ascii	"verifySignature\000"
 1443      66795369 
 1443      676E6174 
 1443      75726500 
 1444              	.LASF2:
 1445 02de 73686F72 		.ascii	"short int\000"
 1445      7420696E 
 1445      7400
 1446              	.LASF22:
 1447 02e8 62756666 		.ascii	"buffer\000"
 1447      657200
 1448              	.LASF23:
 1449 02ef 73686132 		.ascii	"sha256_t\000"
 1449      35365F74 
 1449      00
 1450              	.LASF17:
 1451 02f8 75696E74 		.ascii	"uint64_t\000"
 1451      36345F74 
 1451      00
 1452              	.LASF16:
 1453 0301 75696E74 		.ascii	"uint32_t\000"
 1453      33325F74 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccQ2HBNg.s 			page 33


 1453      00
 1454              	.LASF4:
 1455 030a 6C6F6E67 		.ascii	"long int\000"
 1455      20696E74 
 1455      00
 1456              	.LASF9:
 1457 0313 5F5F7569 		.ascii	"__uint64_t\000"
 1457      6E743634 
 1457      5F7400
 1458              	.LASF12:
 1459 031e 6C6F6E67 		.ascii	"long double\000"
 1459      20646F75 
 1459      626C6500 
 1460              	.LASF0:
 1461 032a 7369676E 		.ascii	"signed char\000"
 1461      65642063 
 1461      68617200 
 1462              	.LASF24:
 1463 0336 73697A65 		.ascii	"size\000"
 1463      00
 1464              	.LASF27:
 1465 033b 73656372 		.ascii	"secret\000"
 1465      657400
 1466              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
