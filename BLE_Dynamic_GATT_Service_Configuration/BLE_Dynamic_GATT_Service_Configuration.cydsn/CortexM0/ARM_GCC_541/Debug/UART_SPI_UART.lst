ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_SPI_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  20              		.align	2
  21              		.global	UART_SpiUartReadRxData
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_SpiUartReadRxData, %function
  25              	UART_SpiUartReadRxData:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_SPI_UART.c **** * \file UART_SPI_UART.c
   3:Generated_Source\PSoC4/UART_SPI_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  26:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  29:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 2


  31:Generated_Source\PSoC4/UART_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \addtogroup group_globals
  33:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
  45:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  47:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  28              		.loc 1 84 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 3


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
  85:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  35              		.loc 1 85 0
  36 0002 0023     		movs	r3, #0
  37 0004 0193     		str	r3, [sp, #4]
  86:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  90:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  94:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  99:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
 103:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
 107:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
 110:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
  38              		.loc 1 129 0
  39 0006 034B     		ldr	r3, .L3
  40 0008 1B68     		ldr	r3, [r3]
  41 000a 0193     		str	r3, [sp, #4]
 130:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 4


 131:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
  42              		.loc 1 133 0
  43 000c 019B     		ldr	r3, [sp, #4]
 134:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  44              		.loc 1 134 0
  45 000e 1800     		movs	r0, r3
  46 0010 02B0     		add	sp, sp, #8
  47              		@ sp needed
  48 0012 7047     		bx	lr
  49              	.L4:
  50              		.align	2
  51              	.L3:
  52 0014 40032440 		.word	1076101952
  53              		.cfi_endproc
  54              	.LFE2:
  55              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
  56              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
  57              		.align	2
  58              		.global	UART_SpiUartGetRxBufferSize
  59              		.code	16
  60              		.thumb_func
  61              		.type	UART_SpiUartGetRxBufferSize, %function
  62              	UART_SpiUartGetRxBufferSize:
  63              	.LFB3:
 135:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 147:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  64              		.loc 1 158 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 8
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 82B0     		sub	sp, sp, #8
  70              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 5


 159:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 167:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 168:Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 169:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 171:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 175:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
  71              		.loc 1 179 0
  72 0002 044B     		ldr	r3, .L7
  73 0004 1B68     		ldr	r3, [r3]
  74 0006 1F22     		movs	r2, #31
  75 0008 1340     		ands	r3, r2
  76 000a 0193     		str	r3, [sp, #4]
 180:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
  77              		.loc 1 183 0
  78 000c 019B     		ldr	r3, [sp, #4]
 184:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  79              		.loc 1 184 0
  80 000e 1800     		movs	r0, r3
  81 0010 02B0     		add	sp, sp, #8
  82              		@ sp needed
  83 0012 7047     		bx	lr
  84              	.L8:
  85              		.align	2
  86              	.L7:
  87 0014 08032440 		.word	1076101896
  88              		.cfi_endproc
  89              	.LFE3:
  90              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
  91              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
  92              		.align	2
  93              		.global	UART_SpiUartClearRxBuffer
  94              		.code	16
  95              		.thumb_func
  96              		.type	UART_SpiUartClearRxBuffer, %function
  97              	UART_SpiUartClearRxBuffer:
  98              	.LFB4:
 185:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 6


 188:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  99              		.loc 1 201 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 202:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 204:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 206:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 209:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 210:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 212:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 213:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 225:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 104              		.loc 1 228 0
 105 0000 074B     		ldr	r3, .L10
 106 0002 074A     		ldr	r2, .L10
 107 0004 1268     		ldr	r2, [r2]
 108 0006 8021     		movs	r1, #128
 109 0008 4902     		lsls	r1, r1, #9
 110 000a 0A43     		orrs	r2, r1
 111 000c 1A60     		str	r2, [r3]
 112 000e 044B     		ldr	r3, .L10
 113 0010 034A     		ldr	r2, .L10
 114 0012 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 7


 115 0014 0349     		ldr	r1, .L10+4
 116 0016 0A40     		ands	r2, r1
 117 0018 1A60     		str	r2, [r3]
 229:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 118              		.loc 1 231 0
 119 001a C046     		nop
 120              		@ sp needed
 121 001c 7047     		bx	lr
 122              	.L11:
 123 001e C046     		.align	2
 124              	.L10:
 125 0020 04032440 		.word	1076101892
 126 0024 FFFFFEFF 		.word	-65537
 127              		.cfi_endproc
 128              	.LFE4:
 129              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
 130              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
 131              		.align	2
 132              		.global	UART_SpiUartWriteTxData
 133              		.code	16
 134              		.thumb_func
 135              		.type	UART_SpiUartWriteTxData, %function
 136              	UART_SpiUartWriteTxData:
 137              	.LFB5:
 232:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 138              		.loc 1 258 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 8


 142              		@ link register save eliminated.
 143 0000 82B0     		sub	sp, sp, #8
 144              		.cfi_def_cfa_offset 8
 145 0002 0190     		str	r0, [sp, #4]
 259:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 267:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 268:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 271:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 277:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 280:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 282:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 286:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 293:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 295:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 296:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 297:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 300:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 303:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
 146              		.loc 1 309 0
 147 0004 C046     		nop
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 9


 148              	.L13:
 149              		.loc 1 309 0 is_stmt 0 discriminator 1
 150 0006 064B     		ldr	r3, .L14
 151 0008 1B68     		ldr	r3, [r3]
 152 000a 1F22     		movs	r2, #31
 153 000c 1340     		ands	r3, r2
 154 000e 082B     		cmp	r3, #8
 155 0010 F9D0     		beq	.L13
 310:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 156              		.loc 1 313 0 is_stmt 1
 157 0012 044B     		ldr	r3, .L14+4
 158 0014 019A     		ldr	r2, [sp, #4]
 159 0016 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 160              		.loc 1 316 0
 161 0018 C046     		nop
 162 001a 02B0     		add	sp, sp, #8
 163              		@ sp needed
 164 001c 7047     		bx	lr
 165              	.L15:
 166 001e C046     		.align	2
 167              	.L14:
 168 0020 08022440 		.word	1076101640
 169 0024 40022440 		.word	1076101696
 170              		.cfi_endproc
 171              	.LFE5:
 172              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
 173              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
 174              		.align	2
 175              		.global	UART_SpiUartPutArray
 176              		.code	16
 177              		.thumb_func
 178              		.type	UART_SpiUartPutArray, %function
 179              	UART_SpiUartPutArray:
 180              	.LFB6:
 317:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 10


 334:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 181              		.loc 1 341 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 16
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185 0000 00B5     		push	{lr}
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              		.cfi_def_cfa_offset 24
 190 0004 0190     		str	r0, [sp, #4]
 191 0006 0091     		str	r1, [sp]
 342:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 192              		.loc 1 344 0
 193 0008 0023     		movs	r3, #0
 194 000a 0393     		str	r3, [sp, #12]
 195 000c 09E0     		b	.L17
 196              	.L18:
 345:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 197              		.loc 1 346 0 discriminator 3
 198 000e 019A     		ldr	r2, [sp, #4]
 199 0010 039B     		ldr	r3, [sp, #12]
 200 0012 D318     		adds	r3, r2, r3
 201 0014 1B78     		ldrb	r3, [r3]
 202 0016 1800     		movs	r0, r3
 203 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 204              		.loc 1 344 0 discriminator 3
 205 001c 039B     		ldr	r3, [sp, #12]
 206 001e 0133     		adds	r3, r3, #1
 207 0020 0393     		str	r3, [sp, #12]
 208              	.L17:
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 209              		.loc 1 344 0 is_stmt 0 discriminator 1
 210 0022 039A     		ldr	r2, [sp, #12]
 211 0024 009B     		ldr	r3, [sp]
 212 0026 9A42     		cmp	r2, r3
 213 0028 F1D3     		bcc	.L18
 347:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 214              		.loc 1 348 0 is_stmt 1
 215 002a C046     		nop
 216 002c 05B0     		add	sp, sp, #20
 217              		@ sp needed
 218 002e 00BD     		pop	{pc}
 219              		.cfi_endproc
 220              	.LFE6:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 11


 221              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
 222              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
 223              		.align	2
 224              		.global	UART_SpiUartGetTxBufferSize
 225              		.code	16
 226              		.thumb_func
 227              		.type	UART_SpiUartGetTxBufferSize, %function
 228              	UART_SpiUartGetTxBufferSize:
 229              	.LFB7:
 349:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 230              		.loc 1 374 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 82B0     		sub	sp, sp, #8
 236              		.cfi_def_cfa_offset 8
 375:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 384:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 386:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 388:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 12


 390:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 392:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 237              		.loc 1 396 0
 238 0002 044B     		ldr	r3, .L21
 239 0004 1B68     		ldr	r3, [r3]
 240 0006 1F22     		movs	r2, #31
 241 0008 1340     		ands	r3, r2
 242 000a 0193     		str	r3, [sp, #4]
 397:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 243              		.loc 1 400 0
 244 000c 019B     		ldr	r3, [sp, #4]
 401:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 245              		.loc 1 401 0
 246 000e 1800     		movs	r0, r3
 247 0010 02B0     		add	sp, sp, #8
 248              		@ sp needed
 249 0012 7047     		bx	lr
 250              	.L22:
 251              		.align	2
 252              	.L21:
 253 0014 08022440 		.word	1076101640
 254              		.cfi_endproc
 255              	.LFE7:
 256              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 257              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 258              		.align	2
 259              		.global	UART_SpiUartClearTxBuffer
 260              		.code	16
 261              		.thumb_func
 262              		.type	UART_SpiUartClearTxBuffer, %function
 263              	UART_SpiUartClearTxBuffer:
 264              	.LFB8:
 402:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 13


 265              		.loc 1 418 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 419:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 423:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 426:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 428:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 429:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 430:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 433:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 270              		.loc 1 436 0
 271 0000 074B     		ldr	r3, .L24
 272 0002 074A     		ldr	r2, .L24
 273 0004 1268     		ldr	r2, [r2]
 274 0006 8021     		movs	r1, #128
 275 0008 4902     		lsls	r1, r1, #9
 276 000a 0A43     		orrs	r2, r1
 277 000c 1A60     		str	r2, [r3]
 278 000e 044B     		ldr	r3, .L24
 279 0010 034A     		ldr	r2, .L24
 280 0012 1268     		ldr	r2, [r2]
 281 0014 0349     		ldr	r1, .L24+4
 282 0016 0A40     		ands	r2, r1
 283 0018 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 284              		.loc 1 439 0
 285 001a C046     		nop
 286              		@ sp needed
 287 001c 7047     		bx	lr
 288              	.L25:
 289 001e C046     		.align	2
 290              	.L24:
 291 0020 04022440 		.word	1076101636
 292 0024 FFFFFEFF 		.word	-65537
 293              		.cfi_endproc
 294              	.LFE8:
 295              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 296              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 297              		.align	2
 298              		.global	UART_SpiUartDisableIntRx
 299              		.code	16
 300              		.thumb_func
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 14


 301              		.type	UART_SpiUartDisableIntRx, %function
 302              	UART_SpiUartDisableIntRx:
 303              	.LFB9:
 440:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 304              		.loc 1 455 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 309 0000 82B0     		sub	sp, sp, #8
 310              		.cfi_def_cfa_offset 8
 456:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 311              		.loc 1 458 0
 312 0002 054B     		ldr	r3, .L28
 313 0004 1B68     		ldr	r3, [r3]
 314 0006 0193     		str	r3, [sp, #4]
 459:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 460:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 315              		.loc 1 460 0
 316 0008 034B     		ldr	r3, .L28
 317 000a 0022     		movs	r2, #0
 318 000c 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 319              		.loc 1 462 0
 320 000e 019B     		ldr	r3, [sp, #4]
 463:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 321              		.loc 1 463 0
 322 0010 1800     		movs	r0, r3
 323 0012 02B0     		add	sp, sp, #8
 324              		@ sp needed
 325 0014 7047     		bx	lr
 326              	.L29:
 327 0016 C046     		.align	2
 328              	.L28:
 329 0018 C80F2440 		.word	1076105160
 330              		.cfi_endproc
 331              	.LFE9:
 332              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 333              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 15


 334              		.align	2
 335              		.global	UART_SpiUartDisableIntTx
 336              		.code	16
 337              		.thumb_func
 338              		.type	UART_SpiUartDisableIntTx, %function
 339              	UART_SpiUartDisableIntTx:
 340              	.LFB10:
 464:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 341              		.loc 1 477 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0000 82B0     		sub	sp, sp, #8
 347              		.cfi_def_cfa_offset 8
 478:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 348              		.loc 1 480 0
 349 0002 054B     		ldr	r3, .L32
 350 0004 1B68     		ldr	r3, [r3]
 351 0006 0193     		str	r3, [sp, #4]
 481:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 352              		.loc 1 482 0
 353 0008 034B     		ldr	r3, .L32
 354 000a 0022     		movs	r2, #0
 355 000c 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 356              		.loc 1 484 0
 357 000e 019B     		ldr	r3, [sp, #4]
 485:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 358              		.loc 1 485 0
 359 0010 1800     		movs	r0, r3
 360 0012 02B0     		add	sp, sp, #8
 361              		@ sp needed
 362 0014 7047     		bx	lr
 363              	.L33:
 364 0016 C046     		.align	2
 365              	.L32:
 366 0018 880F2440 		.word	1076105096
 367              		.cfi_endproc
 368              	.LFE10:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 16


 369              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 370              		.text
 371              	.Letext0:
 372              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 373              		.section	.debug_info,"",%progbits
 374              	.Ldebug_info0:
 375 0000 14020000 		.4byte	0x214
 376 0004 0400     		.2byte	0x4
 377 0006 00000000 		.4byte	.Ldebug_abbrev0
 378 000a 04       		.byte	0x4
 379 000b 01       		.uleb128 0x1
 380 000c 06000000 		.4byte	.LASF33
 381 0010 0C       		.byte	0xc
 382 0011 8B020000 		.4byte	.LASF34
 383 0015 4D010000 		.4byte	.LASF35
 384 0019 00000000 		.4byte	.Ldebug_ranges0+0
 385 001d 00000000 		.4byte	0
 386 0021 00000000 		.4byte	.Ldebug_line0
 387 0025 02       		.uleb128 0x2
 388 0026 01       		.byte	0x1
 389 0027 06       		.byte	0x6
 390 0028 FD020000 		.4byte	.LASF0
 391 002c 02       		.uleb128 0x2
 392 002d 01       		.byte	0x1
 393 002e 08       		.byte	0x8
 394 002f 38010000 		.4byte	.LASF1
 395 0033 02       		.uleb128 0x2
 396 0034 02       		.byte	0x2
 397 0035 05       		.byte	0x5
 398 0036 81020000 		.4byte	.LASF2
 399 003a 02       		.uleb128 0x2
 400 003b 02       		.byte	0x2
 401 003c 07       		.byte	0x7
 402 003d B6000000 		.4byte	.LASF3
 403 0041 02       		.uleb128 0x2
 404 0042 04       		.byte	0x4
 405 0043 05       		.byte	0x5
 406 0044 C9020000 		.4byte	.LASF4
 407 0048 02       		.uleb128 0x2
 408 0049 04       		.byte	0x4
 409 004a 07       		.byte	0x7
 410 004b 13010000 		.4byte	.LASF5
 411 004f 02       		.uleb128 0x2
 412 0050 08       		.byte	0x8
 413 0051 05       		.byte	0x5
 414 0052 3F020000 		.4byte	.LASF6
 415 0056 02       		.uleb128 0x2
 416 0057 08       		.byte	0x8
 417 0058 07       		.byte	0x7
 418 0059 1F020000 		.4byte	.LASF7
 419 005d 03       		.uleb128 0x3
 420 005e 04       		.byte	0x4
 421 005f 05       		.byte	0x5
 422 0060 696E7400 		.ascii	"int\000"
 423 0064 02       		.uleb128 0x2
 424 0065 04       		.byte	0x4
 425 0066 07       		.byte	0x7
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 17


 426 0067 C9000000 		.4byte	.LASF8
 427 006b 04       		.uleb128 0x4
 428 006c 25010000 		.4byte	.LASF9
 429 0070 02       		.byte	0x2
 430 0071 D201     		.2byte	0x1d2
 431 0073 2C000000 		.4byte	0x2c
 432 0077 04       		.uleb128 0x4
 433 0078 D1010000 		.4byte	.LASF10
 434 007c 02       		.byte	0x2
 435 007d D401     		.2byte	0x1d4
 436 007f 48000000 		.4byte	0x48
 437 0083 02       		.uleb128 0x2
 438 0084 04       		.byte	0x4
 439 0085 04       		.byte	0x4
 440 0086 EF000000 		.4byte	.LASF11
 441 008a 02       		.uleb128 0x2
 442 008b 08       		.byte	0x8
 443 008c 04       		.byte	0x4
 444 008d 46010000 		.4byte	.LASF12
 445 0091 02       		.uleb128 0x2
 446 0092 01       		.byte	0x1
 447 0093 08       		.byte	0x8
 448 0094 D2020000 		.4byte	.LASF13
 449 0098 04       		.uleb128 0x4
 450 0099 00000000 		.4byte	.LASF14
 451 009d 02       		.byte	0x2
 452 009e 7E02     		.2byte	0x27e
 453 00a0 A4000000 		.4byte	0xa4
 454 00a4 05       		.uleb128 0x5
 455 00a5 77000000 		.4byte	0x77
 456 00a9 02       		.uleb128 0x2
 457 00aa 08       		.byte	0x8
 458 00ab 04       		.byte	0x4
 459 00ac F1020000 		.4byte	.LASF15
 460 00b0 02       		.uleb128 0x2
 461 00b1 04       		.byte	0x4
 462 00b2 07       		.byte	0x7
 463 00b3 36020000 		.4byte	.LASF16
 464 00b7 06       		.uleb128 0x6
 465 00b8 B2020000 		.4byte	.LASF17
 466 00bc 01       		.byte	0x1
 467 00bd 53       		.byte	0x53
 468 00be 77000000 		.4byte	0x77
 469 00c2 00000000 		.4byte	.LFB2
 470 00c6 18000000 		.4byte	.LFE2-.LFB2
 471 00ca 01       		.uleb128 0x1
 472 00cb 9C       		.byte	0x9c
 473 00cc DF000000 		.4byte	0xdf
 474 00d0 07       		.uleb128 0x7
 475 00d1 2B010000 		.4byte	.LASF19
 476 00d5 01       		.byte	0x1
 477 00d6 55       		.byte	0x55
 478 00d7 77000000 		.4byte	0x77
 479 00db 02       		.uleb128 0x2
 480 00dc 91       		.byte	0x91
 481 00dd 7C       		.sleb128 -4
 482 00de 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 18


 483 00df 06       		.uleb128 0x6
 484 00e0 09030000 		.4byte	.LASF18
 485 00e4 01       		.byte	0x1
 486 00e5 9D       		.byte	0x9d
 487 00e6 77000000 		.4byte	0x77
 488 00ea 00000000 		.4byte	.LFB3
 489 00ee 18000000 		.4byte	.LFE3-.LFB3
 490 00f2 01       		.uleb128 0x1
 491 00f3 9C       		.byte	0x9c
 492 00f4 07010000 		.4byte	0x107
 493 00f8 07       		.uleb128 0x7
 494 00f9 0E010000 		.4byte	.LASF20
 495 00fd 01       		.byte	0x1
 496 00fe 9F       		.byte	0x9f
 497 00ff 77000000 		.4byte	0x77
 498 0103 02       		.uleb128 0x2
 499 0104 91       		.byte	0x91
 500 0105 7C       		.sleb128 -4
 501 0106 00       		.byte	0
 502 0107 08       		.uleb128 0x8
 503 0108 D7020000 		.4byte	.LASF27
 504 010c 01       		.byte	0x1
 505 010d C8       		.byte	0xc8
 506 010e 00000000 		.4byte	.LFB4
 507 0112 28000000 		.4byte	.LFE4-.LFB4
 508 0116 01       		.uleb128 0x1
 509 0117 9C       		.byte	0x9c
 510 0118 09       		.uleb128 0x9
 511 0119 4D020000 		.4byte	.LASF21
 512 011d 01       		.byte	0x1
 513 011e 0101     		.2byte	0x101
 514 0120 00000000 		.4byte	.LFB5
 515 0124 28000000 		.4byte	.LFE5-.LFB5
 516 0128 01       		.uleb128 0x1
 517 0129 9C       		.byte	0x9c
 518 012a 3E010000 		.4byte	0x13e
 519 012e 0A       		.uleb128 0xa
 520 012f AF000000 		.4byte	.LASF23
 521 0133 01       		.byte	0x1
 522 0134 0101     		.2byte	0x101
 523 0136 77000000 		.4byte	0x77
 524 013a 02       		.uleb128 0x2
 525 013b 91       		.byte	0x91
 526 013c 7C       		.sleb128 -4
 527 013d 00       		.byte	0
 528 013e 0B       		.uleb128 0xb
 529 013f F2010000 		.4byte	.LASF22
 530 0143 01       		.byte	0x1
 531 0144 5401     		.2byte	0x154
 532 0146 00000000 		.4byte	.LFB6
 533 014a 30000000 		.4byte	.LFE6-.LFB6
 534 014e 01       		.uleb128 0x1
 535 014f 9C       		.byte	0x9c
 536 0150 80010000 		.4byte	0x180
 537 0154 0A       		.uleb128 0xa
 538 0155 32010000 		.4byte	.LASF24
 539 0159 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 19


 540 015a 5401     		.2byte	0x154
 541 015c 80010000 		.4byte	0x180
 542 0160 02       		.uleb128 0x2
 543 0161 91       		.byte	0x91
 544 0162 6C       		.sleb128 -20
 545 0163 0A       		.uleb128 0xa
 546 0164 A9000000 		.4byte	.LASF25
 547 0168 01       		.byte	0x1
 548 0169 5401     		.2byte	0x154
 549 016b 77000000 		.4byte	0x77
 550 016f 02       		.uleb128 0x2
 551 0170 91       		.byte	0x91
 552 0171 68       		.sleb128 -24
 553 0172 0C       		.uleb128 0xc
 554 0173 6900     		.ascii	"i\000"
 555 0175 01       		.byte	0x1
 556 0176 5601     		.2byte	0x156
 557 0178 77000000 		.4byte	0x77
 558 017c 02       		.uleb128 0x2
 559 017d 91       		.byte	0x91
 560 017e 74       		.sleb128 -12
 561 017f 00       		.byte	0
 562 0180 0D       		.uleb128 0xd
 563 0181 04       		.byte	0x4
 564 0182 86010000 		.4byte	0x186
 565 0186 0E       		.uleb128 0xe
 566 0187 6B000000 		.4byte	0x6b
 567 018b 0F       		.uleb128 0xf
 568 018c 65020000 		.4byte	.LASF26
 569 0190 01       		.byte	0x1
 570 0191 7501     		.2byte	0x175
 571 0193 77000000 		.4byte	0x77
 572 0197 00000000 		.4byte	.LFB7
 573 019b 18000000 		.4byte	.LFE7-.LFB7
 574 019f 01       		.uleb128 0x1
 575 01a0 9C       		.byte	0x9c
 576 01a1 B5010000 		.4byte	0x1b5
 577 01a5 10       		.uleb128 0x10
 578 01a6 0E010000 		.4byte	.LASF20
 579 01aa 01       		.byte	0x1
 580 01ab 7701     		.2byte	0x177
 581 01ad 77000000 		.4byte	0x77
 582 01b1 02       		.uleb128 0x2
 583 01b2 91       		.byte	0x91
 584 01b3 7C       		.sleb128 -4
 585 01b4 00       		.byte	0
 586 01b5 11       		.uleb128 0x11
 587 01b6 D8010000 		.4byte	.LASF28
 588 01ba 01       		.byte	0x1
 589 01bb A101     		.2byte	0x1a1
 590 01bd 00000000 		.4byte	.LFB8
 591 01c1 28000000 		.4byte	.LFE8-.LFB8
 592 01c5 01       		.uleb128 0x1
 593 01c6 9C       		.byte	0x9c
 594 01c7 0F       		.uleb128 0xf
 595 01c8 D6000000 		.4byte	.LASF29
 596 01cc 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 20


 597 01cd C601     		.2byte	0x1c6
 598 01cf 77000000 		.4byte	0x77
 599 01d3 00000000 		.4byte	.LFB9
 600 01d7 1C000000 		.4byte	.LFE9-.LFB9
 601 01db 01       		.uleb128 0x1
 602 01dc 9C       		.byte	0x9c
 603 01dd F1010000 		.4byte	0x1f1
 604 01e1 10       		.uleb128 0x10
 605 01e2 15020000 		.4byte	.LASF30
 606 01e6 01       		.byte	0x1
 607 01e7 C801     		.2byte	0x1c8
 608 01e9 77000000 		.4byte	0x77
 609 01ed 02       		.uleb128 0x2
 610 01ee 91       		.byte	0x91
 611 01ef 7C       		.sleb128 -4
 612 01f0 00       		.byte	0
 613 01f1 12       		.uleb128 0x12
 614 01f2 F5000000 		.4byte	.LASF31
 615 01f6 01       		.byte	0x1
 616 01f7 DC01     		.2byte	0x1dc
 617 01f9 77000000 		.4byte	0x77
 618 01fd 00000000 		.4byte	.LFB10
 619 0201 1C000000 		.4byte	.LFE10-.LFB10
 620 0205 01       		.uleb128 0x1
 621 0206 9C       		.byte	0x9c
 622 0207 10       		.uleb128 0x10
 623 0208 07020000 		.4byte	.LASF32
 624 020c 01       		.byte	0x1
 625 020d DE01     		.2byte	0x1de
 626 020f 77000000 		.4byte	0x77
 627 0213 02       		.uleb128 0x2
 628 0214 91       		.byte	0x91
 629 0215 7C       		.sleb128 -4
 630 0216 00       		.byte	0
 631 0217 00       		.byte	0
 632              		.section	.debug_abbrev,"",%progbits
 633              	.Ldebug_abbrev0:
 634 0000 01       		.uleb128 0x1
 635 0001 11       		.uleb128 0x11
 636 0002 01       		.byte	0x1
 637 0003 25       		.uleb128 0x25
 638 0004 0E       		.uleb128 0xe
 639 0005 13       		.uleb128 0x13
 640 0006 0B       		.uleb128 0xb
 641 0007 03       		.uleb128 0x3
 642 0008 0E       		.uleb128 0xe
 643 0009 1B       		.uleb128 0x1b
 644 000a 0E       		.uleb128 0xe
 645 000b 55       		.uleb128 0x55
 646 000c 17       		.uleb128 0x17
 647 000d 11       		.uleb128 0x11
 648 000e 01       		.uleb128 0x1
 649 000f 10       		.uleb128 0x10
 650 0010 17       		.uleb128 0x17
 651 0011 00       		.byte	0
 652 0012 00       		.byte	0
 653 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 21


 654 0014 24       		.uleb128 0x24
 655 0015 00       		.byte	0
 656 0016 0B       		.uleb128 0xb
 657 0017 0B       		.uleb128 0xb
 658 0018 3E       		.uleb128 0x3e
 659 0019 0B       		.uleb128 0xb
 660 001a 03       		.uleb128 0x3
 661 001b 0E       		.uleb128 0xe
 662 001c 00       		.byte	0
 663 001d 00       		.byte	0
 664 001e 03       		.uleb128 0x3
 665 001f 24       		.uleb128 0x24
 666 0020 00       		.byte	0
 667 0021 0B       		.uleb128 0xb
 668 0022 0B       		.uleb128 0xb
 669 0023 3E       		.uleb128 0x3e
 670 0024 0B       		.uleb128 0xb
 671 0025 03       		.uleb128 0x3
 672 0026 08       		.uleb128 0x8
 673 0027 00       		.byte	0
 674 0028 00       		.byte	0
 675 0029 04       		.uleb128 0x4
 676 002a 16       		.uleb128 0x16
 677 002b 00       		.byte	0
 678 002c 03       		.uleb128 0x3
 679 002d 0E       		.uleb128 0xe
 680 002e 3A       		.uleb128 0x3a
 681 002f 0B       		.uleb128 0xb
 682 0030 3B       		.uleb128 0x3b
 683 0031 05       		.uleb128 0x5
 684 0032 49       		.uleb128 0x49
 685 0033 13       		.uleb128 0x13
 686 0034 00       		.byte	0
 687 0035 00       		.byte	0
 688 0036 05       		.uleb128 0x5
 689 0037 35       		.uleb128 0x35
 690 0038 00       		.byte	0
 691 0039 49       		.uleb128 0x49
 692 003a 13       		.uleb128 0x13
 693 003b 00       		.byte	0
 694 003c 00       		.byte	0
 695 003d 06       		.uleb128 0x6
 696 003e 2E       		.uleb128 0x2e
 697 003f 01       		.byte	0x1
 698 0040 3F       		.uleb128 0x3f
 699 0041 19       		.uleb128 0x19
 700 0042 03       		.uleb128 0x3
 701 0043 0E       		.uleb128 0xe
 702 0044 3A       		.uleb128 0x3a
 703 0045 0B       		.uleb128 0xb
 704 0046 3B       		.uleb128 0x3b
 705 0047 0B       		.uleb128 0xb
 706 0048 27       		.uleb128 0x27
 707 0049 19       		.uleb128 0x19
 708 004a 49       		.uleb128 0x49
 709 004b 13       		.uleb128 0x13
 710 004c 11       		.uleb128 0x11
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 22


 711 004d 01       		.uleb128 0x1
 712 004e 12       		.uleb128 0x12
 713 004f 06       		.uleb128 0x6
 714 0050 40       		.uleb128 0x40
 715 0051 18       		.uleb128 0x18
 716 0052 9742     		.uleb128 0x2117
 717 0054 19       		.uleb128 0x19
 718 0055 01       		.uleb128 0x1
 719 0056 13       		.uleb128 0x13
 720 0057 00       		.byte	0
 721 0058 00       		.byte	0
 722 0059 07       		.uleb128 0x7
 723 005a 34       		.uleb128 0x34
 724 005b 00       		.byte	0
 725 005c 03       		.uleb128 0x3
 726 005d 0E       		.uleb128 0xe
 727 005e 3A       		.uleb128 0x3a
 728 005f 0B       		.uleb128 0xb
 729 0060 3B       		.uleb128 0x3b
 730 0061 0B       		.uleb128 0xb
 731 0062 49       		.uleb128 0x49
 732 0063 13       		.uleb128 0x13
 733 0064 02       		.uleb128 0x2
 734 0065 18       		.uleb128 0x18
 735 0066 00       		.byte	0
 736 0067 00       		.byte	0
 737 0068 08       		.uleb128 0x8
 738 0069 2E       		.uleb128 0x2e
 739 006a 00       		.byte	0
 740 006b 3F       		.uleb128 0x3f
 741 006c 19       		.uleb128 0x19
 742 006d 03       		.uleb128 0x3
 743 006e 0E       		.uleb128 0xe
 744 006f 3A       		.uleb128 0x3a
 745 0070 0B       		.uleb128 0xb
 746 0071 3B       		.uleb128 0x3b
 747 0072 0B       		.uleb128 0xb
 748 0073 27       		.uleb128 0x27
 749 0074 19       		.uleb128 0x19
 750 0075 11       		.uleb128 0x11
 751 0076 01       		.uleb128 0x1
 752 0077 12       		.uleb128 0x12
 753 0078 06       		.uleb128 0x6
 754 0079 40       		.uleb128 0x40
 755 007a 18       		.uleb128 0x18
 756 007b 9742     		.uleb128 0x2117
 757 007d 19       		.uleb128 0x19
 758 007e 00       		.byte	0
 759 007f 00       		.byte	0
 760 0080 09       		.uleb128 0x9
 761 0081 2E       		.uleb128 0x2e
 762 0082 01       		.byte	0x1
 763 0083 3F       		.uleb128 0x3f
 764 0084 19       		.uleb128 0x19
 765 0085 03       		.uleb128 0x3
 766 0086 0E       		.uleb128 0xe
 767 0087 3A       		.uleb128 0x3a
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 23


 768 0088 0B       		.uleb128 0xb
 769 0089 3B       		.uleb128 0x3b
 770 008a 05       		.uleb128 0x5
 771 008b 27       		.uleb128 0x27
 772 008c 19       		.uleb128 0x19
 773 008d 11       		.uleb128 0x11
 774 008e 01       		.uleb128 0x1
 775 008f 12       		.uleb128 0x12
 776 0090 06       		.uleb128 0x6
 777 0091 40       		.uleb128 0x40
 778 0092 18       		.uleb128 0x18
 779 0093 9742     		.uleb128 0x2117
 780 0095 19       		.uleb128 0x19
 781 0096 01       		.uleb128 0x1
 782 0097 13       		.uleb128 0x13
 783 0098 00       		.byte	0
 784 0099 00       		.byte	0
 785 009a 0A       		.uleb128 0xa
 786 009b 05       		.uleb128 0x5
 787 009c 00       		.byte	0
 788 009d 03       		.uleb128 0x3
 789 009e 0E       		.uleb128 0xe
 790 009f 3A       		.uleb128 0x3a
 791 00a0 0B       		.uleb128 0xb
 792 00a1 3B       		.uleb128 0x3b
 793 00a2 05       		.uleb128 0x5
 794 00a3 49       		.uleb128 0x49
 795 00a4 13       		.uleb128 0x13
 796 00a5 02       		.uleb128 0x2
 797 00a6 18       		.uleb128 0x18
 798 00a7 00       		.byte	0
 799 00a8 00       		.byte	0
 800 00a9 0B       		.uleb128 0xb
 801 00aa 2E       		.uleb128 0x2e
 802 00ab 01       		.byte	0x1
 803 00ac 3F       		.uleb128 0x3f
 804 00ad 19       		.uleb128 0x19
 805 00ae 03       		.uleb128 0x3
 806 00af 0E       		.uleb128 0xe
 807 00b0 3A       		.uleb128 0x3a
 808 00b1 0B       		.uleb128 0xb
 809 00b2 3B       		.uleb128 0x3b
 810 00b3 05       		.uleb128 0x5
 811 00b4 27       		.uleb128 0x27
 812 00b5 19       		.uleb128 0x19
 813 00b6 11       		.uleb128 0x11
 814 00b7 01       		.uleb128 0x1
 815 00b8 12       		.uleb128 0x12
 816 00b9 06       		.uleb128 0x6
 817 00ba 40       		.uleb128 0x40
 818 00bb 18       		.uleb128 0x18
 819 00bc 9642     		.uleb128 0x2116
 820 00be 19       		.uleb128 0x19
 821 00bf 01       		.uleb128 0x1
 822 00c0 13       		.uleb128 0x13
 823 00c1 00       		.byte	0
 824 00c2 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 24


 825 00c3 0C       		.uleb128 0xc
 826 00c4 34       		.uleb128 0x34
 827 00c5 00       		.byte	0
 828 00c6 03       		.uleb128 0x3
 829 00c7 08       		.uleb128 0x8
 830 00c8 3A       		.uleb128 0x3a
 831 00c9 0B       		.uleb128 0xb
 832 00ca 3B       		.uleb128 0x3b
 833 00cb 05       		.uleb128 0x5
 834 00cc 49       		.uleb128 0x49
 835 00cd 13       		.uleb128 0x13
 836 00ce 02       		.uleb128 0x2
 837 00cf 18       		.uleb128 0x18
 838 00d0 00       		.byte	0
 839 00d1 00       		.byte	0
 840 00d2 0D       		.uleb128 0xd
 841 00d3 0F       		.uleb128 0xf
 842 00d4 00       		.byte	0
 843 00d5 0B       		.uleb128 0xb
 844 00d6 0B       		.uleb128 0xb
 845 00d7 49       		.uleb128 0x49
 846 00d8 13       		.uleb128 0x13
 847 00d9 00       		.byte	0
 848 00da 00       		.byte	0
 849 00db 0E       		.uleb128 0xe
 850 00dc 26       		.uleb128 0x26
 851 00dd 00       		.byte	0
 852 00de 49       		.uleb128 0x49
 853 00df 13       		.uleb128 0x13
 854 00e0 00       		.byte	0
 855 00e1 00       		.byte	0
 856 00e2 0F       		.uleb128 0xf
 857 00e3 2E       		.uleb128 0x2e
 858 00e4 01       		.byte	0x1
 859 00e5 3F       		.uleb128 0x3f
 860 00e6 19       		.uleb128 0x19
 861 00e7 03       		.uleb128 0x3
 862 00e8 0E       		.uleb128 0xe
 863 00e9 3A       		.uleb128 0x3a
 864 00ea 0B       		.uleb128 0xb
 865 00eb 3B       		.uleb128 0x3b
 866 00ec 05       		.uleb128 0x5
 867 00ed 27       		.uleb128 0x27
 868 00ee 19       		.uleb128 0x19
 869 00ef 49       		.uleb128 0x49
 870 00f0 13       		.uleb128 0x13
 871 00f1 11       		.uleb128 0x11
 872 00f2 01       		.uleb128 0x1
 873 00f3 12       		.uleb128 0x12
 874 00f4 06       		.uleb128 0x6
 875 00f5 40       		.uleb128 0x40
 876 00f6 18       		.uleb128 0x18
 877 00f7 9742     		.uleb128 0x2117
 878 00f9 19       		.uleb128 0x19
 879 00fa 01       		.uleb128 0x1
 880 00fb 13       		.uleb128 0x13
 881 00fc 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 25


 882 00fd 00       		.byte	0
 883 00fe 10       		.uleb128 0x10
 884 00ff 34       		.uleb128 0x34
 885 0100 00       		.byte	0
 886 0101 03       		.uleb128 0x3
 887 0102 0E       		.uleb128 0xe
 888 0103 3A       		.uleb128 0x3a
 889 0104 0B       		.uleb128 0xb
 890 0105 3B       		.uleb128 0x3b
 891 0106 05       		.uleb128 0x5
 892 0107 49       		.uleb128 0x49
 893 0108 13       		.uleb128 0x13
 894 0109 02       		.uleb128 0x2
 895 010a 18       		.uleb128 0x18
 896 010b 00       		.byte	0
 897 010c 00       		.byte	0
 898 010d 11       		.uleb128 0x11
 899 010e 2E       		.uleb128 0x2e
 900 010f 00       		.byte	0
 901 0110 3F       		.uleb128 0x3f
 902 0111 19       		.uleb128 0x19
 903 0112 03       		.uleb128 0x3
 904 0113 0E       		.uleb128 0xe
 905 0114 3A       		.uleb128 0x3a
 906 0115 0B       		.uleb128 0xb
 907 0116 3B       		.uleb128 0x3b
 908 0117 05       		.uleb128 0x5
 909 0118 27       		.uleb128 0x27
 910 0119 19       		.uleb128 0x19
 911 011a 11       		.uleb128 0x11
 912 011b 01       		.uleb128 0x1
 913 011c 12       		.uleb128 0x12
 914 011d 06       		.uleb128 0x6
 915 011e 40       		.uleb128 0x40
 916 011f 18       		.uleb128 0x18
 917 0120 9742     		.uleb128 0x2117
 918 0122 19       		.uleb128 0x19
 919 0123 00       		.byte	0
 920 0124 00       		.byte	0
 921 0125 12       		.uleb128 0x12
 922 0126 2E       		.uleb128 0x2e
 923 0127 01       		.byte	0x1
 924 0128 3F       		.uleb128 0x3f
 925 0129 19       		.uleb128 0x19
 926 012a 03       		.uleb128 0x3
 927 012b 0E       		.uleb128 0xe
 928 012c 3A       		.uleb128 0x3a
 929 012d 0B       		.uleb128 0xb
 930 012e 3B       		.uleb128 0x3b
 931 012f 05       		.uleb128 0x5
 932 0130 27       		.uleb128 0x27
 933 0131 19       		.uleb128 0x19
 934 0132 49       		.uleb128 0x49
 935 0133 13       		.uleb128 0x13
 936 0134 11       		.uleb128 0x11
 937 0135 01       		.uleb128 0x1
 938 0136 12       		.uleb128 0x12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 26


 939 0137 06       		.uleb128 0x6
 940 0138 40       		.uleb128 0x40
 941 0139 18       		.uleb128 0x18
 942 013a 9742     		.uleb128 0x2117
 943 013c 19       		.uleb128 0x19
 944 013d 00       		.byte	0
 945 013e 00       		.byte	0
 946 013f 00       		.byte	0
 947              		.section	.debug_aranges,"",%progbits
 948 0000 5C000000 		.4byte	0x5c
 949 0004 0200     		.2byte	0x2
 950 0006 00000000 		.4byte	.Ldebug_info0
 951 000a 04       		.byte	0x4
 952 000b 00       		.byte	0
 953 000c 0000     		.2byte	0
 954 000e 0000     		.2byte	0
 955 0010 00000000 		.4byte	.LFB2
 956 0014 18000000 		.4byte	.LFE2-.LFB2
 957 0018 00000000 		.4byte	.LFB3
 958 001c 18000000 		.4byte	.LFE3-.LFB3
 959 0020 00000000 		.4byte	.LFB4
 960 0024 28000000 		.4byte	.LFE4-.LFB4
 961 0028 00000000 		.4byte	.LFB5
 962 002c 28000000 		.4byte	.LFE5-.LFB5
 963 0030 00000000 		.4byte	.LFB6
 964 0034 30000000 		.4byte	.LFE6-.LFB6
 965 0038 00000000 		.4byte	.LFB7
 966 003c 18000000 		.4byte	.LFE7-.LFB7
 967 0040 00000000 		.4byte	.LFB8
 968 0044 28000000 		.4byte	.LFE8-.LFB8
 969 0048 00000000 		.4byte	.LFB9
 970 004c 1C000000 		.4byte	.LFE9-.LFB9
 971 0050 00000000 		.4byte	.LFB10
 972 0054 1C000000 		.4byte	.LFE10-.LFB10
 973 0058 00000000 		.4byte	0
 974 005c 00000000 		.4byte	0
 975              		.section	.debug_ranges,"",%progbits
 976              	.Ldebug_ranges0:
 977 0000 00000000 		.4byte	.LFB2
 978 0004 18000000 		.4byte	.LFE2
 979 0008 00000000 		.4byte	.LFB3
 980 000c 18000000 		.4byte	.LFE3
 981 0010 00000000 		.4byte	.LFB4
 982 0014 28000000 		.4byte	.LFE4
 983 0018 00000000 		.4byte	.LFB5
 984 001c 28000000 		.4byte	.LFE5
 985 0020 00000000 		.4byte	.LFB6
 986 0024 30000000 		.4byte	.LFE6
 987 0028 00000000 		.4byte	.LFB7
 988 002c 18000000 		.4byte	.LFE7
 989 0030 00000000 		.4byte	.LFB8
 990 0034 28000000 		.4byte	.LFE8
 991 0038 00000000 		.4byte	.LFB9
 992 003c 1C000000 		.4byte	.LFE9
 993 0040 00000000 		.4byte	.LFB10
 994 0044 1C000000 		.4byte	.LFE10
 995 0048 00000000 		.4byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 27


 996 004c 00000000 		.4byte	0
 997              		.section	.debug_line,"",%progbits
 998              	.Ldebug_line0:
 999 0000 1F010000 		.section	.debug_str,"MS",%progbits,1
 999      02004A00 
 999      00000201 
 999      FB0E0D00 
 999      01010101 
 1000              	.LASF14:
 1001 0000 72656733 		.ascii	"reg32\000"
 1001      3200
 1002              	.LASF33:
 1003 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1003      43313120 
 1003      352E342E 
 1003      31203230 
 1003      31363036 
 1004 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1004      20726576 
 1004      6973696F 
 1004      6E203233 
 1004      37373135 
 1005 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 1005      66756E63 
 1005      74696F6E 
 1005      2D736563 
 1005      74696F6E 
 1006 009f 652D706F 		.ascii	"e-pointer\000"
 1006      696E7465 
 1006      7200
 1007              	.LASF25:
 1008 00a9 636F756E 		.ascii	"count\000"
 1008      7400
 1009              	.LASF23:
 1010 00af 74784461 		.ascii	"txData\000"
 1010      746100
 1011              	.LASF3:
 1012 00b6 73686F72 		.ascii	"short unsigned int\000"
 1012      7420756E 
 1012      7369676E 
 1012      65642069 
 1012      6E7400
 1013              	.LASF8:
 1014 00c9 756E7369 		.ascii	"unsigned int\000"
 1014      676E6564 
 1014      20696E74 
 1014      00
 1015              	.LASF29:
 1016 00d6 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 1016      5F537069 
 1016      55617274 
 1016      44697361 
 1016      626C6549 
 1017              	.LASF11:
 1018 00ef 666C6F61 		.ascii	"float\000"
 1018      7400
 1019              	.LASF31:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 28


 1020 00f5 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 1020      5F537069 
 1020      55617274 
 1020      44697361 
 1020      626C6549 
 1021              	.LASF20:
 1022 010e 73697A65 		.ascii	"size\000"
 1022      00
 1023              	.LASF5:
 1024 0113 6C6F6E67 		.ascii	"long unsigned int\000"
 1024      20756E73 
 1024      69676E65 
 1024      6420696E 
 1024      7400
 1025              	.LASF9:
 1026 0125 75696E74 		.ascii	"uint8\000"
 1026      3800
 1027              	.LASF19:
 1028 012b 72784461 		.ascii	"rxData\000"
 1028      746100
 1029              	.LASF24:
 1030 0132 77724275 		.ascii	"wrBuf\000"
 1030      6600
 1031              	.LASF1:
 1032 0138 756E7369 		.ascii	"unsigned char\000"
 1032      676E6564 
 1032      20636861 
 1032      7200
 1033              	.LASF12:
 1034 0146 646F7562 		.ascii	"double\000"
 1034      6C6500
 1035              	.LASF35:
 1036 014d 443A5C44 		.ascii	"D:\\Dropbox\\5_kurs\\diploma\\led_lamp(for_diploma)"
 1036      726F7062 
 1036      6F785C35 
 1036      5F6B7572 
 1036      735C6469 
 1037 017c 5C424C45 		.ascii	"\\BLE_Dynamic_GATT_Service_Configuration\\BLE_Dynam"
 1037      5F44796E 
 1037      616D6963 
 1037      5F474154 
 1037      545F5365 
 1038 01ad 69635F47 		.ascii	"ic_GATT_Service_Configuration.cydsn\000"
 1038      4154545F 
 1038      53657276 
 1038      6963655F 
 1038      436F6E66 
 1039              	.LASF10:
 1040 01d1 75696E74 		.ascii	"uint32\000"
 1040      333200
 1041              	.LASF28:
 1042 01d8 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 1042      5F537069 
 1042      55617274 
 1042      436C6561 
 1042      72547842 
 1043              	.LASF22:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 29


 1044 01f2 55415254 		.ascii	"UART_SpiUartPutArray\000"
 1044      5F537069 
 1044      55617274 
 1044      50757441 
 1044      72726179 
 1045              	.LASF32:
 1046 0207 696E7453 		.ascii	"intSourceMask\000"
 1046      6F757263 
 1046      654D6173 
 1046      6B00
 1047              	.LASF30:
 1048 0215 696E7453 		.ascii	"intSource\000"
 1048      6F757263 
 1048      6500
 1049              	.LASF7:
 1050 021f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1050      206C6F6E 
 1050      6720756E 
 1050      7369676E 
 1050      65642069 
 1051              	.LASF16:
 1052 0236 73697A65 		.ascii	"sizetype\000"
 1052      74797065 
 1052      00
 1053              	.LASF6:
 1054 023f 6C6F6E67 		.ascii	"long long int\000"
 1054      206C6F6E 
 1054      6720696E 
 1054      7400
 1055              	.LASF21:
 1056 024d 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1056      5F537069 
 1056      55617274 
 1056      57726974 
 1056      65547844 
 1057              	.LASF26:
 1058 0265 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 1058      5F537069 
 1058      55617274 
 1058      47657454 
 1058      78427566 
 1059              	.LASF2:
 1060 0281 73686F72 		.ascii	"short int\000"
 1060      7420696E 
 1060      7400
 1061              	.LASF34:
 1062 028b 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 1062      72617465 
 1062      645F536F 
 1062      75726365 
 1062      5C50536F 
 1063              	.LASF17:
 1064 02b2 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1064      5F537069 
 1064      55617274 
 1064      52656164 
 1064      52784461 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cc3X5k76.s 			page 30


 1065              	.LASF4:
 1066 02c9 6C6F6E67 		.ascii	"long int\000"
 1066      20696E74 
 1066      00
 1067              	.LASF13:
 1068 02d2 63686172 		.ascii	"char\000"
 1068      00
 1069              	.LASF27:
 1070 02d7 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 1070      5F537069 
 1070      55617274 
 1070      436C6561 
 1070      72527842 
 1071              	.LASF15:
 1072 02f1 6C6F6E67 		.ascii	"long double\000"
 1072      20646F75 
 1072      626C6500 
 1073              	.LASF0:
 1074 02fd 7369676E 		.ascii	"signed char\000"
 1074      65642063 
 1074      68617200 
 1075              	.LASF18:
 1076 0309 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1076      5F537069 
 1076      55617274 
 1076      47657452 
 1076      78427566 
 1077              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
