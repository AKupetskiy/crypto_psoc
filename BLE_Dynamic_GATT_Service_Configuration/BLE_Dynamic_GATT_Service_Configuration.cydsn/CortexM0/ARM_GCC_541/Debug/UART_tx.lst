ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_tx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_tx_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	UART_tx_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_tx_SetDriveMode, %function
  25              	UART_tx_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_tx.c"
   1:Generated_Source\PSoC4/UART_tx.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART_tx.c **** * File Name: UART_tx.c  
   3:Generated_Source\PSoC4/UART_tx.c **** * Version 2.20
   4:Generated_Source\PSoC4/UART_tx.c **** *
   5:Generated_Source\PSoC4/UART_tx.c **** * Description:
   6:Generated_Source\PSoC4/UART_tx.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/UART_tx.c **** *
   8:Generated_Source\PSoC4/UART_tx.c **** ********************************************************************************
   9:Generated_Source\PSoC4/UART_tx.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/UART_tx.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/UART_tx.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/UART_tx.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/UART_tx.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/UART_tx.c **** 
  15:Generated_Source\PSoC4/UART_tx.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/UART_tx.c **** #include "UART_tx.h"
  17:Generated_Source\PSoC4/UART_tx.c **** 
  18:Generated_Source\PSoC4/UART_tx.c **** 
  19:Generated_Source\PSoC4/UART_tx.c **** #if defined(UART_tx__PC)
  20:Generated_Source\PSoC4/UART_tx.c ****     #define UART_tx_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/UART_tx.c ****     do { \
  22:Generated_Source\PSoC4/UART_tx.c ****         UART_tx_PC =   (UART_tx_PC & \
  23:Generated_Source\PSoC4/UART_tx.c ****                                 (uint32)(~(uint32)(UART_tx_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/UART_tx.c ****                                 (UART_tx_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/UART_tx.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/UART_tx.c ****                                 (UART_tx_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/UART_tx.c ****     } while (0)
  28:Generated_Source\PSoC4/UART_tx.c **** #else
  29:Generated_Source\PSoC4/UART_tx.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/UART_tx.c ****         #define UART_tx_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 2


  31:Generated_Source\PSoC4/UART_tx.c ****         do { \
  32:Generated_Source\PSoC4/UART_tx.c ****             UART_tx_USBIO_CTRL_REG = (UART_tx_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/UART_tx.c ****                                     (uint32)(~(uint32)(UART_tx_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/UART_tx.c ****                                     (UART_tx_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/UART_tx.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/UART_tx.c ****                                     (UART_tx_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/UART_tx.c ****         } while (0)
  38:Generated_Source\PSoC4/UART_tx.c ****     #endif
  39:Generated_Source\PSoC4/UART_tx.c **** #endif
  40:Generated_Source\PSoC4/UART_tx.c ****   
  41:Generated_Source\PSoC4/UART_tx.c **** 
  42:Generated_Source\PSoC4/UART_tx.c **** #if defined(UART_tx__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/UART_tx.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/UART_tx.c ****     * Function Name: UART_tx_SetDriveMode
  45:Generated_Source\PSoC4/UART_tx.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/UART_tx.c ****     *
  47:Generated_Source\PSoC4/UART_tx.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/UART_tx.c ****     * 
  49:Generated_Source\PSoC4/UART_tx.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/UART_tx.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/UART_tx.c ****     *
  52:Generated_Source\PSoC4/UART_tx.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/UART_tx.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/UART_tx.c ****     *
  55:Generated_Source\PSoC4/UART_tx.c ****     * \param mode
  56:Generated_Source\PSoC4/UART_tx.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/UART_tx.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/UART_tx.c ****     *
  59:Generated_Source\PSoC4/UART_tx.c ****     * \return
  60:Generated_Source\PSoC4/UART_tx.c ****     *  None
  61:Generated_Source\PSoC4/UART_tx.c ****     *
  62:Generated_Source\PSoC4/UART_tx.c ****     * \sideeffect
  63:Generated_Source\PSoC4/UART_tx.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/UART_tx.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/UART_tx.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/UART_tx.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/UART_tx.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/UART_tx.c ****     *
  69:Generated_Source\PSoC4/UART_tx.c ****     * \funcusage
  70:Generated_Source\PSoC4/UART_tx.c ****     *  \snippet UART_tx_SUT.c usage_UART_tx_SetDriveMode
  71:Generated_Source\PSoC4/UART_tx.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/UART_tx.c ****     void UART_tx_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/UART_tx.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
  35 0002 0200     		movs	r2, r0
  36 0004 6B46     		mov	r3, sp
  37 0006 0733     		adds	r3, r3, #7
  38 0008 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/UART_tx.c **** 		UART_tx_SetP4PinDriveMode(UART_tx__0__SHIFT, mode);
  39              		.loc 1 74 0
  40 000a 074B     		ldr	r3, .L2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 3


  41 000c 064A     		ldr	r2, .L2
  42 000e 1268     		ldr	r2, [r2]
  43 0010 0649     		ldr	r1, .L2+4
  44 0012 1140     		ands	r1, r2
  45 0014 6A46     		mov	r2, sp
  46 0016 0732     		adds	r2, r2, #7
  47 0018 1278     		ldrb	r2, [r2]
  48 001a D203     		lsls	r2, r2, #15
  49 001c 0A43     		orrs	r2, r1
  50 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/UART_tx.c ****     }
  51              		.loc 1 75 0
  52 0020 C046     		nop
  53 0022 02B0     		add	sp, sp, #8
  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 08010440 		.word	1074004232
  60 002c FF7FFCFF 		.word	-229377
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	UART_tx_SetDriveMode, .-UART_tx_SetDriveMode
  64              		.section	.text.UART_tx_Write,"ax",%progbits
  65              		.align	2
  66              		.global	UART_tx_Write
  67              		.code	16
  68              		.thumb_func
  69              		.type	UART_tx_Write, %function
  70              	UART_tx_Write:
  71              	.LFB1:
  76:Generated_Source\PSoC4/UART_tx.c **** #endif
  77:Generated_Source\PSoC4/UART_tx.c **** 
  78:Generated_Source\PSoC4/UART_tx.c **** 
  79:Generated_Source\PSoC4/UART_tx.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/UART_tx.c **** * Function Name: UART_tx_Write
  81:Generated_Source\PSoC4/UART_tx.c **** ****************************************************************************//**
  82:Generated_Source\PSoC4/UART_tx.c **** *
  83:Generated_Source\PSoC4/UART_tx.c **** * \brief Writes the value to the physical port (data output register), masking
  84:Generated_Source\PSoC4/UART_tx.c **** *  and shifting the bits appropriately. 
  85:Generated_Source\PSoC4/UART_tx.c **** *
  86:Generated_Source\PSoC4/UART_tx.c **** * The data output register controls the signal applied to the physical pin in 
  87:Generated_Source\PSoC4/UART_tx.c **** * conjunction with the drive mode parameter. This function avoids changing 
  88:Generated_Source\PSoC4/UART_tx.c **** * other bits in the port by using the appropriate method (read-modify-write or
  89:Generated_Source\PSoC4/UART_tx.c **** * bit banding).
  90:Generated_Source\PSoC4/UART_tx.c **** *
  91:Generated_Source\PSoC4/UART_tx.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  92:Generated_Source\PSoC4/UART_tx.c **** * as it is driven by the hardware signal attached to it.
  93:Generated_Source\PSoC4/UART_tx.c **** *
  94:Generated_Source\PSoC4/UART_tx.c **** * \param value
  95:Generated_Source\PSoC4/UART_tx.c **** *  Value to write to the component instance.
  96:Generated_Source\PSoC4/UART_tx.c **** *
  97:Generated_Source\PSoC4/UART_tx.c **** * \return 
  98:Generated_Source\PSoC4/UART_tx.c **** *  None 
  99:Generated_Source\PSoC4/UART_tx.c **** *
 100:Generated_Source\PSoC4/UART_tx.c **** * \sideeffect
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 4


 101:Generated_Source\PSoC4/UART_tx.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 102:Generated_Source\PSoC4/UART_tx.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 103:Generated_Source\PSoC4/UART_tx.c **** *  interrupts this function and performs writes to the Pins component data 
 104:Generated_Source\PSoC4/UART_tx.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 105:Generated_Source\PSoC4/UART_tx.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 106:Generated_Source\PSoC4/UART_tx.c **** *  this function.
 107:Generated_Source\PSoC4/UART_tx.c **** *
 108:Generated_Source\PSoC4/UART_tx.c **** * \funcusage
 109:Generated_Source\PSoC4/UART_tx.c **** *  \snippet UART_tx_SUT.c usage_UART_tx_Write
 110:Generated_Source\PSoC4/UART_tx.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/UART_tx.c **** void UART_tx_Write(uint8 value)
 112:Generated_Source\PSoC4/UART_tx.c **** {
  72              		.loc 1 112 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 84B0     		sub	sp, sp, #16
  78              		.cfi_def_cfa_offset 16
  79 0002 0200     		movs	r2, r0
  80 0004 6B46     		mov	r3, sp
  81 0006 0733     		adds	r3, r3, #7
  82 0008 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC4/UART_tx.c ****     uint8 drVal = (uint8)(UART_tx_DR & (uint8)(~UART_tx_MASK));
  83              		.loc 1 113 0
  84 000a 0F4B     		ldr	r3, .L5
  85 000c 1B68     		ldr	r3, [r3]
  86 000e DAB2     		uxtb	r2, r3
  87 0010 0F23     		movs	r3, #15
  88 0012 6B44     		add	r3, r3, sp
  89 0014 2021     		movs	r1, #32
  90 0016 8A43     		bics	r2, r1
  91 0018 1A70     		strb	r2, [r3]
 114:Generated_Source\PSoC4/UART_tx.c ****     drVal = (drVal | ((uint8)(value << UART_tx_SHIFT) & UART_tx_MASK));
  92              		.loc 1 114 0
  93 001a 6B46     		mov	r3, sp
  94 001c 0733     		adds	r3, r3, #7
  95 001e 1B78     		ldrb	r3, [r3]
  96 0020 5B01     		lsls	r3, r3, #5
  97 0022 DBB2     		uxtb	r3, r3
  98 0024 2022     		movs	r2, #32
  99 0026 1340     		ands	r3, r2
 100 0028 D9B2     		uxtb	r1, r3
 101 002a 0F23     		movs	r3, #15
 102 002c 6B44     		add	r3, r3, sp
 103 002e 0F22     		movs	r2, #15
 104 0030 6A44     		add	r2, r2, sp
 105 0032 1278     		ldrb	r2, [r2]
 106 0034 0A43     		orrs	r2, r1
 107 0036 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/UART_tx.c ****     UART_tx_DR = (uint32)drVal;
 108              		.loc 1 115 0
 109 0038 034B     		ldr	r3, .L5
 110 003a 0F22     		movs	r2, #15
 111 003c 6A44     		add	r2, r2, sp
 112 003e 1278     		ldrb	r2, [r2]
 113 0040 1A60     		str	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 5


 116:Generated_Source\PSoC4/UART_tx.c **** }
 114              		.loc 1 116 0
 115 0042 C046     		nop
 116 0044 04B0     		add	sp, sp, #16
 117              		@ sp needed
 118 0046 7047     		bx	lr
 119              	.L6:
 120              		.align	2
 121              	.L5:
 122 0048 00010440 		.word	1074004224
 123              		.cfi_endproc
 124              	.LFE1:
 125              		.size	UART_tx_Write, .-UART_tx_Write
 126              		.section	.text.UART_tx_Read,"ax",%progbits
 127              		.align	2
 128              		.global	UART_tx_Read
 129              		.code	16
 130              		.thumb_func
 131              		.type	UART_tx_Read, %function
 132              	UART_tx_Read:
 133              	.LFB2:
 117:Generated_Source\PSoC4/UART_tx.c **** 
 118:Generated_Source\PSoC4/UART_tx.c **** 
 119:Generated_Source\PSoC4/UART_tx.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/UART_tx.c **** * Function Name: UART_tx_Read
 121:Generated_Source\PSoC4/UART_tx.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/UART_tx.c **** *
 123:Generated_Source\PSoC4/UART_tx.c **** * \brief Reads the associated physical port (pin status register) and masks 
 124:Generated_Source\PSoC4/UART_tx.c **** *  the required bits according to the width and bit position of the component
 125:Generated_Source\PSoC4/UART_tx.c **** *  instance. 
 126:Generated_Source\PSoC4/UART_tx.c **** *
 127:Generated_Source\PSoC4/UART_tx.c **** * The pin's status register returns the current logic level present on the 
 128:Generated_Source\PSoC4/UART_tx.c **** * physical pin.
 129:Generated_Source\PSoC4/UART_tx.c **** *
 130:Generated_Source\PSoC4/UART_tx.c **** * \return 
 131:Generated_Source\PSoC4/UART_tx.c **** *  The current value for the pins in the component as a right justified number.
 132:Generated_Source\PSoC4/UART_tx.c **** *
 133:Generated_Source\PSoC4/UART_tx.c **** * \funcusage
 134:Generated_Source\PSoC4/UART_tx.c **** *  \snippet UART_tx_SUT.c usage_UART_tx_Read  
 135:Generated_Source\PSoC4/UART_tx.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/UART_tx.c **** uint8 UART_tx_Read(void)
 137:Generated_Source\PSoC4/UART_tx.c **** {
 134              		.loc 1 137 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 138:Generated_Source\PSoC4/UART_tx.c ****     return (uint8)((UART_tx_PS & UART_tx_MASK) >> UART_tx_SHIFT);
 139              		.loc 1 138 0
 140 0000 034B     		ldr	r3, .L9
 141 0002 1B68     		ldr	r3, [r3]
 142 0004 2022     		movs	r2, #32
 143 0006 1340     		ands	r3, r2
 144 0008 5B09     		lsrs	r3, r3, #5
 145 000a DBB2     		uxtb	r3, r3
 139:Generated_Source\PSoC4/UART_tx.c **** }
 146              		.loc 1 139 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 6


 147 000c 1800     		movs	r0, r3
 148              		@ sp needed
 149 000e 7047     		bx	lr
 150              	.L10:
 151              		.align	2
 152              	.L9:
 153 0010 04010440 		.word	1074004228
 154              		.cfi_endproc
 155              	.LFE2:
 156              		.size	UART_tx_Read, .-UART_tx_Read
 157              		.section	.text.UART_tx_ReadDataReg,"ax",%progbits
 158              		.align	2
 159              		.global	UART_tx_ReadDataReg
 160              		.code	16
 161              		.thumb_func
 162              		.type	UART_tx_ReadDataReg, %function
 163              	UART_tx_ReadDataReg:
 164              	.LFB3:
 140:Generated_Source\PSoC4/UART_tx.c **** 
 141:Generated_Source\PSoC4/UART_tx.c **** 
 142:Generated_Source\PSoC4/UART_tx.c **** /*******************************************************************************
 143:Generated_Source\PSoC4/UART_tx.c **** * Function Name: UART_tx_ReadDataReg
 144:Generated_Source\PSoC4/UART_tx.c **** ****************************************************************************//**
 145:Generated_Source\PSoC4/UART_tx.c **** *
 146:Generated_Source\PSoC4/UART_tx.c **** * \brief Reads the associated physical port's data output register and masks 
 147:Generated_Source\PSoC4/UART_tx.c **** *  the correct bits according to the width and bit position of the component 
 148:Generated_Source\PSoC4/UART_tx.c **** *  instance. 
 149:Generated_Source\PSoC4/UART_tx.c **** *
 150:Generated_Source\PSoC4/UART_tx.c **** * The data output register controls the signal applied to the physical pin in 
 151:Generated_Source\PSoC4/UART_tx.c **** * conjunction with the drive mode parameter. This is not the same as the 
 152:Generated_Source\PSoC4/UART_tx.c **** * preferred UART_tx_Read() API because the 
 153:Generated_Source\PSoC4/UART_tx.c **** * UART_tx_ReadDataReg() reads the data register instead of the status 
 154:Generated_Source\PSoC4/UART_tx.c **** * register. For output pins this is a useful function to determine the value 
 155:Generated_Source\PSoC4/UART_tx.c **** * just written to the pin.
 156:Generated_Source\PSoC4/UART_tx.c **** *
 157:Generated_Source\PSoC4/UART_tx.c **** * \return 
 158:Generated_Source\PSoC4/UART_tx.c **** *  The current value of the data register masked and shifted into a right 
 159:Generated_Source\PSoC4/UART_tx.c **** *  justified number for the component instance.
 160:Generated_Source\PSoC4/UART_tx.c **** *
 161:Generated_Source\PSoC4/UART_tx.c **** * \funcusage
 162:Generated_Source\PSoC4/UART_tx.c **** *  \snippet UART_tx_SUT.c usage_UART_tx_ReadDataReg 
 163:Generated_Source\PSoC4/UART_tx.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/UART_tx.c **** uint8 UART_tx_ReadDataReg(void)
 165:Generated_Source\PSoC4/UART_tx.c **** {
 165              		.loc 1 165 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 166:Generated_Source\PSoC4/UART_tx.c ****     return (uint8)((UART_tx_DR & UART_tx_MASK) >> UART_tx_SHIFT);
 170              		.loc 1 166 0
 171 0000 034B     		ldr	r3, .L13
 172 0002 1B68     		ldr	r3, [r3]
 173 0004 2022     		movs	r2, #32
 174 0006 1340     		ands	r3, r2
 175 0008 5B09     		lsrs	r3, r3, #5
 176 000a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 7


 167:Generated_Source\PSoC4/UART_tx.c **** }
 177              		.loc 1 167 0
 178 000c 1800     		movs	r0, r3
 179              		@ sp needed
 180 000e 7047     		bx	lr
 181              	.L14:
 182              		.align	2
 183              	.L13:
 184 0010 00010440 		.word	1074004224
 185              		.cfi_endproc
 186              	.LFE3:
 187              		.size	UART_tx_ReadDataReg, .-UART_tx_ReadDataReg
 188              		.section	.text.UART_tx_SetInterruptMode,"ax",%progbits
 189              		.align	2
 190              		.global	UART_tx_SetInterruptMode
 191              		.code	16
 192              		.thumb_func
 193              		.type	UART_tx_SetInterruptMode, %function
 194              	UART_tx_SetInterruptMode:
 195              	.LFB4:
 168:Generated_Source\PSoC4/UART_tx.c **** 
 169:Generated_Source\PSoC4/UART_tx.c **** 
 170:Generated_Source\PSoC4/UART_tx.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/UART_tx.c **** * Function Name: UART_tx_SetInterruptMode
 172:Generated_Source\PSoC4/UART_tx.c **** ****************************************************************************//**
 173:Generated_Source\PSoC4/UART_tx.c **** *
 174:Generated_Source\PSoC4/UART_tx.c **** * \brief Configures the interrupt mode for each of the Pins component's
 175:Generated_Source\PSoC4/UART_tx.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 176:Generated_Source\PSoC4/UART_tx.c **** *  specified in the Pins component.
 177:Generated_Source\PSoC4/UART_tx.c **** *
 178:Generated_Source\PSoC4/UART_tx.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 179:Generated_Source\PSoC4/UART_tx.c **** *  interrupt may trigger it.
 180:Generated_Source\PSoC4/UART_tx.c **** *
 181:Generated_Source\PSoC4/UART_tx.c **** * \param position
 182:Generated_Source\PSoC4/UART_tx.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 183:Generated_Source\PSoC4/UART_tx.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 184:Generated_Source\PSoC4/UART_tx.c **** *  component. Or you may use UART_tx_INTR_ALL to configure the
 185:Generated_Source\PSoC4/UART_tx.c **** *  interrupt mode of all the pins in the Pins component.       
 186:Generated_Source\PSoC4/UART_tx.c **** *  - UART_tx_0_INTR       (First pin in the list)
 187:Generated_Source\PSoC4/UART_tx.c **** *  - UART_tx_1_INTR       (Second pin in the list)
 188:Generated_Source\PSoC4/UART_tx.c **** *  - ...
 189:Generated_Source\PSoC4/UART_tx.c **** *  - UART_tx_INTR_ALL     (All pins in Pins component)
 190:Generated_Source\PSoC4/UART_tx.c **** *
 191:Generated_Source\PSoC4/UART_tx.c **** * \param mode
 192:Generated_Source\PSoC4/UART_tx.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 193:Generated_Source\PSoC4/UART_tx.c **** *  \ref intrMode.
 194:Generated_Source\PSoC4/UART_tx.c **** *
 195:Generated_Source\PSoC4/UART_tx.c **** * \return 
 196:Generated_Source\PSoC4/UART_tx.c **** *  None
 197:Generated_Source\PSoC4/UART_tx.c **** *  
 198:Generated_Source\PSoC4/UART_tx.c **** * \sideeffect
 199:Generated_Source\PSoC4/UART_tx.c **** *  It is recommended that the interrupt be disabled before calling this 
 200:Generated_Source\PSoC4/UART_tx.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 201:Generated_Source\PSoC4/UART_tx.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 202:Generated_Source\PSoC4/UART_tx.c **** *  port.
 203:Generated_Source\PSoC4/UART_tx.c **** *
 204:Generated_Source\PSoC4/UART_tx.c **** * \funcusage
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 8


 205:Generated_Source\PSoC4/UART_tx.c **** *  \snippet UART_tx_SUT.c usage_UART_tx_SetInterruptMode
 206:Generated_Source\PSoC4/UART_tx.c **** *******************************************************************************/
 207:Generated_Source\PSoC4/UART_tx.c **** void UART_tx_SetInterruptMode(uint16 position, uint16 mode)
 208:Generated_Source\PSoC4/UART_tx.c **** {
 196              		.loc 1 208 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201 0000 84B0     		sub	sp, sp, #16
 202              		.cfi_def_cfa_offset 16
 203 0002 0200     		movs	r2, r0
 204 0004 6B46     		mov	r3, sp
 205 0006 0633     		adds	r3, r3, #6
 206 0008 1A80     		strh	r2, [r3]
 207 000a 01AB     		add	r3, sp, #4
 208 000c 0A1C     		adds	r2, r1, #0
 209 000e 1A80     		strh	r2, [r3]
 209:Generated_Source\PSoC4/UART_tx.c ****     uint32 intrCfg;
 210:Generated_Source\PSoC4/UART_tx.c ****     
 211:Generated_Source\PSoC4/UART_tx.c ****     intrCfg =  UART_tx_INTCFG & (uint32)(~(uint32)position);
 210              		.loc 1 211 0
 211 0010 0B4B     		ldr	r3, .L16
 212 0012 1B68     		ldr	r3, [r3]
 213 0014 6A46     		mov	r2, sp
 214 0016 0632     		adds	r2, r2, #6
 215 0018 1288     		ldrh	r2, [r2]
 216 001a D243     		mvns	r2, r2
 217 001c 1340     		ands	r3, r2
 218 001e 0393     		str	r3, [sp, #12]
 212:Generated_Source\PSoC4/UART_tx.c ****     UART_tx_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 219              		.loc 1 212 0
 220 0020 074B     		ldr	r3, .L16
 221 0022 6A46     		mov	r2, sp
 222 0024 0632     		adds	r2, r2, #6
 223 0026 01A9     		add	r1, sp, #4
 224 0028 1288     		ldrh	r2, [r2]
 225 002a 0988     		ldrh	r1, [r1]
 226 002c 0A40     		ands	r2, r1
 227 002e 92B2     		uxth	r2, r2
 228 0030 1100     		movs	r1, r2
 229 0032 039A     		ldr	r2, [sp, #12]
 230 0034 0A43     		orrs	r2, r1
 231 0036 1A60     		str	r2, [r3]
 213:Generated_Source\PSoC4/UART_tx.c **** }
 232              		.loc 1 213 0
 233 0038 C046     		nop
 234 003a 04B0     		add	sp, sp, #16
 235              		@ sp needed
 236 003c 7047     		bx	lr
 237              	.L17:
 238 003e C046     		.align	2
 239              	.L16:
 240 0040 0C010440 		.word	1074004236
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	UART_tx_SetInterruptMode, .-UART_tx_SetInterruptMode
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 9


 244              		.section	.text.UART_tx_ClearInterrupt,"ax",%progbits
 245              		.align	2
 246              		.global	UART_tx_ClearInterrupt
 247              		.code	16
 248              		.thumb_func
 249              		.type	UART_tx_ClearInterrupt, %function
 250              	UART_tx_ClearInterrupt:
 251              	.LFB5:
 214:Generated_Source\PSoC4/UART_tx.c **** 
 215:Generated_Source\PSoC4/UART_tx.c **** 
 216:Generated_Source\PSoC4/UART_tx.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/UART_tx.c **** * Function Name: UART_tx_ClearInterrupt
 218:Generated_Source\PSoC4/UART_tx.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/UART_tx.c **** *
 220:Generated_Source\PSoC4/UART_tx.c **** * \brief Clears any active interrupts attached with the component and returns 
 221:Generated_Source\PSoC4/UART_tx.c **** *  the value of the interrupt status register allowing determination of which
 222:Generated_Source\PSoC4/UART_tx.c **** *  pins generated an interrupt event.
 223:Generated_Source\PSoC4/UART_tx.c **** *
 224:Generated_Source\PSoC4/UART_tx.c **** * \return 
 225:Generated_Source\PSoC4/UART_tx.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 226:Generated_Source\PSoC4/UART_tx.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 227:Generated_Source\PSoC4/UART_tx.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 228:Generated_Source\PSoC4/UART_tx.c **** *  
 229:Generated_Source\PSoC4/UART_tx.c **** * \sideeffect
 230:Generated_Source\PSoC4/UART_tx.c **** *  Clears all bits of the physical port's interrupt status register, not just
 231:Generated_Source\PSoC4/UART_tx.c **** *  those associated with the Pins component.
 232:Generated_Source\PSoC4/UART_tx.c **** *
 233:Generated_Source\PSoC4/UART_tx.c **** * \funcusage
 234:Generated_Source\PSoC4/UART_tx.c **** *  \snippet UART_tx_SUT.c usage_UART_tx_ClearInterrupt
 235:Generated_Source\PSoC4/UART_tx.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/UART_tx.c **** uint8 UART_tx_ClearInterrupt(void)
 237:Generated_Source\PSoC4/UART_tx.c **** {
 252              		.loc 1 237 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 8
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0000 82B0     		sub	sp, sp, #8
 258              		.cfi_def_cfa_offset 8
 238:Generated_Source\PSoC4/UART_tx.c **** 	uint8 maskedStatus = (uint8)(UART_tx_INTSTAT & UART_tx_MASK);
 259              		.loc 1 238 0
 260 0002 0A4B     		ldr	r3, .L20
 261 0004 1B68     		ldr	r3, [r3]
 262 0006 DAB2     		uxtb	r2, r3
 263 0008 6B46     		mov	r3, sp
 264 000a 0733     		adds	r3, r3, #7
 265 000c 2021     		movs	r1, #32
 266 000e 0A40     		ands	r2, r1
 267 0010 1A70     		strb	r2, [r3]
 239:Generated_Source\PSoC4/UART_tx.c **** 	UART_tx_INTSTAT = maskedStatus;
 268              		.loc 1 239 0
 269 0012 064B     		ldr	r3, .L20
 270 0014 6A46     		mov	r2, sp
 271 0016 0732     		adds	r2, r2, #7
 272 0018 1278     		ldrb	r2, [r2]
 273 001a 1A60     		str	r2, [r3]
 240:Generated_Source\PSoC4/UART_tx.c ****     return maskedStatus >> UART_tx_SHIFT;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 10


 274              		.loc 1 240 0
 275 001c 6B46     		mov	r3, sp
 276 001e 0733     		adds	r3, r3, #7
 277 0020 1B78     		ldrb	r3, [r3]
 278 0022 5B09     		lsrs	r3, r3, #5
 279 0024 DBB2     		uxtb	r3, r3
 241:Generated_Source\PSoC4/UART_tx.c **** }
 280              		.loc 1 241 0
 281 0026 1800     		movs	r0, r3
 282 0028 02B0     		add	sp, sp, #8
 283              		@ sp needed
 284 002a 7047     		bx	lr
 285              	.L21:
 286              		.align	2
 287              	.L20:
 288 002c 10010440 		.word	1074004240
 289              		.cfi_endproc
 290              	.LFE5:
 291              		.size	UART_tx_ClearInterrupt, .-UART_tx_ClearInterrupt
 292              		.text
 293              	.Letext0:
 294              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 295              		.section	.debug_info,"",%progbits
 296              	.Ldebug_info0:
 297 0000 96010000 		.4byte	0x196
 298 0004 0400     		.2byte	0x4
 299 0006 00000000 		.4byte	.Ldebug_abbrev0
 300 000a 04       		.byte	0x4
 301 000b 01       		.uleb128 0x1
 302 000c 06000000 		.4byte	.LASF28
 303 0010 0C       		.byte	0xc
 304 0011 44020000 		.4byte	.LASF29
 305 0015 AF000000 		.4byte	.LASF30
 306 0019 00000000 		.4byte	.Ldebug_ranges0+0
 307 001d 00000000 		.4byte	0
 308 0021 00000000 		.4byte	.Ldebug_line0
 309 0025 02       		.uleb128 0x2
 310 0026 01       		.byte	0x1
 311 0027 06       		.byte	0x6
 312 0028 97020000 		.4byte	.LASF0
 313 002c 02       		.uleb128 0x2
 314 002d 01       		.byte	0x1
 315 002e 08       		.byte	0x8
 316 002f 41010000 		.4byte	.LASF1
 317 0033 02       		.uleb128 0x2
 318 0034 02       		.byte	0x2
 319 0035 05       		.byte	0x5
 320 0036 7E020000 		.4byte	.LASF2
 321 003a 02       		.uleb128 0x2
 322 003b 02       		.byte	0x2
 323 003c 07       		.byte	0x7
 324 003d 75010000 		.4byte	.LASF3
 325 0041 02       		.uleb128 0x2
 326 0042 04       		.byte	0x4
 327 0043 05       		.byte	0x5
 328 0044 8E020000 		.4byte	.LASF4
 329 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 11


 330 0049 04       		.byte	0x4
 331 004a 07       		.byte	0x7
 332 004b 55010000 		.4byte	.LASF5
 333 004f 02       		.uleb128 0x2
 334 0050 08       		.byte	0x8
 335 0051 05       		.byte	0x5
 336 0052 0F020000 		.4byte	.LASF6
 337 0056 02       		.uleb128 0x2
 338 0057 08       		.byte	0x8
 339 0058 07       		.byte	0x7
 340 0059 D2010000 		.4byte	.LASF7
 341 005d 03       		.uleb128 0x3
 342 005e 04       		.byte	0x4
 343 005f 05       		.byte	0x5
 344 0060 696E7400 		.ascii	"int\000"
 345 0064 02       		.uleb128 0x2
 346 0065 04       		.byte	0x4
 347 0066 07       		.byte	0x7
 348 0067 C5010000 		.4byte	.LASF8
 349 006b 04       		.uleb128 0x4
 350 006c 88020000 		.4byte	.LASF9
 351 0070 02       		.byte	0x2
 352 0071 D201     		.2byte	0x1d2
 353 0073 2C000000 		.4byte	0x2c
 354 0077 04       		.uleb128 0x4
 355 0078 A6010000 		.4byte	.LASF10
 356 007c 02       		.byte	0x2
 357 007d D301     		.2byte	0x1d3
 358 007f 3A000000 		.4byte	0x3a
 359 0083 04       		.uleb128 0x4
 360 0084 B6010000 		.4byte	.LASF11
 361 0088 02       		.byte	0x2
 362 0089 D401     		.2byte	0x1d4
 363 008b 48000000 		.4byte	0x48
 364 008f 02       		.uleb128 0x2
 365 0090 04       		.byte	0x4
 366 0091 04       		.byte	0x4
 367 0092 3B010000 		.4byte	.LASF12
 368 0096 02       		.uleb128 0x2
 369 0097 08       		.byte	0x8
 370 0098 04       		.byte	0x4
 371 0099 9F010000 		.4byte	.LASF13
 372 009d 02       		.uleb128 0x2
 373 009e 01       		.byte	0x1
 374 009f 08       		.byte	0x8
 375 00a0 3F020000 		.4byte	.LASF14
 376 00a4 04       		.uleb128 0x4
 377 00a5 00000000 		.4byte	.LASF15
 378 00a9 02       		.byte	0x2
 379 00aa 7E02     		.2byte	0x27e
 380 00ac B0000000 		.4byte	0xb0
 381 00b0 05       		.uleb128 0x5
 382 00b1 83000000 		.4byte	0x83
 383 00b5 06       		.uleb128 0x6
 384 00b6 1D020000 		.4byte	.LASF16
 385 00ba 01       		.byte	0x1
 386 00bb 48       		.byte	0x48
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 12


 387 00bc 00000000 		.4byte	.LFB0
 388 00c0 30000000 		.4byte	.LFE0-.LFB0
 389 00c4 01       		.uleb128 0x1
 390 00c5 9C       		.byte	0x9c
 391 00c6 D9000000 		.4byte	0xd9
 392 00ca 07       		.uleb128 0x7
 393 00cb E9010000 		.4byte	.LASF18
 394 00cf 01       		.byte	0x1
 395 00d0 48       		.byte	0x48
 396 00d1 6B000000 		.4byte	0x6b
 397 00d5 02       		.uleb128 0x2
 398 00d6 91       		.byte	0x91
 399 00d7 7F       		.sleb128 -1
 400 00d8 00       		.byte	0
 401 00d9 06       		.uleb128 0x6
 402 00da 67010000 		.4byte	.LASF17
 403 00de 01       		.byte	0x1
 404 00df 6F       		.byte	0x6f
 405 00e0 00000000 		.4byte	.LFB1
 406 00e4 4C000000 		.4byte	.LFE1-.LFB1
 407 00e8 01       		.uleb128 0x1
 408 00e9 9C       		.byte	0x9c
 409 00ea 0B010000 		.4byte	0x10b
 410 00ee 07       		.uleb128 0x7
 411 00ef A9000000 		.4byte	.LASF19
 412 00f3 01       		.byte	0x1
 413 00f4 6F       		.byte	0x6f
 414 00f5 6B000000 		.4byte	0x6b
 415 00f9 02       		.uleb128 0x2
 416 00fa 91       		.byte	0x91
 417 00fb 77       		.sleb128 -9
 418 00fc 08       		.uleb128 0x8
 419 00fd 4F010000 		.4byte	.LASF24
 420 0101 01       		.byte	0x1
 421 0102 71       		.byte	0x71
 422 0103 6B000000 		.4byte	0x6b
 423 0107 02       		.uleb128 0x2
 424 0108 91       		.byte	0x91
 425 0109 7F       		.sleb128 -1
 426 010a 00       		.byte	0
 427 010b 09       		.uleb128 0x9
 428 010c 02020000 		.4byte	.LASF20
 429 0110 01       		.byte	0x1
 430 0111 88       		.byte	0x88
 431 0112 6B000000 		.4byte	0x6b
 432 0116 00000000 		.4byte	.LFB2
 433 011a 14000000 		.4byte	.LFE2-.LFB2
 434 011e 01       		.uleb128 0x1
 435 011f 9C       		.byte	0x9c
 436 0120 09       		.uleb128 0x9
 437 0121 EE010000 		.4byte	.LASF21
 438 0125 01       		.byte	0x1
 439 0126 A4       		.byte	0xa4
 440 0127 6B000000 		.4byte	0x6b
 441 012b 00000000 		.4byte	.LFB3
 442 012f 14000000 		.4byte	.LFE3-.LFB3
 443 0133 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 13


 444 0134 9C       		.byte	0x9c
 445 0135 06       		.uleb128 0x6
 446 0136 65020000 		.4byte	.LASF22
 447 013a 01       		.byte	0x1
 448 013b CF       		.byte	0xcf
 449 013c 00000000 		.4byte	.LFB4
 450 0140 44000000 		.4byte	.LFE4-.LFB4
 451 0144 01       		.uleb128 0x1
 452 0145 9C       		.byte	0x9c
 453 0146 75010000 		.4byte	0x175
 454 014a 07       		.uleb128 0x7
 455 014b AD010000 		.4byte	.LASF23
 456 014f 01       		.byte	0x1
 457 0150 CF       		.byte	0xcf
 458 0151 77000000 		.4byte	0x77
 459 0155 02       		.uleb128 0x2
 460 0156 91       		.byte	0x91
 461 0157 76       		.sleb128 -10
 462 0158 07       		.uleb128 0x7
 463 0159 E9010000 		.4byte	.LASF18
 464 015d 01       		.byte	0x1
 465 015e CF       		.byte	0xcf
 466 015f 77000000 		.4byte	0x77
 467 0163 02       		.uleb128 0x2
 468 0164 91       		.byte	0x91
 469 0165 74       		.sleb128 -12
 470 0166 08       		.uleb128 0x8
 471 0167 BD010000 		.4byte	.LASF25
 472 016b 01       		.byte	0x1
 473 016c D1       		.byte	0xd1
 474 016d 83000000 		.4byte	0x83
 475 0171 02       		.uleb128 0x2
 476 0172 91       		.byte	0x91
 477 0173 7C       		.sleb128 -4
 478 0174 00       		.byte	0
 479 0175 0A       		.uleb128 0xa
 480 0176 88010000 		.4byte	.LASF26
 481 017a 01       		.byte	0x1
 482 017b EC       		.byte	0xec
 483 017c 6B000000 		.4byte	0x6b
 484 0180 00000000 		.4byte	.LFB5
 485 0184 30000000 		.4byte	.LFE5-.LFB5
 486 0188 01       		.uleb128 0x1
 487 0189 9C       		.byte	0x9c
 488 018a 08       		.uleb128 0x8
 489 018b 32020000 		.4byte	.LASF27
 490 018f 01       		.byte	0x1
 491 0190 EE       		.byte	0xee
 492 0191 6B000000 		.4byte	0x6b
 493 0195 02       		.uleb128 0x2
 494 0196 91       		.byte	0x91
 495 0197 7F       		.sleb128 -1
 496 0198 00       		.byte	0
 497 0199 00       		.byte	0
 498              		.section	.debug_abbrev,"",%progbits
 499              	.Ldebug_abbrev0:
 500 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 14


 501 0001 11       		.uleb128 0x11
 502 0002 01       		.byte	0x1
 503 0003 25       		.uleb128 0x25
 504 0004 0E       		.uleb128 0xe
 505 0005 13       		.uleb128 0x13
 506 0006 0B       		.uleb128 0xb
 507 0007 03       		.uleb128 0x3
 508 0008 0E       		.uleb128 0xe
 509 0009 1B       		.uleb128 0x1b
 510 000a 0E       		.uleb128 0xe
 511 000b 55       		.uleb128 0x55
 512 000c 17       		.uleb128 0x17
 513 000d 11       		.uleb128 0x11
 514 000e 01       		.uleb128 0x1
 515 000f 10       		.uleb128 0x10
 516 0010 17       		.uleb128 0x17
 517 0011 00       		.byte	0
 518 0012 00       		.byte	0
 519 0013 02       		.uleb128 0x2
 520 0014 24       		.uleb128 0x24
 521 0015 00       		.byte	0
 522 0016 0B       		.uleb128 0xb
 523 0017 0B       		.uleb128 0xb
 524 0018 3E       		.uleb128 0x3e
 525 0019 0B       		.uleb128 0xb
 526 001a 03       		.uleb128 0x3
 527 001b 0E       		.uleb128 0xe
 528 001c 00       		.byte	0
 529 001d 00       		.byte	0
 530 001e 03       		.uleb128 0x3
 531 001f 24       		.uleb128 0x24
 532 0020 00       		.byte	0
 533 0021 0B       		.uleb128 0xb
 534 0022 0B       		.uleb128 0xb
 535 0023 3E       		.uleb128 0x3e
 536 0024 0B       		.uleb128 0xb
 537 0025 03       		.uleb128 0x3
 538 0026 08       		.uleb128 0x8
 539 0027 00       		.byte	0
 540 0028 00       		.byte	0
 541 0029 04       		.uleb128 0x4
 542 002a 16       		.uleb128 0x16
 543 002b 00       		.byte	0
 544 002c 03       		.uleb128 0x3
 545 002d 0E       		.uleb128 0xe
 546 002e 3A       		.uleb128 0x3a
 547 002f 0B       		.uleb128 0xb
 548 0030 3B       		.uleb128 0x3b
 549 0031 05       		.uleb128 0x5
 550 0032 49       		.uleb128 0x49
 551 0033 13       		.uleb128 0x13
 552 0034 00       		.byte	0
 553 0035 00       		.byte	0
 554 0036 05       		.uleb128 0x5
 555 0037 35       		.uleb128 0x35
 556 0038 00       		.byte	0
 557 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 15


 558 003a 13       		.uleb128 0x13
 559 003b 00       		.byte	0
 560 003c 00       		.byte	0
 561 003d 06       		.uleb128 0x6
 562 003e 2E       		.uleb128 0x2e
 563 003f 01       		.byte	0x1
 564 0040 3F       		.uleb128 0x3f
 565 0041 19       		.uleb128 0x19
 566 0042 03       		.uleb128 0x3
 567 0043 0E       		.uleb128 0xe
 568 0044 3A       		.uleb128 0x3a
 569 0045 0B       		.uleb128 0xb
 570 0046 3B       		.uleb128 0x3b
 571 0047 0B       		.uleb128 0xb
 572 0048 27       		.uleb128 0x27
 573 0049 19       		.uleb128 0x19
 574 004a 11       		.uleb128 0x11
 575 004b 01       		.uleb128 0x1
 576 004c 12       		.uleb128 0x12
 577 004d 06       		.uleb128 0x6
 578 004e 40       		.uleb128 0x40
 579 004f 18       		.uleb128 0x18
 580 0050 9742     		.uleb128 0x2117
 581 0052 19       		.uleb128 0x19
 582 0053 01       		.uleb128 0x1
 583 0054 13       		.uleb128 0x13
 584 0055 00       		.byte	0
 585 0056 00       		.byte	0
 586 0057 07       		.uleb128 0x7
 587 0058 05       		.uleb128 0x5
 588 0059 00       		.byte	0
 589 005a 03       		.uleb128 0x3
 590 005b 0E       		.uleb128 0xe
 591 005c 3A       		.uleb128 0x3a
 592 005d 0B       		.uleb128 0xb
 593 005e 3B       		.uleb128 0x3b
 594 005f 0B       		.uleb128 0xb
 595 0060 49       		.uleb128 0x49
 596 0061 13       		.uleb128 0x13
 597 0062 02       		.uleb128 0x2
 598 0063 18       		.uleb128 0x18
 599 0064 00       		.byte	0
 600 0065 00       		.byte	0
 601 0066 08       		.uleb128 0x8
 602 0067 34       		.uleb128 0x34
 603 0068 00       		.byte	0
 604 0069 03       		.uleb128 0x3
 605 006a 0E       		.uleb128 0xe
 606 006b 3A       		.uleb128 0x3a
 607 006c 0B       		.uleb128 0xb
 608 006d 3B       		.uleb128 0x3b
 609 006e 0B       		.uleb128 0xb
 610 006f 49       		.uleb128 0x49
 611 0070 13       		.uleb128 0x13
 612 0071 02       		.uleb128 0x2
 613 0072 18       		.uleb128 0x18
 614 0073 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 16


 615 0074 00       		.byte	0
 616 0075 09       		.uleb128 0x9
 617 0076 2E       		.uleb128 0x2e
 618 0077 00       		.byte	0
 619 0078 3F       		.uleb128 0x3f
 620 0079 19       		.uleb128 0x19
 621 007a 03       		.uleb128 0x3
 622 007b 0E       		.uleb128 0xe
 623 007c 3A       		.uleb128 0x3a
 624 007d 0B       		.uleb128 0xb
 625 007e 3B       		.uleb128 0x3b
 626 007f 0B       		.uleb128 0xb
 627 0080 27       		.uleb128 0x27
 628 0081 19       		.uleb128 0x19
 629 0082 49       		.uleb128 0x49
 630 0083 13       		.uleb128 0x13
 631 0084 11       		.uleb128 0x11
 632 0085 01       		.uleb128 0x1
 633 0086 12       		.uleb128 0x12
 634 0087 06       		.uleb128 0x6
 635 0088 40       		.uleb128 0x40
 636 0089 18       		.uleb128 0x18
 637 008a 9742     		.uleb128 0x2117
 638 008c 19       		.uleb128 0x19
 639 008d 00       		.byte	0
 640 008e 00       		.byte	0
 641 008f 0A       		.uleb128 0xa
 642 0090 2E       		.uleb128 0x2e
 643 0091 01       		.byte	0x1
 644 0092 3F       		.uleb128 0x3f
 645 0093 19       		.uleb128 0x19
 646 0094 03       		.uleb128 0x3
 647 0095 0E       		.uleb128 0xe
 648 0096 3A       		.uleb128 0x3a
 649 0097 0B       		.uleb128 0xb
 650 0098 3B       		.uleb128 0x3b
 651 0099 0B       		.uleb128 0xb
 652 009a 27       		.uleb128 0x27
 653 009b 19       		.uleb128 0x19
 654 009c 49       		.uleb128 0x49
 655 009d 13       		.uleb128 0x13
 656 009e 11       		.uleb128 0x11
 657 009f 01       		.uleb128 0x1
 658 00a0 12       		.uleb128 0x12
 659 00a1 06       		.uleb128 0x6
 660 00a2 40       		.uleb128 0x40
 661 00a3 18       		.uleb128 0x18
 662 00a4 9742     		.uleb128 0x2117
 663 00a6 19       		.uleb128 0x19
 664 00a7 00       		.byte	0
 665 00a8 00       		.byte	0
 666 00a9 00       		.byte	0
 667              		.section	.debug_aranges,"",%progbits
 668 0000 44000000 		.4byte	0x44
 669 0004 0200     		.2byte	0x2
 670 0006 00000000 		.4byte	.Ldebug_info0
 671 000a 04       		.byte	0x4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 17


 672 000b 00       		.byte	0
 673 000c 0000     		.2byte	0
 674 000e 0000     		.2byte	0
 675 0010 00000000 		.4byte	.LFB0
 676 0014 30000000 		.4byte	.LFE0-.LFB0
 677 0018 00000000 		.4byte	.LFB1
 678 001c 4C000000 		.4byte	.LFE1-.LFB1
 679 0020 00000000 		.4byte	.LFB2
 680 0024 14000000 		.4byte	.LFE2-.LFB2
 681 0028 00000000 		.4byte	.LFB3
 682 002c 14000000 		.4byte	.LFE3-.LFB3
 683 0030 00000000 		.4byte	.LFB4
 684 0034 44000000 		.4byte	.LFE4-.LFB4
 685 0038 00000000 		.4byte	.LFB5
 686 003c 30000000 		.4byte	.LFE5-.LFB5
 687 0040 00000000 		.4byte	0
 688 0044 00000000 		.4byte	0
 689              		.section	.debug_ranges,"",%progbits
 690              	.Ldebug_ranges0:
 691 0000 00000000 		.4byte	.LFB0
 692 0004 30000000 		.4byte	.LFE0
 693 0008 00000000 		.4byte	.LFB1
 694 000c 4C000000 		.4byte	.LFE1
 695 0010 00000000 		.4byte	.LFB2
 696 0014 14000000 		.4byte	.LFE2
 697 0018 00000000 		.4byte	.LFB3
 698 001c 14000000 		.4byte	.LFE3
 699 0020 00000000 		.4byte	.LFB4
 700 0024 44000000 		.4byte	.LFE4
 701 0028 00000000 		.4byte	.LFB5
 702 002c 30000000 		.4byte	.LFE5
 703 0030 00000000 		.4byte	0
 704 0034 00000000 		.4byte	0
 705              		.section	.debug_line,"",%progbits
 706              	.Ldebug_line0:
 707 0000 BB000000 		.section	.debug_str,"MS",%progbits,1
 707      02004400 
 707      00000201 
 707      FB0E0D00 
 707      01010101 
 708              	.LASF15:
 709 0000 72656733 		.ascii	"reg32\000"
 709      3200
 710              	.LASF28:
 711 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 711      43313120 
 711      352E342E 
 711      31203230 
 711      31363036 
 712 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 712      20726576 
 712      6973696F 
 712      6E203233 
 712      37373135 
 713 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 713      66756E63 
 713      74696F6E 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 18


 713      2D736563 
 713      74696F6E 
 714 009f 652D706F 		.ascii	"e-pointer\000"
 714      696E7465 
 714      7200
 715              	.LASF19:
 716 00a9 76616C75 		.ascii	"value\000"
 716      6500
 717              	.LASF30:
 718 00af 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 718      726F7062 
 718      6F785C36 
 718      5F6B7572 
 718      735C6469 
 719 00de 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 719      41424C45 
 719      5C424C45 
 719      5F44796E 
 719      616D6963 
 720 010f 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 720      796E616D 
 720      69635F47 
 720      4154545F 
 720      53657276 
 721              	.LASF12:
 722 013b 666C6F61 		.ascii	"float\000"
 722      7400
 723              	.LASF1:
 724 0141 756E7369 		.ascii	"unsigned char\000"
 724      676E6564 
 724      20636861 
 724      7200
 725              	.LASF24:
 726 014f 64725661 		.ascii	"drVal\000"
 726      6C00
 727              	.LASF5:
 728 0155 6C6F6E67 		.ascii	"long unsigned int\000"
 728      20756E73 
 728      69676E65 
 728      6420696E 
 728      7400
 729              	.LASF17:
 730 0167 55415254 		.ascii	"UART_tx_Write\000"
 730      5F74785F 
 730      57726974 
 730      6500
 731              	.LASF3:
 732 0175 73686F72 		.ascii	"short unsigned int\000"
 732      7420756E 
 732      7369676E 
 732      65642069 
 732      6E7400
 733              	.LASF26:
 734 0188 55415254 		.ascii	"UART_tx_ClearInterrupt\000"
 734      5F74785F 
 734      436C6561 
 734      72496E74 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 19


 734      65727275 
 735              	.LASF13:
 736 019f 646F7562 		.ascii	"double\000"
 736      6C6500
 737              	.LASF10:
 738 01a6 75696E74 		.ascii	"uint16\000"
 738      313600
 739              	.LASF23:
 740 01ad 706F7369 		.ascii	"position\000"
 740      74696F6E 
 740      00
 741              	.LASF11:
 742 01b6 75696E74 		.ascii	"uint32\000"
 742      333200
 743              	.LASF25:
 744 01bd 696E7472 		.ascii	"intrCfg\000"
 744      43666700 
 745              	.LASF8:
 746 01c5 756E7369 		.ascii	"unsigned int\000"
 746      676E6564 
 746      20696E74 
 746      00
 747              	.LASF7:
 748 01d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 748      206C6F6E 
 748      6720756E 
 748      7369676E 
 748      65642069 
 749              	.LASF18:
 750 01e9 6D6F6465 		.ascii	"mode\000"
 750      00
 751              	.LASF21:
 752 01ee 55415254 		.ascii	"UART_tx_ReadDataReg\000"
 752      5F74785F 
 752      52656164 
 752      44617461 
 752      52656700 
 753              	.LASF20:
 754 0202 55415254 		.ascii	"UART_tx_Read\000"
 754      5F74785F 
 754      52656164 
 754      00
 755              	.LASF6:
 756 020f 6C6F6E67 		.ascii	"long long int\000"
 756      206C6F6E 
 756      6720696E 
 756      7400
 757              	.LASF16:
 758 021d 55415254 		.ascii	"UART_tx_SetDriveMode\000"
 758      5F74785F 
 758      53657444 
 758      72697665 
 758      4D6F6465 
 759              	.LASF27:
 760 0232 6D61736B 		.ascii	"maskedStatus\000"
 760      65645374 
 760      61747573 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cct86Ora.s 			page 20


 760      00
 761              	.LASF14:
 762 023f 63686172 		.ascii	"char\000"
 762      00
 763              	.LASF29:
 764 0244 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_tx.c\000"
 764      72617465 
 764      645F536F 
 764      75726365 
 764      5C50536F 
 765              	.LASF22:
 766 0265 55415254 		.ascii	"UART_tx_SetInterruptMode\000"
 766      5F74785F 
 766      53657449 
 766      6E746572 
 766      72757074 
 767              	.LASF2:
 768 027e 73686F72 		.ascii	"short int\000"
 768      7420696E 
 768      7400
 769              	.LASF9:
 770 0288 75696E74 		.ascii	"uint8\000"
 770      3800
 771              	.LASF4:
 772 028e 6C6F6E67 		.ascii	"long int\000"
 772      20696E74 
 772      00
 773              	.LASF0:
 774 0297 7369676E 		.ascii	"signed char\000"
 774      65642063 
 774      68617200 
 775              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
