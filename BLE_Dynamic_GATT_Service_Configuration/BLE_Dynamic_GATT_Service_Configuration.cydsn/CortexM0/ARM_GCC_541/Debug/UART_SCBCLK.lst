ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_SCBCLK.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_SCBCLK_StartEx,"ax",%progbits
  20              		.align	2
  21              		.global	UART_SCBCLK_StartEx
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_SCBCLK_StartEx, %function
  25              	UART_SCBCLK_StartEx:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_SCBCLK.c"
   1:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART_SCBCLK.c **** * File Name: UART_SCBCLK.c
   3:Generated_Source\PSoC4/UART_SCBCLK.c **** * Version 2.20
   4:Generated_Source\PSoC4/UART_SCBCLK.c **** *
   5:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Description:
   6:Generated_Source\PSoC4/UART_SCBCLK.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/UART_SCBCLK.c **** *
   8:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Note:
   9:Generated_Source\PSoC4/UART_SCBCLK.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/UART_SCBCLK.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  12:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
  13:Generated_Source\PSoC4/UART_SCBCLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_SCBCLK.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_SCBCLK.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_SCBCLK.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  19:Generated_Source\PSoC4/UART_SCBCLK.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/UART_SCBCLK.c **** #include "UART_SCBCLK.h"
  21:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  22:Generated_Source\PSoC4/UART_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  24:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/UART_SCBCLK.c **** * Function Name: UART_SCBCLK_StartEx
  26:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
  27:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  28:Generated_Source\PSoC4/UART_SCBCLK.c **** * Summary:
  29:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/UART_SCBCLK.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 2


  31:Generated_Source\PSoC4/UART_SCBCLK.c **** * Parameters:
  32:Generated_Source\PSoC4/UART_SCBCLK.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
  33:Generated_Source\PSoC4/UART_SCBCLK.c **** *    clock is started.
  34:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  35:Generated_Source\PSoC4/UART_SCBCLK.c **** * Returns:
  36:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
  37:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  38:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/UART_SCBCLK.c **** void UART_SCBCLK_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/UART_SCBCLK.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
  35 0002 0190     		str	r0, [sp, #4]
  41:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/UART_SCBCLK.c ****     while((UART_SCBCLK_CMD_REG & UART_SCBCLK_CMD_ENABLE_MASK) != 0u)
  36              		.loc 1 42 0
  37 0004 C046     		nop
  38              	.L2:
  39              		.loc 1 42 0 is_stmt 0 discriminator 1
  40 0006 064B     		ldr	r3, .L3
  41 0008 1B68     		ldr	r3, [r3]
  42 000a 002B     		cmp	r3, #0
  43 000c FBDB     		blt	.L2
  43:Generated_Source\PSoC4/UART_SCBCLK.c ****     {
  44:Generated_Source\PSoC4/UART_SCBCLK.c ****     }
  45:Generated_Source\PSoC4/UART_SCBCLK.c ****     
  46:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/UART_SCBCLK.c ****     UART_SCBCLK_CMD_REG =
  44              		.loc 1 47 0 is_stmt 1
  45 000e 044B     		ldr	r3, .L3
  48:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)UART_SCBCLK__DIV_ID << UART_SCBCLK_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/UART_SCBCLK.c ****         (alignClkDiv << UART_SCBCLK_CMD_PA_DIV_SHIFT) |
  46              		.loc 1 49 0
  47 0010 019A     		ldr	r2, [sp, #4]
  48 0012 1202     		lsls	r2, r2, #8
  49 0014 0349     		ldr	r1, .L3+4
  50 0016 0A43     		orrs	r2, r1
  47:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)UART_SCBCLK__DIV_ID << UART_SCBCLK_CMD_DIV_SHIFT)|
  51              		.loc 1 47 0
  52 0018 1A60     		str	r2, [r3]
  50:Generated_Source\PSoC4/UART_SCBCLK.c ****         (uint32)UART_SCBCLK_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/UART_SCBCLK.c **** }
  53              		.loc 1 51 0
  54 001a C046     		nop
  55 001c 02B0     		add	sp, sp, #8
  56              		@ sp needed
  57 001e 7047     		bx	lr
  58              	.L4:
  59              		.align	2
  60              	.L3:
  61 0020 00000140 		.word	1073807360
  62 0024 40000080 		.word	-2147483584
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 3


  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	UART_SCBCLK_StartEx, .-UART_SCBCLK_StartEx
  66              		.section	.text.UART_SCBCLK_Stop,"ax",%progbits
  67              		.align	2
  68              		.global	UART_SCBCLK_Stop
  69              		.code	16
  70              		.thumb_func
  71              		.type	UART_SCBCLK_Stop, %function
  72              	UART_SCBCLK_Stop:
  73              	.LFB1:
  52:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  53:Generated_Source\PSoC4/UART_SCBCLK.c **** #else
  54:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  55:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/UART_SCBCLK.c **** * Function Name: UART_SCBCLK_Start
  57:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
  58:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  59:Generated_Source\PSoC4/UART_SCBCLK.c **** * Summary:
  60:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  62:Generated_Source\PSoC4/UART_SCBCLK.c **** * Parameters:
  63:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
  64:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  65:Generated_Source\PSoC4/UART_SCBCLK.c **** * Returns:
  66:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
  67:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  68:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  70:Generated_Source\PSoC4/UART_SCBCLK.c **** void UART_SCBCLK_Start(void)
  71:Generated_Source\PSoC4/UART_SCBCLK.c **** {
  72:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/UART_SCBCLK.c ****     UART_SCBCLK_ENABLE_REG |= UART_SCBCLK__ENABLE_MASK;
  74:Generated_Source\PSoC4/UART_SCBCLK.c **** }
  75:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  76:Generated_Source\PSoC4/UART_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  78:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  79:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/UART_SCBCLK.c **** * Function Name: UART_SCBCLK_Stop
  81:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
  82:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  83:Generated_Source\PSoC4/UART_SCBCLK.c **** * Summary:
  84:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/UART_SCBCLK.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/UART_SCBCLK.c **** *  disabled.
  87:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  88:Generated_Source\PSoC4/UART_SCBCLK.c **** * Parameters:
  89:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
  90:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  91:Generated_Source\PSoC4/UART_SCBCLK.c **** * Returns:
  92:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
  93:Generated_Source\PSoC4/UART_SCBCLK.c **** *
  94:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/UART_SCBCLK.c **** void UART_SCBCLK_Stop(void)
  96:Generated_Source\PSoC4/UART_SCBCLK.c **** {
  74              		.loc 1 96 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 4


  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  97:Generated_Source\PSoC4/UART_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/UART_SCBCLK.c **** 
  99:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/UART_SCBCLK.c ****     while((UART_SCBCLK_CMD_REG & UART_SCBCLK_CMD_ENABLE_MASK) != 0u)
  79              		.loc 1 100 0
  80 0000 C046     		nop
  81              	.L6:
  82              		.loc 1 100 0 is_stmt 0 discriminator 1
  83 0002 044B     		ldr	r3, .L7
  84 0004 1B68     		ldr	r3, [r3]
  85 0006 002B     		cmp	r3, #0
  86 0008 FBDB     		blt	.L6
 101:Generated_Source\PSoC4/UART_SCBCLK.c ****     {
 102:Generated_Source\PSoC4/UART_SCBCLK.c ****     }
 103:Generated_Source\PSoC4/UART_SCBCLK.c ****     
 104:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/UART_SCBCLK.c ****     UART_SCBCLK_CMD_REG =
  87              		.loc 1 105 0 is_stmt 1
  88 000a 024B     		ldr	r3, .L7
  89 000c 024A     		ldr	r2, .L7+4
  90 000e 1A60     		str	r2, [r3]
 106:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)UART_SCBCLK__DIV_ID << UART_SCBCLK_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)UART_SCBCLK_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 109:Generated_Source\PSoC4/UART_SCBCLK.c **** #else
 110:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 111:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/UART_SCBCLK.c ****     UART_SCBCLK_ENABLE_REG &= (uint32)(~UART_SCBCLK__ENABLE_MASK);
 113:Generated_Source\PSoC4/UART_SCBCLK.c ****     
 114:Generated_Source\PSoC4/UART_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/UART_SCBCLK.c **** }
  91              		.loc 1 115 0
  92 0010 C046     		nop
  93              		@ sp needed
  94 0012 7047     		bx	lr
  95              	.L8:
  96              		.align	2
  97              	.L7:
  98 0014 00000140 		.word	1073807360
  99 0018 40000040 		.word	1073741888
 100              		.cfi_endproc
 101              	.LFE1:
 102              		.size	UART_SCBCLK_Stop, .-UART_SCBCLK_Stop
 103              		.section	.text.UART_SCBCLK_SetFractionalDividerRegister,"ax",%progbits
 104              		.align	2
 105              		.global	UART_SCBCLK_SetFractionalDividerRegister
 106              		.code	16
 107              		.thumb_func
 108              		.type	UART_SCBCLK_SetFractionalDividerRegister, %function
 109              	UART_SCBCLK_SetFractionalDividerRegister:
 110              	.LFB2:
 116:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 117:Generated_Source\PSoC4/UART_SCBCLK.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 5


 118:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/UART_SCBCLK.c **** * Function Name: UART_SCBCLK_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
 121:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 122:Generated_Source\PSoC4/UART_SCBCLK.c **** * Summary:
 123:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 125:Generated_Source\PSoC4/UART_SCBCLK.c **** * Parameters:
 126:Generated_Source\PSoC4/UART_SCBCLK.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/UART_SCBCLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/UART_SCBCLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/UART_SCBCLK.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/UART_SCBCLK.c **** * Returns:
 131:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
 132:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 133:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/UART_SCBCLK.c **** void UART_SCBCLK_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/UART_SCBCLK.c **** {
 111              		.loc 1 135 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 16
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 84B0     		sub	sp, sp, #16
 117              		.cfi_def_cfa_offset 16
 118 0002 0200     		movs	r2, r0
 119 0004 6B46     		mov	r3, sp
 120 0006 0633     		adds	r3, r3, #6
 121 0008 1A80     		strh	r2, [r3]
 122 000a 6B46     		mov	r3, sp
 123 000c 0533     		adds	r3, r3, #5
 124 000e 0A1C     		adds	r2, r1, #0
 125 0010 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC4/UART_SCBCLK.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/UART_SCBCLK.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/UART_SCBCLK.c ****     
 139:Generated_Source\PSoC4/UART_SCBCLK.c **** #if defined (UART_SCBCLK__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/UART_SCBCLK.c ****     
 141:Generated_Source\PSoC4/UART_SCBCLK.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/UART_SCBCLK.c ****     maskVal = UART_SCBCLK_DIV_REG & 
 126              		.loc 1 142 0
 127 0012 0C4B     		ldr	r3, .L10
 128 0014 1B68     		ldr	r3, [r3]
 129 0016 0722     		movs	r2, #7
 130 0018 1340     		ands	r3, r2
 131 001a 0393     		str	r3, [sp, #12]
 143:Generated_Source\PSoC4/UART_SCBCLK.c ****                     (uint32)(~(uint32)(UART_SCBCLK_DIV_INT_MASK | UART_SCBCLK_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/UART_SCBCLK.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/UART_SCBCLK.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  UART_SCBCLK_DIV_INT_SHIFT) & UART_SCBCLK_DIV_INT_MASK) |
 132              		.loc 1 146 0
 133 001c 6B46     		mov	r3, sp
 134 001e 0633     		adds	r3, r3, #6
 135 0020 1B88     		ldrh	r3, [r3]
 136 0022 1A02     		lsls	r2, r3, #8
 145:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  UART_SCBCLK_DIV_INT_SHIFT) & UART_SCBCLK_DIV_INT_MASK) |
 137              		.loc 1 145 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 6


 138 0024 039B     		ldr	r3, [sp, #12]
 139 0026 1A43     		orrs	r2, r3
 147:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)((uint32)clkFractional << UART_SCBCLK_DIV_FRAC_SHIFT) & UART_SCBCLK_DIV_FRAC_MASK)
 140              		.loc 1 147 0
 141 0028 6B46     		mov	r3, sp
 142 002a 0533     		adds	r3, r3, #5
 143 002c 1B78     		ldrb	r3, [r3]
 144 002e DB00     		lsls	r3, r3, #3
 145 0030 FF21     		movs	r1, #255
 146 0032 0B40     		ands	r3, r1
 145:Generated_Source\PSoC4/UART_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  UART_SCBCLK_DIV_INT_SHIFT) & UART_SCBCLK_DIV_INT_MASK) |
 147              		.loc 1 145 0
 148 0034 1343     		orrs	r3, r2
 149 0036 0293     		str	r3, [sp, #8]
 148:Generated_Source\PSoC4/UART_SCBCLK.c ****     
 149:Generated_Source\PSoC4/UART_SCBCLK.c **** #else
 150:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/UART_SCBCLK.c ****     maskVal = UART_SCBCLK_DIV_REG & (uint32)(~(uint32)UART_SCBCLK__DIVIDER_MASK);
 152:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/UART_SCBCLK.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/UART_SCBCLK.c ****     
 155:Generated_Source\PSoC4/UART_SCBCLK.c **** #endif /* UART_SCBCLK__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 157:Generated_Source\PSoC4/UART_SCBCLK.c ****     UART_SCBCLK_DIV_REG = regVal;
 150              		.loc 1 157 0
 151 0038 024B     		ldr	r3, .L10
 152 003a 029A     		ldr	r2, [sp, #8]
 153 003c 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/UART_SCBCLK.c **** }
 154              		.loc 1 158 0
 155 003e C046     		nop
 156 0040 04B0     		add	sp, sp, #16
 157              		@ sp needed
 158 0042 7047     		bx	lr
 159              	.L11:
 160              		.align	2
 161              	.L10:
 162 0044 00030140 		.word	1073808128
 163              		.cfi_endproc
 164              	.LFE2:
 165              		.size	UART_SCBCLK_SetFractionalDividerRegister, .-UART_SCBCLK_SetFractionalDividerRegister
 166              		.section	.text.UART_SCBCLK_GetDividerRegister,"ax",%progbits
 167              		.align	2
 168              		.global	UART_SCBCLK_GetDividerRegister
 169              		.code	16
 170              		.thumb_func
 171              		.type	UART_SCBCLK_GetDividerRegister, %function
 172              	UART_SCBCLK_GetDividerRegister:
 173              	.LFB3:
 159:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 160:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 161:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/UART_SCBCLK.c **** * Function Name: UART_SCBCLK_GetDividerRegister
 163:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
 164:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 165:Generated_Source\PSoC4/UART_SCBCLK.c **** * Summary:
 166:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Gets the clock divider register value.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 7


 167:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 168:Generated_Source\PSoC4/UART_SCBCLK.c **** * Parameters:
 169:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
 170:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 171:Generated_Source\PSoC4/UART_SCBCLK.c **** * Returns:
 172:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/UART_SCBCLK.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 175:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/UART_SCBCLK.c **** uint16 UART_SCBCLK_GetDividerRegister(void)
 177:Generated_Source\PSoC4/UART_SCBCLK.c **** {
 174              		.loc 1 177 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 178:Generated_Source\PSoC4/UART_SCBCLK.c ****     return (uint16)((UART_SCBCLK_DIV_REG & UART_SCBCLK_DIV_INT_MASK)
 179              		.loc 1 178 0
 180 0000 034B     		ldr	r3, .L14
 181 0002 1B68     		ldr	r3, [r3]
 182 0004 FF22     		movs	r2, #255
 183 0006 9343     		bics	r3, r2
 179:Generated_Source\PSoC4/UART_SCBCLK.c ****         >> UART_SCBCLK_DIV_INT_SHIFT);
 184              		.loc 1 179 0
 185 0008 1B0A     		lsrs	r3, r3, #8
 178:Generated_Source\PSoC4/UART_SCBCLK.c ****     return (uint16)((UART_SCBCLK_DIV_REG & UART_SCBCLK_DIV_INT_MASK)
 186              		.loc 1 178 0
 187 000a 9BB2     		uxth	r3, r3
 180:Generated_Source\PSoC4/UART_SCBCLK.c **** }
 188              		.loc 1 180 0
 189 000c 1800     		movs	r0, r3
 190              		@ sp needed
 191 000e 7047     		bx	lr
 192              	.L15:
 193              		.align	2
 194              	.L14:
 195 0010 00030140 		.word	1073808128
 196              		.cfi_endproc
 197              	.LFE3:
 198              		.size	UART_SCBCLK_GetDividerRegister, .-UART_SCBCLK_GetDividerRegister
 199              		.section	.text.UART_SCBCLK_GetFractionalDividerRegister,"ax",%progbits
 200              		.align	2
 201              		.global	UART_SCBCLK_GetFractionalDividerRegister
 202              		.code	16
 203              		.thumb_func
 204              		.type	UART_SCBCLK_GetFractionalDividerRegister, %function
 205              	UART_SCBCLK_GetFractionalDividerRegister:
 206              	.LFB4:
 181:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 182:Generated_Source\PSoC4/UART_SCBCLK.c **** 
 183:Generated_Source\PSoC4/UART_SCBCLK.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/UART_SCBCLK.c **** * Function Name: UART_SCBCLK_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/UART_SCBCLK.c **** ********************************************************************************
 186:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 187:Generated_Source\PSoC4/UART_SCBCLK.c **** * Summary:
 188:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/UART_SCBCLK.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 8


 190:Generated_Source\PSoC4/UART_SCBCLK.c **** * Parameters:
 191:Generated_Source\PSoC4/UART_SCBCLK.c **** *  None
 192:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 193:Generated_Source\PSoC4/UART_SCBCLK.c **** * Returns:
 194:Generated_Source\PSoC4/UART_SCBCLK.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/UART_SCBCLK.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/UART_SCBCLK.c **** *
 197:Generated_Source\PSoC4/UART_SCBCLK.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/UART_SCBCLK.c **** uint8 UART_SCBCLK_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/UART_SCBCLK.c **** {
 207              		.loc 1 199 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 200:Generated_Source\PSoC4/UART_SCBCLK.c **** #if defined (UART_SCBCLK__FRAC_MASK)
 201:Generated_Source\PSoC4/UART_SCBCLK.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/UART_SCBCLK.c ****     return (uint8)((UART_SCBCLK_DIV_REG & UART_SCBCLK_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/UART_SCBCLK.c ****         >> UART_SCBCLK_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/UART_SCBCLK.c **** #else
 205:Generated_Source\PSoC4/UART_SCBCLK.c ****     return 0u;
 212              		.loc 1 205 0
 213 0000 0023     		movs	r3, #0
 206:Generated_Source\PSoC4/UART_SCBCLK.c **** #endif /* UART_SCBCLK__FRAC_MASK */
 207:Generated_Source\PSoC4/UART_SCBCLK.c **** }
 214              		.loc 1 207 0
 215 0002 1800     		movs	r0, r3
 216              		@ sp needed
 217 0004 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE4:
 220              		.size	UART_SCBCLK_GetFractionalDividerRegister, .-UART_SCBCLK_GetFractionalDividerRegister
 221 0006 C046     		.text
 222              	.Letext0:
 223              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 224              		.section	.debug_info,"",%progbits
 225              	.Ldebug_info0:
 226 0000 5F010000 		.4byte	0x15f
 227 0004 0400     		.2byte	0x4
 228 0006 00000000 		.4byte	.Ldebug_abbrev0
 229 000a 04       		.byte	0x4
 230 000b 01       		.uleb128 0x1
 231 000c 06000000 		.4byte	.LASF25
 232 0010 0C       		.byte	0xc
 233 0011 7C020000 		.4byte	.LASF26
 234 0015 72010000 		.4byte	.LASF27
 235 0019 00000000 		.4byte	.Ldebug_ranges0+0
 236 001d 00000000 		.4byte	0
 237 0021 00000000 		.4byte	.Ldebug_line0
 238 0025 02       		.uleb128 0x2
 239 0026 01       		.byte	0x1
 240 0027 06       		.byte	0x6
 241 0028 BA020000 		.4byte	.LASF0
 242 002c 02       		.uleb128 0x2
 243 002d 01       		.byte	0x1
 244 002e 08       		.byte	0x8
 245 002f DC000000 		.4byte	.LASF1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 9


 246 0033 02       		.uleb128 0x2
 247 0034 02       		.byte	0x2
 248 0035 05       		.byte	0x5
 249 0036 A1020000 		.4byte	.LASF2
 250 003a 02       		.uleb128 0x2
 251 003b 02       		.byte	0x2
 252 003c 07       		.byte	0x7
 253 003d FC000000 		.4byte	.LASF3
 254 0041 02       		.uleb128 0x2
 255 0042 04       		.byte	0x4
 256 0043 05       		.byte	0x5
 257 0044 B1020000 		.4byte	.LASF4
 258 0048 02       		.uleb128 0x2
 259 0049 04       		.byte	0x4
 260 004a 07       		.byte	0x7
 261 004b EA000000 		.4byte	.LASF5
 262 004f 02       		.uleb128 0x2
 263 0050 08       		.byte	0x8
 264 0051 05       		.byte	0x5
 265 0052 69020000 		.4byte	.LASF6
 266 0056 02       		.uleb128 0x2
 267 0057 08       		.byte	0x8
 268 0058 07       		.byte	0x7
 269 0059 0A020000 		.4byte	.LASF7
 270 005d 03       		.uleb128 0x3
 271 005e 04       		.byte	0x4
 272 005f 05       		.byte	0x5
 273 0060 696E7400 		.ascii	"int\000"
 274 0064 02       		.uleb128 0x2
 275 0065 04       		.byte	0x4
 276 0066 07       		.byte	0x7
 277 0067 FD010000 		.4byte	.LASF8
 278 006b 04       		.uleb128 0x4
 279 006c AB020000 		.4byte	.LASF9
 280 0070 02       		.byte	0x2
 281 0071 D201     		.2byte	0x1d2
 282 0073 2C000000 		.4byte	0x2c
 283 0077 04       		.uleb128 0x4
 284 0078 28010000 		.4byte	.LASF10
 285 007c 02       		.byte	0x2
 286 007d D301     		.2byte	0x1d3
 287 007f 3A000000 		.4byte	0x3a
 288 0083 04       		.uleb128 0x4
 289 0084 F6010000 		.4byte	.LASF11
 290 0088 02       		.byte	0x2
 291 0089 D401     		.2byte	0x1d4
 292 008b 48000000 		.4byte	0x48
 293 008f 02       		.uleb128 0x2
 294 0090 04       		.byte	0x4
 295 0091 04       		.byte	0x4
 296 0092 D6000000 		.4byte	.LASF12
 297 0096 02       		.uleb128 0x2
 298 0097 08       		.byte	0x8
 299 0098 04       		.byte	0x4
 300 0099 21010000 		.4byte	.LASF13
 301 009d 02       		.uleb128 0x2
 302 009e 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 10


 303 009f 08       		.byte	0x8
 304 00a0 77020000 		.4byte	.LASF14
 305 00a4 04       		.uleb128 0x4
 306 00a5 00000000 		.4byte	.LASF15
 307 00a9 02       		.byte	0x2
 308 00aa 7E02     		.2byte	0x27e
 309 00ac B0000000 		.4byte	0xb0
 310 00b0 05       		.uleb128 0x5
 311 00b1 83000000 		.4byte	0x83
 312 00b5 06       		.uleb128 0x6
 313 00b6 C2000000 		.4byte	.LASF16
 314 00ba 01       		.byte	0x1
 315 00bb 27       		.byte	0x27
 316 00bc 00000000 		.4byte	.LFB0
 317 00c0 28000000 		.4byte	.LFE0-.LFB0
 318 00c4 01       		.uleb128 0x1
 319 00c5 9C       		.byte	0x9c
 320 00c6 D9000000 		.4byte	0xd9
 321 00ca 07       		.uleb128 0x7
 322 00cb 2F010000 		.4byte	.LASF18
 323 00cf 01       		.byte	0x1
 324 00d0 27       		.byte	0x27
 325 00d1 83000000 		.4byte	0x83
 326 00d5 02       		.uleb128 0x2
 327 00d6 91       		.byte	0x91
 328 00d7 7C       		.sleb128 -4
 329 00d8 00       		.byte	0
 330 00d9 08       		.uleb128 0x8
 331 00da B1000000 		.4byte	.LASF28
 332 00de 01       		.byte	0x1
 333 00df 5F       		.byte	0x5f
 334 00e0 00000000 		.4byte	.LFB1
 335 00e4 1C000000 		.4byte	.LFE1-.LFB1
 336 00e8 01       		.uleb128 0x1
 337 00e9 9C       		.byte	0x9c
 338 00ea 06       		.uleb128 0x6
 339 00eb 40020000 		.4byte	.LASF17
 340 00ef 01       		.byte	0x1
 341 00f0 86       		.byte	0x86
 342 00f1 00000000 		.4byte	.LFB2
 343 00f5 48000000 		.4byte	.LFE2-.LFB2
 344 00f9 01       		.uleb128 0x1
 345 00fa 9C       		.byte	0x9c
 346 00fb 38010000 		.4byte	0x138
 347 00ff 07       		.uleb128 0x7
 348 0100 16010000 		.4byte	.LASF19
 349 0104 01       		.byte	0x1
 350 0105 86       		.byte	0x86
 351 0106 77000000 		.4byte	0x77
 352 010a 02       		.uleb128 0x2
 353 010b 91       		.byte	0x91
 354 010c 76       		.sleb128 -10
 355 010d 07       		.uleb128 0x7
 356 010e 64010000 		.4byte	.LASF20
 357 0112 01       		.byte	0x1
 358 0113 86       		.byte	0x86
 359 0114 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 11


 360 0118 02       		.uleb128 0x2
 361 0119 91       		.byte	0x91
 362 011a 75       		.sleb128 -11
 363 011b 09       		.uleb128 0x9
 364 011c A9000000 		.4byte	.LASF21
 365 0120 01       		.byte	0x1
 366 0121 88       		.byte	0x88
 367 0122 83000000 		.4byte	0x83
 368 0126 02       		.uleb128 0x2
 369 0127 91       		.byte	0x91
 370 0128 7C       		.sleb128 -4
 371 0129 09       		.uleb128 0x9
 372 012a 0F010000 		.4byte	.LASF22
 373 012e 01       		.byte	0x1
 374 012f 89       		.byte	0x89
 375 0130 83000000 		.4byte	0x83
 376 0134 02       		.uleb128 0x2
 377 0135 91       		.byte	0x91
 378 0136 78       		.sleb128 -8
 379 0137 00       		.byte	0
 380 0138 0A       		.uleb128 0xa
 381 0139 21020000 		.4byte	.LASF23
 382 013d 01       		.byte	0x1
 383 013e B0       		.byte	0xb0
 384 013f 77000000 		.4byte	0x77
 385 0143 00000000 		.4byte	.LFB3
 386 0147 14000000 		.4byte	.LFE3-.LFB3
 387 014b 01       		.uleb128 0x1
 388 014c 9C       		.byte	0x9c
 389 014d 0A       		.uleb128 0xa
 390 014e 3B010000 		.4byte	.LASF24
 391 0152 01       		.byte	0x1
 392 0153 C6       		.byte	0xc6
 393 0154 6B000000 		.4byte	0x6b
 394 0158 00000000 		.4byte	.LFB4
 395 015c 06000000 		.4byte	.LFE4-.LFB4
 396 0160 01       		.uleb128 0x1
 397 0161 9C       		.byte	0x9c
 398 0162 00       		.byte	0
 399              		.section	.debug_abbrev,"",%progbits
 400              	.Ldebug_abbrev0:
 401 0000 01       		.uleb128 0x1
 402 0001 11       		.uleb128 0x11
 403 0002 01       		.byte	0x1
 404 0003 25       		.uleb128 0x25
 405 0004 0E       		.uleb128 0xe
 406 0005 13       		.uleb128 0x13
 407 0006 0B       		.uleb128 0xb
 408 0007 03       		.uleb128 0x3
 409 0008 0E       		.uleb128 0xe
 410 0009 1B       		.uleb128 0x1b
 411 000a 0E       		.uleb128 0xe
 412 000b 55       		.uleb128 0x55
 413 000c 17       		.uleb128 0x17
 414 000d 11       		.uleb128 0x11
 415 000e 01       		.uleb128 0x1
 416 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 12


 417 0010 17       		.uleb128 0x17
 418 0011 00       		.byte	0
 419 0012 00       		.byte	0
 420 0013 02       		.uleb128 0x2
 421 0014 24       		.uleb128 0x24
 422 0015 00       		.byte	0
 423 0016 0B       		.uleb128 0xb
 424 0017 0B       		.uleb128 0xb
 425 0018 3E       		.uleb128 0x3e
 426 0019 0B       		.uleb128 0xb
 427 001a 03       		.uleb128 0x3
 428 001b 0E       		.uleb128 0xe
 429 001c 00       		.byte	0
 430 001d 00       		.byte	0
 431 001e 03       		.uleb128 0x3
 432 001f 24       		.uleb128 0x24
 433 0020 00       		.byte	0
 434 0021 0B       		.uleb128 0xb
 435 0022 0B       		.uleb128 0xb
 436 0023 3E       		.uleb128 0x3e
 437 0024 0B       		.uleb128 0xb
 438 0025 03       		.uleb128 0x3
 439 0026 08       		.uleb128 0x8
 440 0027 00       		.byte	0
 441 0028 00       		.byte	0
 442 0029 04       		.uleb128 0x4
 443 002a 16       		.uleb128 0x16
 444 002b 00       		.byte	0
 445 002c 03       		.uleb128 0x3
 446 002d 0E       		.uleb128 0xe
 447 002e 3A       		.uleb128 0x3a
 448 002f 0B       		.uleb128 0xb
 449 0030 3B       		.uleb128 0x3b
 450 0031 05       		.uleb128 0x5
 451 0032 49       		.uleb128 0x49
 452 0033 13       		.uleb128 0x13
 453 0034 00       		.byte	0
 454 0035 00       		.byte	0
 455 0036 05       		.uleb128 0x5
 456 0037 35       		.uleb128 0x35
 457 0038 00       		.byte	0
 458 0039 49       		.uleb128 0x49
 459 003a 13       		.uleb128 0x13
 460 003b 00       		.byte	0
 461 003c 00       		.byte	0
 462 003d 06       		.uleb128 0x6
 463 003e 2E       		.uleb128 0x2e
 464 003f 01       		.byte	0x1
 465 0040 3F       		.uleb128 0x3f
 466 0041 19       		.uleb128 0x19
 467 0042 03       		.uleb128 0x3
 468 0043 0E       		.uleb128 0xe
 469 0044 3A       		.uleb128 0x3a
 470 0045 0B       		.uleb128 0xb
 471 0046 3B       		.uleb128 0x3b
 472 0047 0B       		.uleb128 0xb
 473 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 13


 474 0049 19       		.uleb128 0x19
 475 004a 11       		.uleb128 0x11
 476 004b 01       		.uleb128 0x1
 477 004c 12       		.uleb128 0x12
 478 004d 06       		.uleb128 0x6
 479 004e 40       		.uleb128 0x40
 480 004f 18       		.uleb128 0x18
 481 0050 9742     		.uleb128 0x2117
 482 0052 19       		.uleb128 0x19
 483 0053 01       		.uleb128 0x1
 484 0054 13       		.uleb128 0x13
 485 0055 00       		.byte	0
 486 0056 00       		.byte	0
 487 0057 07       		.uleb128 0x7
 488 0058 05       		.uleb128 0x5
 489 0059 00       		.byte	0
 490 005a 03       		.uleb128 0x3
 491 005b 0E       		.uleb128 0xe
 492 005c 3A       		.uleb128 0x3a
 493 005d 0B       		.uleb128 0xb
 494 005e 3B       		.uleb128 0x3b
 495 005f 0B       		.uleb128 0xb
 496 0060 49       		.uleb128 0x49
 497 0061 13       		.uleb128 0x13
 498 0062 02       		.uleb128 0x2
 499 0063 18       		.uleb128 0x18
 500 0064 00       		.byte	0
 501 0065 00       		.byte	0
 502 0066 08       		.uleb128 0x8
 503 0067 2E       		.uleb128 0x2e
 504 0068 00       		.byte	0
 505 0069 3F       		.uleb128 0x3f
 506 006a 19       		.uleb128 0x19
 507 006b 03       		.uleb128 0x3
 508 006c 0E       		.uleb128 0xe
 509 006d 3A       		.uleb128 0x3a
 510 006e 0B       		.uleb128 0xb
 511 006f 3B       		.uleb128 0x3b
 512 0070 0B       		.uleb128 0xb
 513 0071 27       		.uleb128 0x27
 514 0072 19       		.uleb128 0x19
 515 0073 11       		.uleb128 0x11
 516 0074 01       		.uleb128 0x1
 517 0075 12       		.uleb128 0x12
 518 0076 06       		.uleb128 0x6
 519 0077 40       		.uleb128 0x40
 520 0078 18       		.uleb128 0x18
 521 0079 9742     		.uleb128 0x2117
 522 007b 19       		.uleb128 0x19
 523 007c 00       		.byte	0
 524 007d 00       		.byte	0
 525 007e 09       		.uleb128 0x9
 526 007f 34       		.uleb128 0x34
 527 0080 00       		.byte	0
 528 0081 03       		.uleb128 0x3
 529 0082 0E       		.uleb128 0xe
 530 0083 3A       		.uleb128 0x3a
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 14


 531 0084 0B       		.uleb128 0xb
 532 0085 3B       		.uleb128 0x3b
 533 0086 0B       		.uleb128 0xb
 534 0087 49       		.uleb128 0x49
 535 0088 13       		.uleb128 0x13
 536 0089 02       		.uleb128 0x2
 537 008a 18       		.uleb128 0x18
 538 008b 00       		.byte	0
 539 008c 00       		.byte	0
 540 008d 0A       		.uleb128 0xa
 541 008e 2E       		.uleb128 0x2e
 542 008f 00       		.byte	0
 543 0090 3F       		.uleb128 0x3f
 544 0091 19       		.uleb128 0x19
 545 0092 03       		.uleb128 0x3
 546 0093 0E       		.uleb128 0xe
 547 0094 3A       		.uleb128 0x3a
 548 0095 0B       		.uleb128 0xb
 549 0096 3B       		.uleb128 0x3b
 550 0097 0B       		.uleb128 0xb
 551 0098 27       		.uleb128 0x27
 552 0099 19       		.uleb128 0x19
 553 009a 49       		.uleb128 0x49
 554 009b 13       		.uleb128 0x13
 555 009c 11       		.uleb128 0x11
 556 009d 01       		.uleb128 0x1
 557 009e 12       		.uleb128 0x12
 558 009f 06       		.uleb128 0x6
 559 00a0 40       		.uleb128 0x40
 560 00a1 18       		.uleb128 0x18
 561 00a2 9742     		.uleb128 0x2117
 562 00a4 19       		.uleb128 0x19
 563 00a5 00       		.byte	0
 564 00a6 00       		.byte	0
 565 00a7 00       		.byte	0
 566              		.section	.debug_aranges,"",%progbits
 567 0000 3C000000 		.4byte	0x3c
 568 0004 0200     		.2byte	0x2
 569 0006 00000000 		.4byte	.Ldebug_info0
 570 000a 04       		.byte	0x4
 571 000b 00       		.byte	0
 572 000c 0000     		.2byte	0
 573 000e 0000     		.2byte	0
 574 0010 00000000 		.4byte	.LFB0
 575 0014 28000000 		.4byte	.LFE0-.LFB0
 576 0018 00000000 		.4byte	.LFB1
 577 001c 1C000000 		.4byte	.LFE1-.LFB1
 578 0020 00000000 		.4byte	.LFB2
 579 0024 48000000 		.4byte	.LFE2-.LFB2
 580 0028 00000000 		.4byte	.LFB3
 581 002c 14000000 		.4byte	.LFE3-.LFB3
 582 0030 00000000 		.4byte	.LFB4
 583 0034 06000000 		.4byte	.LFE4-.LFB4
 584 0038 00000000 		.4byte	0
 585 003c 00000000 		.4byte	0
 586              		.section	.debug_ranges,"",%progbits
 587              	.Ldebug_ranges0:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 15


 588 0000 00000000 		.4byte	.LFB0
 589 0004 28000000 		.4byte	.LFE0
 590 0008 00000000 		.4byte	.LFB1
 591 000c 1C000000 		.4byte	.LFE1
 592 0010 00000000 		.4byte	.LFB2
 593 0014 48000000 		.4byte	.LFE2
 594 0018 00000000 		.4byte	.LFB3
 595 001c 14000000 		.4byte	.LFE3
 596 0020 00000000 		.4byte	.LFB4
 597 0024 06000000 		.4byte	.LFE4
 598 0028 00000000 		.4byte	0
 599 002c 00000000 		.4byte	0
 600              		.section	.debug_line,"",%progbits
 601              	.Ldebug_line0:
 602 0000 C4000000 		.section	.debug_str,"MS",%progbits,1
 602      02004800 
 602      00000201 
 602      FB0E0D00 
 602      01010101 
 603              	.LASF15:
 604 0000 72656733 		.ascii	"reg32\000"
 604      3200
 605              	.LASF25:
 606 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 606      43313120 
 606      352E342E 
 606      31203230 
 606      31363036 
 607 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 607      20726576 
 607      6973696F 
 607      6E203233 
 607      37373135 
 608 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 608      66756E63 
 608      74696F6E 
 608      2D736563 
 608      74696F6E 
 609 009f 652D706F 		.ascii	"e-pointer\000"
 609      696E7465 
 609      7200
 610              	.LASF21:
 611 00a9 6D61736B 		.ascii	"maskVal\000"
 611      56616C00 
 612              	.LASF28:
 613 00b1 55415254 		.ascii	"UART_SCBCLK_Stop\000"
 613      5F534342 
 613      434C4B5F 
 613      53746F70 
 613      00
 614              	.LASF16:
 615 00c2 55415254 		.ascii	"UART_SCBCLK_StartEx\000"
 615      5F534342 
 615      434C4B5F 
 615      53746172 
 615      74457800 
 616              	.LASF12:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 16


 617 00d6 666C6F61 		.ascii	"float\000"
 617      7400
 618              	.LASF1:
 619 00dc 756E7369 		.ascii	"unsigned char\000"
 619      676E6564 
 619      20636861 
 619      7200
 620              	.LASF5:
 621 00ea 6C6F6E67 		.ascii	"long unsigned int\000"
 621      20756E73 
 621      69676E65 
 621      6420696E 
 621      7400
 622              	.LASF3:
 623 00fc 73686F72 		.ascii	"short unsigned int\000"
 623      7420756E 
 623      7369676E 
 623      65642069 
 623      6E7400
 624              	.LASF22:
 625 010f 72656756 		.ascii	"regVal\000"
 625      616C00
 626              	.LASF19:
 627 0116 636C6B44 		.ascii	"clkDivider\000"
 627      69766964 
 627      657200
 628              	.LASF13:
 629 0121 646F7562 		.ascii	"double\000"
 629      6C6500
 630              	.LASF10:
 631 0128 75696E74 		.ascii	"uint16\000"
 631      313600
 632              	.LASF18:
 633 012f 616C6967 		.ascii	"alignClkDiv\000"
 633      6E436C6B 
 633      44697600 
 634              	.LASF24:
 635 013b 55415254 		.ascii	"UART_SCBCLK_GetFractionalDividerRegister\000"
 635      5F534342 
 635      434C4B5F 
 635      47657446 
 635      72616374 
 636              	.LASF20:
 637 0164 636C6B46 		.ascii	"clkFractional\000"
 637      72616374 
 637      696F6E61 
 637      6C00
 638              	.LASF27:
 639 0172 443A5C44 		.ascii	"D:\\Dropbox\\5_kurs\\diploma\\led_lamp(for_diploma)"
 639      726F7062 
 639      6F785C35 
 639      5F6B7572 
 639      735C6469 
 640 01a1 5C424C45 		.ascii	"\\BLE_Dynamic_GATT_Service_Configuration\\BLE_Dynam"
 640      5F44796E 
 640      616D6963 
 640      5F474154 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 17


 640      545F5365 
 641 01d2 69635F47 		.ascii	"ic_GATT_Service_Configuration.cydsn\000"
 641      4154545F 
 641      53657276 
 641      6963655F 
 641      436F6E66 
 642              	.LASF11:
 643 01f6 75696E74 		.ascii	"uint32\000"
 643      333200
 644              	.LASF8:
 645 01fd 756E7369 		.ascii	"unsigned int\000"
 645      676E6564 
 645      20696E74 
 645      00
 646              	.LASF7:
 647 020a 6C6F6E67 		.ascii	"long long unsigned int\000"
 647      206C6F6E 
 647      6720756E 
 647      7369676E 
 647      65642069 
 648              	.LASF23:
 649 0221 55415254 		.ascii	"UART_SCBCLK_GetDividerRegister\000"
 649      5F534342 
 649      434C4B5F 
 649      47657444 
 649      69766964 
 650              	.LASF17:
 651 0240 55415254 		.ascii	"UART_SCBCLK_SetFractionalDividerRegister\000"
 651      5F534342 
 651      434C4B5F 
 651      53657446 
 651      72616374 
 652              	.LASF6:
 653 0269 6C6F6E67 		.ascii	"long long int\000"
 653      206C6F6E 
 653      6720696E 
 653      7400
 654              	.LASF14:
 655 0277 63686172 		.ascii	"char\000"
 655      00
 656              	.LASF26:
 657 027c 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_SCBCLK.c\000"
 657      72617465 
 657      645F536F 
 657      75726365 
 657      5C50536F 
 658              	.LASF2:
 659 02a1 73686F72 		.ascii	"short int\000"
 659      7420696E 
 659      7400
 660              	.LASF9:
 661 02ab 75696E74 		.ascii	"uint8\000"
 661      3800
 662              	.LASF4:
 663 02b1 6C6F6E67 		.ascii	"long int\000"
 663      20696E74 
 663      00
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccYoz0sK.s 			page 18


 664              	.LASF0:
 665 02ba 7369676E 		.ascii	"signed char\000"
 665      65642063 
 665      68617200 
 666              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
