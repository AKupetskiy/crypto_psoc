ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkWcoSetHighPowerMode, %function
  24              	CySysClkWcoSetHighPowerMode:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 2


  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 3


  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 4


 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 5


 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 6


 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 7


 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 8


 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 9


 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 10


 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 11


 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 12


 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.h ****     {
  27              		.loc 1 659 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  32              		.loc 1 661 0
  33 0000 0E4B     		ldr	r3, .L2
  34 0002 0E4A     		ldr	r2, .L2
  35 0004 1268     		ldr	r2, [r2]
  36 0006 0121     		movs	r1, #1
  37 0008 8A43     		bics	r2, r1
  38 000a 1A60     		str	r2, [r3]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  39              		.loc 1 664 0
  40 000c 0B4B     		ldr	r3, .L2
  41 000e 0B4A     		ldr	r2, .L2
  42 0010 1268     		ldr	r2, [r2]
  43 0012 0221     		movs	r1, #2
  44 0014 8A43     		bics	r2, r1
  45 0016 1A60     		str	r2, [r3]
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
  46              		.loc 1 667 0
  47 0018 094B     		ldr	r3, .L2+4
  48 001a 094A     		ldr	r2, .L2+4
  49 001c 1268     		ldr	r2, [r2]
  50 001e 3021     		movs	r1, #48
  51 0020 8A43     		bics	r2, r1
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  52              		.loc 1 668 0
  53 0022 1021     		movs	r1, #16
  54 0024 0A43     		orrs	r2, r1
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  55              		.loc 1 667 0
  56 0026 1A60     		str	r2, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  57              		.loc 1 669 0
  58 0028 054B     		ldr	r3, .L2+4
  59 002a 054A     		ldr	r2, .L2+4
  60 002c 1268     		ldr	r2, [r2]
  61 002e 0721     		movs	r1, #7
  62 0030 8A43     		bics	r2, r1
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  63              		.loc 1 670 0
  64 0032 0121     		movs	r1, #1
  65 0034 0A43     		orrs	r2, r1
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  66              		.loc 1 669 0
  67 0036 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/CyLFClk.h ****     }
  68              		.loc 1 671 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 14


  69 0038 C046     		nop
  70              		@ sp needed
  71 003a 7047     		bx	lr
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 003c 00F02E40 		.word	1076817920
  76 0040 00FF2E40 		.word	1076821760
  77              		.cfi_endproc
  78              	.LFE0:
  79              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  80              		.section	.text.CySysClkWcoSetLowPowerMode,"ax",%progbits
  81              		.align	2
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWcoSetLowPowerMode, %function
  85              	CySysClkWcoSetLowPowerMode:
  86              	.LFB1:
 672:Generated_Source\PSoC4/CyLFClk.h **** 
 673:Generated_Source\PSoC4/CyLFClk.h ****     #if(CY_IP_BLESS)
 674:Generated_Source\PSoC4/CyLFClk.h ****         /*******************************************************************************
 675:Generated_Source\PSoC4/CyLFClk.h ****         * Function Name: CySysClkWcoSetLowPowerMode
 676:Generated_Source\PSoC4/CyLFClk.h ****         ********************************************************************************
 677:Generated_Source\PSoC4/CyLFClk.h ****         *
 678:Generated_Source\PSoC4/CyLFClk.h ****         * Summary:
 679:Generated_Source\PSoC4/CyLFClk.h ****         *  Sets the low power mode for the 32 KHz WCO.
 680:Generated_Source\PSoC4/CyLFClk.h ****         *
 681:Generated_Source\PSoC4/CyLFClk.h ****         *  Note LPM available only for PSoC 4100 BLE / PSoC4 4200 BLE
 682:Generated_Source\PSoC4/CyLFClk.h ****         *******************************************************************************/
 683:Generated_Source\PSoC4/CyLFClk.h ****         static CY_INLINE void CySysClkWcoSetLowPowerMode(void)
 684:Generated_Source\PSoC4/CyLFClk.h ****         {
  87              		.loc 1 684 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 685:Generated_Source\PSoC4/CyLFClk.h ****             /* Switch off auto low power mode in WCO */
 686:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  92              		.loc 1 686 0
  93 0000 0E4B     		ldr	r3, .L5
  94 0002 0E4A     		ldr	r2, .L5
  95 0004 1268     		ldr	r2, [r2]
  96 0006 0221     		movs	r1, #2
  97 0008 8A43     		bics	r2, r1
  98 000a 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CyLFClk.h **** 
 688:Generated_Source\PSoC4/CyLFClk.h ****             /* Change WCO trim register settings to LPM */
 689:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_
  99              		.loc 1 689 0
 100 000c 0C4B     		ldr	r3, .L5+4
 101 000e 0C4A     		ldr	r2, .L5+4
 102 0010 1268     		ldr	r2, [r2]
 103 0012 0721     		movs	r1, #7
 104 0014 8A43     		bics	r2, r1
 690:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2250NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT)
 105              		.loc 1 690 0
 106 0016 0221     		movs	r1, #2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 15


 107 0018 0A43     		orrs	r2, r1
 689:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2250NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT)
 108              		.loc 1 689 0
 109 001a 1A60     		str	r2, [r3]
 691:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_M
 110              		.loc 1 691 0
 111 001c 084B     		ldr	r3, .L5+4
 112 001e 084A     		ldr	r2, .L5+4
 113 0020 1268     		ldr	r2, [r2]
 114 0022 3021     		movs	r1, #48
 115 0024 8A43     		bics	r2, r1
 692:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_LPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 116              		.loc 1 692 0
 117 0026 2021     		movs	r1, #32
 118 0028 0A43     		orrs	r2, r1
 691:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_M
 119              		.loc 1 691 0
 120 002a 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/CyLFClk.h **** 
 694:Generated_Source\PSoC4/CyLFClk.h ****             /* Switch on low power mode for WCO */
 695:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 121              		.loc 1 695 0
 122 002c 034B     		ldr	r3, .L5
 123 002e 034A     		ldr	r2, .L5
 124 0030 1268     		ldr	r2, [r2]
 125 0032 0121     		movs	r1, #1
 126 0034 0A43     		orrs	r2, r1
 127 0036 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/CyLFClk.h ****         }
 128              		.loc 1 696 0
 129 0038 C046     		nop
 130              		@ sp needed
 131 003a 7047     		bx	lr
 132              	.L6:
 133              		.align	2
 134              	.L5:
 135 003c 00F02E40 		.word	1076817920
 136 0040 00FF2E40 		.word	1076821760
 137              		.cfi_endproc
 138              	.LFE1:
 139              		.size	CySysClkWcoSetLowPowerMode, .-CySysClkWcoSetLowPowerMode
 140              		.data
 141              		.align	1
 142              		.type	defaultIloTrimRegValue, %object
 143              		.size	defaultIloTrimRegValue, 2
 144              	defaultIloTrimRegValue:
 145 0000 F000     		.short	240
 146              		.bss
 147              		.align	2
 148              	lfclkPosedgeWdtCounter0Enabled:
 149 0000 00000000 		.space	4
 150              		.align	2
 151              	lfclkPosedgeWdtCounter0Mode:
 152 0004 00000000 		.space	4
 153              		.align	2
 154              	disableServicedIsr:
 155 0008 00000000 		.space	4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 16


 156              		.data
 157 0002 0000     		.align	2
 158              		.type	wdtIsrMask, %object
 159              		.size	wdtIsrMask, 4
 160              	wdtIsrMask:
 161 0004 04040400 		.word	263172
 162              		.section	.rodata
 163              		.align	2
 164              		.type	counterIntMaskTbl, %object
 165              		.size	counterIntMaskTbl, 12
 166              	counterIntMaskTbl:
 167 0000 04000000 		.word	4
 168 0004 00040000 		.word	1024
 169 0008 00000400 		.word	262144
 170              		.bss
 171              		.align	2
 172              	cySysWdtCallback:
 173 000c 00000000 		.space	12
 173      00000000 
 173      00000000 
 174              		.section	.text.CySysClkIloStart,"ax",%progbits
 175              		.align	2
 176              		.global	CySysClkIloStart
 177              		.code	16
 178              		.thumb_func
 179              		.type	CySysClkIloStart, %function
 180              	CySysClkIloStart:
 181              	.LFB2:
 182              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 17


  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
 183              		.loc 2 84 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 18


 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 188              		.loc 2 85 0
 189 0000 044B     		ldr	r3, .L8
 190 0002 044A     		ldr	r2, .L8
 191 0004 1268     		ldr	r2, [r2]
 192 0006 8021     		movs	r1, #128
 193 0008 0906     		lsls	r1, r1, #24
 194 000a 0A43     		orrs	r2, r1
 195 000c 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
 196              		.loc 2 86 0
 197 000e C046     		nop
 198              		@ sp needed
 199 0010 7047     		bx	lr
 200              	.L9:
 201 0012 C046     		.align	2
 202              	.L8:
 203 0014 04010B40 		.word	1074462980
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	CySysClkIloStart, .-CySysClkIloStart
 207              		.section	.text.CySysClkIloStop,"ax",%progbits
 208              		.align	2
 209              		.global	CySysClkIloStop
 210              		.code	16
 211              		.thumb_func
 212              		.type	CySysClkIloStop, %function
 213              	CySysClkIloStop:
 214              	.LFB3:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 215              		.loc 2 109 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 19


 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 8
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 10B5     		push	{r4, lr}
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
 223 0002 82B0     		sub	sp, sp, #8
 224              		.cfi_def_cfa_offset 16
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 225              		.loc 2 114 0
 226 0004 FFF7FEFF 		bl	CySysWdtLocked
 227 0008 031E     		subs	r3, r0, #0
 228 000a 24D1     		bne	.L13
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 229              		.loc 2 116 0
 230 000c FFF7FEFF 		bl	CySysClkIloEnabled
 231 0010 031E     		subs	r3, r0, #0
 232 0012 20D0     		beq	.L13
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 233              		.loc 2 120 0
 234 0014 FFF7FEFF 		bl	CySysClkGetLfclkSource
 235 0018 031E     		subs	r3, r0, #0
 236 001a 16D1     		bne	.L12
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 237              		.loc 2 124 0
 238 001c 6B46     		mov	r3, sp
 239 001e DC1D     		adds	r4, r3, #7
 240 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 241 0024 0300     		movs	r3, r0
 242 0026 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 243              		.loc 2 125 0
 244 0028 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 245              		.loc 2 126 0
 246 002c 0B4B     		ldr	r3, .L14
 247 002e 0B4A     		ldr	r2, .L14
 248 0030 1268     		ldr	r2, [r2]
 249 0032 5200     		lsls	r2, r2, #1
 250 0034 5208     		lsrs	r2, r2, #1
 251 0036 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 252              		.loc 2 127 0
 253 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 20


 254              		.loc 2 128 0
 255 003c 6B46     		mov	r3, sp
 256 003e 0733     		adds	r3, r3, #7
 257 0040 1B78     		ldrb	r3, [r3]
 258 0042 1800     		movs	r0, r3
 259 0044 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 260              		.loc 2 143 0
 261 0048 05E0     		b	.L13
 262              	.L12:
 134:Generated_Source\PSoC4/CyLFClk.c ****                 }
 263              		.loc 2 134 0
 264 004a 044B     		ldr	r3, .L14
 265 004c 034A     		ldr	r2, .L14
 266 004e 1268     		ldr	r2, [r2]
 267 0050 5200     		lsls	r2, r2, #1
 268 0052 5208     		lsrs	r2, r2, #1
 269 0054 1A60     		str	r2, [r3]
 270              	.L13:
 271              		.loc 2 143 0
 272 0056 C046     		nop
 273 0058 02B0     		add	sp, sp, #8
 274              		@ sp needed
 275 005a 10BD     		pop	{r4, pc}
 276              	.L15:
 277              		.align	2
 278              	.L14:
 279 005c 04010B40 		.word	1074462980
 280              		.cfi_endproc
 281              	.LFE3:
 282              		.size	CySysClkIloStop, .-CySysClkIloStop
 283              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 284              		.align	2
 285              		.global	CySysClkIloStartMeasurement
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysClkIloStartMeasurement, %function
 289              	CySysClkIloStartMeasurement:
 290              	.LFB4:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 21


 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 291              		.loc 2 169 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 296              		.loc 2 174 0
 297 0000 114B     		ldr	r3, .L18
 298 0002 1B78     		ldrb	r3, [r3]
 299 0004 002B     		cmp	r3, #0
 300 0006 0BD1     		bne	.L17
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 301              		.loc 2 176 0
 302 0008 104B     		ldr	r3, .L18+4
 303 000a 1B68     		ldr	r3, [r3]
 304 000c DBB2     		uxtb	r3, r3
 305 000e 9BB2     		uxth	r3, r3
 306 0010 0F22     		movs	r2, #15
 307 0012 1340     		ands	r3, r2
 308 0014 9AB2     		uxth	r2, r3
 309 0016 0E4B     		ldr	r3, .L18+8
 310 0018 1A80     		strh	r2, [r3]
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 311              		.loc 2 177 0
 312 001a 0B4B     		ldr	r3, .L18
 313 001c 0122     		movs	r2, #1
 314 001e 1A70     		strb	r2, [r3]
 315              	.L17:
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 22


 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 316              		.loc 2 182 0
 317 0020 0C4B     		ldr	r3, .L18+12
 318 0022 0C4A     		ldr	r2, .L18+12
 319 0024 1268     		ldr	r2, [r2]
 320 0026 0C49     		ldr	r1, .L18+16
 321 0028 0A40     		ands	r2, r1
 322 002a 8021     		movs	r1, #128
 323 002c 4900     		lsls	r1, r1, #1
 324 002e 0A43     		orrs	r2, r1
 325 0030 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 326              		.loc 2 185 0
 327 0032 0A4B     		ldr	r3, .L18+20
 328 0034 094A     		ldr	r2, .L18+20
 329 0036 1268     		ldr	r2, [r2]
 330 0038 0949     		ldr	r1, .L18+24
 331 003a 0A40     		ands	r2, r1
 332 003c 0949     		ldr	r1, .L18+28
 333 003e 0A43     		orrs	r2, r1
 334 0040 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 335              		.loc 2 187 0
 336 0042 C046     		nop
 337              		@ sp needed
 338 0044 7047     		bx	lr
 339              	.L19:
 340 0046 C046     		.align	2
 341              	.L18:
 342 0048 18000000 		.word	iloTrimTrig.4876
 343 004c 24FF0B40 		.word	1074528036
 344 0050 00000000 		.word	defaultIloTrimRegValue
 345 0054 10010B40 		.word	1074462992
 346 0058 FFF0FFFF 		.word	-3841
 347 005c 08000340 		.word	1073938440
 348 0060 C0C0FFFF 		.word	-16192
 349 0064 0A0B0000 		.word	2826
 350              		.cfi_endproc
 351              	.LFE4:
 352              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 353              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 354              		.align	2
 355              		.global	CySysClkIloStopMeasurement
 356              		.code	16
 357              		.thumb_func
 358              		.type	CySysClkIloStopMeasurement, %function
 359              	CySysClkIloStopMeasurement:
 360              	.LFB5:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 23


 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 361              		.loc 2 202 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 366              		.loc 2 204 0
 367 0000 034B     		ldr	r3, .L21
 368 0002 034A     		ldr	r2, .L21
 369 0004 1268     		ldr	r2, [r2]
 370 0006 0349     		ldr	r1, .L21+4
 371 0008 0A40     		ands	r2, r1
 372 000a 1A60     		str	r2, [r3]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 373              		.loc 2 208 0
 374 000c C046     		nop
 375              		@ sp needed
 376 000e 7047     		bx	lr
 377              	.L22:
 378              		.align	2
 379              	.L21:
 380 0010 10010B40 		.word	1074462992
 381 0014 FFF0FFFF 		.word	-3841
 382              		.cfi_endproc
 383              	.LFE5:
 384              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 385              		.global	__aeabi_uidiv
 386              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 387              		.align	2
 388              		.global	CySysClkIloCompensate
 389              		.code	16
 390              		.thumb_func
 391              		.type	CySysClkIloCompensate, %function
 392              	CySysClkIloCompensate:
 393              	.LFB6:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 24


 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 394              		.loc 2 268 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 24
 397              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 25


 398 0000 10B5     		push	{r4, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 402 0002 86B0     		sub	sp, sp, #24
 403              		.cfi_def_cfa_offset 32
 404 0004 0190     		str	r0, [sp, #4]
 405 0006 0091     		str	r1, [sp]
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 406              		.loc 2 275 0
 407 0008 464B     		ldr	r3, .L35
 408 000a 1B68     		ldr	r3, [r3]
 409 000c 464A     		ldr	r2, .L35+4
 410 000e 1340     		ands	r3, r2
 411 0010 0393     		str	r3, [sp, #12]
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 412              		.loc 2 278 0
 413 0012 039A     		ldr	r2, [sp, #12]
 414 0014 8023     		movs	r3, #128
 415 0016 5B00     		lsls	r3, r3, #1
 416 0018 9A42     		cmp	r2, r3
 417 001a 00D0     		beq	.LCB287
 418 001c 7CE0     		b	.L24	@long jump
 419              	.LCB287:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 420              		.loc 2 279 0 discriminator 1
 421 001e 434B     		ldr	r3, .L35+8
 422 0020 1B68     		ldr	r3, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 423              		.loc 2 278 0 discriminator 1
 424 0022 434A     		ldr	r2, .L35+12
 425 0024 9342     		cmp	r3, r2
 426 0026 00D0     		beq	.LCB292
 427 0028 76E0     		b	.L24	@long jump
 428              	.LCB292:
 429              		.loc 2 279 0
 430 002a 019B     		ldr	r3, [sp, #4]
 431 002c 414A     		ldr	r2, .L35+16
 432 002e 9342     		cmp	r3, r2
 433 0030 00D9     		bls	.LCB296
 434 0032 71E0     		b	.L24	@long jump
 435              	.LCB296:
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 436              		.loc 2 280 0
 437 0034 019B     		ldr	r3, [sp, #4]
 438 0036 632B     		cmp	r3, #99
 439 0038 6ED9     		bls	.L24
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 440              		.loc 2 281 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 26


 441 003a 009B     		ldr	r3, [sp]
 442 003c 002B     		cmp	r3, #0
 443 003e 6BD0     		beq	.L24
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 444              		.loc 2 284 0
 445 0040 3D4B     		ldr	r3, .L35+20
 446 0042 1B68     		ldr	r3, [r3]
 447 0044 002B     		cmp	r3, #0
 448 0046 5CD0     		beq	.L25
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 449              		.loc 2 287 0
 450 0048 3C4B     		ldr	r3, .L35+24
 451 004a 1B68     		ldr	r3, [r3]
 452 004c 002B     		cmp	r3, #0
 453 004e 55DA     		bge	.L26
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 454              		.loc 2 289 0
 455 0050 3B4B     		ldr	r3, .L35+28
 456 0052 1B68     		ldr	r3, [r3]
 457 0054 002B     		cmp	r3, #0
 458 0056 4ED0     		beq	.L27
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 459              		.loc 2 293 0
 460 0058 019B     		ldr	r3, [sp, #4]
 461 005a 3A4A     		ldr	r2, .L35+32
 462 005c 9342     		cmp	r3, r2
 463 005e 1ED9     		bls	.L28
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 464              		.loc 2 295 0
 465 0060 019B     		ldr	r3, [sp, #4]
 466 0062 1F21     		movs	r1, #31
 467 0064 1800     		movs	r0, r3
 468 0066 FFF7FEFF 		bl	__aeabi_uidiv
 469 006a 0300     		movs	r3, r0
 470 006c 0293     		str	r3, [sp, #8]
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 471              		.loc 2 297 0
 472 006e 344B     		ldr	r3, .L35+28
 473 0070 1A68     		ldr	r2, [r3]
 474 0072 354B     		ldr	r3, .L35+36
 475 0074 1B68     		ldr	r3, [r3]
 476 0076 5A43     		muls	r2, r3
 477 0078 334B     		ldr	r3, .L35+36
 478 007a 1B68     		ldr	r3, [r3]
 479 007c 9B0A     		lsrs	r3, r3, #10
 480 007e 1900     		movs	r1, r3
 481 0080 1000     		movs	r0, r2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 27


 482 0082 FFF7FEFF 		bl	__aeabi_uidiv
 483 0086 0300     		movs	r3, r0
 484 0088 5C09     		lsrs	r4, r3, #5
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 485              		.loc 2 298 0
 486 008a 029A     		ldr	r2, [sp, #8]
 487 008c FA23     		movs	r3, #250
 488 008e 9900     		lsls	r1, r3, #2
 489 0090 1000     		movs	r0, r2
 490 0092 FFF7FEFF 		bl	__aeabi_uidiv
 491 0096 0300     		movs	r3, r0
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 492              		.loc 2 296 0
 493 0098 6343     		muls	r3, r4
 494 009a 0593     		str	r3, [sp, #20]
 495 009c 22E0     		b	.L29
 496              	.L28:
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 497              		.loc 2 302 0
 498 009e 019B     		ldr	r3, [sp, #4]
 499 00a0 6422     		movs	r2, #100
 500 00a2 5343     		muls	r3, r2
 501 00a4 294A     		ldr	r2, .L35+40
 502 00a6 9446     		mov	ip, r2
 503 00a8 6344     		add	r3, r3, ip
 504 00aa 2949     		ldr	r1, .L35+44
 505 00ac 1800     		movs	r0, r3
 506 00ae FFF7FEFF 		bl	__aeabi_uidiv
 507 00b2 0300     		movs	r3, r0
 508 00b4 0293     		str	r3, [sp, #8]
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 509              		.loc 2 305 0
 510 00b6 224B     		ldr	r3, .L35+28
 511 00b8 1A68     		ldr	r2, [r3]
 512 00ba 234B     		ldr	r3, .L35+36
 513 00bc 1B68     		ldr	r3, [r3]
 514 00be 5A43     		muls	r2, r3
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 515              		.loc 2 306 0
 516 00c0 214B     		ldr	r3, .L35+36
 517 00c2 1B68     		ldr	r3, [r3]
 518 00c4 9B0A     		lsrs	r3, r3, #10
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 519              		.loc 2 305 0
 520 00c6 1900     		movs	r1, r3
 521 00c8 1000     		movs	r0, r2
 522 00ca FFF7FEFF 		bl	__aeabi_uidiv
 523 00ce 0300     		movs	r3, r0
 524 00d0 1A00     		movs	r2, r3
 525              		.loc 2 306 0
 526 00d2 029B     		ldr	r3, [sp, #8]
 527 00d4 5A43     		muls	r2, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 28


 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 528              		.loc 2 305 0
 529 00d6 FA23     		movs	r3, #250
 530 00d8 D901     		lsls	r1, r3, #7
 531 00da 1000     		movs	r0, r2
 532 00dc FFF7FEFF 		bl	__aeabi_uidiv
 533 00e0 0300     		movs	r3, r0
 534 00e2 0593     		str	r3, [sp, #20]
 535              	.L29:
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 536              		.loc 2 326 0
 537 00e4 009B     		ldr	r3, [sp]
 538 00e6 059A     		ldr	r2, [sp, #20]
 539 00e8 1A60     		str	r2, [r3]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 540              		.loc 2 327 0
 541 00ea 134B     		ldr	r3, .L35+20
 542 00ec 0022     		movs	r2, #0
 543 00ee 1A60     		str	r2, [r3]
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 544              		.loc 2 328 0
 545 00f0 0023     		movs	r3, #0
 546 00f2 0493     		str	r3, [sp, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 547              		.loc 2 284 0
 548 00f4 12E0     		b	.L33
 549              	.L27:
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 550              		.loc 2 332 0
 551 00f6 1123     		movs	r3, #17
 552 00f8 0493     		str	r3, [sp, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 553              		.loc 2 284 0
 554 00fa 0FE0     		b	.L33
 555              	.L26:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 29


 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 556              		.loc 2 337 0
 557 00fc 0723     		movs	r3, #7
 558 00fe 0493     		str	r3, [sp, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 559              		.loc 2 284 0
 560 0100 0CE0     		b	.L33
 561              	.L25:
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 562              		.loc 2 343 0
 563 0102 0E4A     		ldr	r2, .L35+24
 564 0104 104B     		ldr	r3, .L35+36
 565 0106 1B68     		ldr	r3, [r3]
 566 0108 9B0A     		lsrs	r3, r3, #10
 567 010a 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 568              		.loc 2 344 0
 569 010c 0A4B     		ldr	r3, .L35+20
 570 010e 0122     		movs	r2, #1
 571 0110 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 572              		.loc 2 345 0
 573 0112 0723     		movs	r3, #7
 574 0114 0493     		str	r3, [sp, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 575              		.loc 2 284 0
 576 0116 01E0     		b	.L33
 577              	.L24:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 578              		.loc 2 350 0
 579 0118 1123     		movs	r3, #17
 580 011a 0493     		str	r3, [sp, #16]
 581              	.L33:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 582              		.loc 2 353 0
 583 011c 049B     		ldr	r3, [sp, #16]
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 584              		.loc 2 354 0
 585 011e 1800     		movs	r0, r3
 586 0120 06B0     		add	sp, sp, #24
 587              		@ sp needed
 588 0122 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 30


 589              	.L36:
 590              		.align	2
 591              	.L35:
 592 0124 10010B40 		.word	1074462992
 593 0128 3F3F0000 		.word	16191
 594 012c 08000340 		.word	1073938440
 595 0130 0A0B0000 		.word	2826
 596 0134 00286BEE 		.word	-294967296
 597 0138 1C000000 		.word	compensateRunningStatus.4886
 598 013c 18000340 		.word	1073938456
 599 0140 1C000340 		.word	1073938460
 600 0144 60D10000 		.word	53600
 601 0148 00000000 		.word	cydelayFreqHz
 602 014c 0D030000 		.word	781
 603 0150 350C0000 		.word	3125
 604              		.cfi_endproc
 605              	.LFE6:
 606              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 607              		.section	.text.CySysClkIloEnabled,"ax",%progbits
 608              		.align	2
 609              		.code	16
 610              		.thumb_func
 611              		.type	CySysClkIloEnabled, %function
 612              	CySysClkIloEnabled:
 613              	.LFB7:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 614              		.loc 2 371 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 619              		.loc 2 373 0
 620 0000 044B     		ldr	r3, .L41
 621 0002 1B68     		ldr	r3, [r3]
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 622              		.loc 2 374 0
 623 0004 002B     		cmp	r3, #0
 624 0006 01DA     		bge	.L38
 625              		.loc 2 374 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 31


 626 0008 0123     		movs	r3, #1
 373:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 627              		.loc 2 373 0 is_stmt 1 discriminator 1
 628 000a 00E0     		b	.L40
 629              	.L38:
 630              		.loc 2 374 0 discriminator 2
 631 000c 0023     		movs	r3, #0
 632              	.L40:
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 633              		.loc 2 376 0 discriminator 1
 634 000e 1800     		movs	r0, r3
 635              		@ sp needed
 636 0010 7047     		bx	lr
 637              	.L42:
 638 0012 C046     		.align	2
 639              	.L41:
 640 0014 04010B40 		.word	1074462980
 641              		.cfi_endproc
 642              	.LFE7:
 643              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
 644              		.section	.text.CySysClkIloTrim,"ax",%progbits
 645              		.align	2
 646              		.global	CySysClkIloTrim
 647              		.code	16
 648              		.thumb_func
 649              		.type	CySysClkIloTrim, %function
 650              	CySysClkIloTrim:
 651              	.LFB8:
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 32


 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 652              		.loc 2 450 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 24
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656 0000 00B5     		push	{lr}
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 14, -4
 659 0002 87B0     		sub	sp, sp, #28
 660              		.cfi_def_cfa_offset 32
 661 0004 0190     		str	r0, [sp, #4]
 662 0006 0091     		str	r1, [sp]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 33


 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 663              		.loc 2 451 0
 664 0008 0523     		movs	r3, #5
 665 000a 0593     		str	r3, [sp, #20]
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 666              		.loc 2 457 0
 667 000c 3D4B     		ldr	r3, .L61
 668 000e 1B68     		ldr	r3, [r3]
 669 0010 3D4A     		ldr	r2, .L61+4
 670 0012 1340     		ands	r3, r2
 671 0014 0293     		str	r3, [sp, #8]
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 672              		.loc 2 460 0
 673 0016 029A     		ldr	r2, [sp, #8]
 674 0018 8023     		movs	r3, #128
 675 001a 5B00     		lsls	r3, r3, #1
 676 001c 9A42     		cmp	r2, r3
 677 001e 00D0     		beq	.LCB506
 678 0020 69E0     		b	.L44	@long jump
 679              	.LCB506:
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 680              		.loc 2 461 0 discriminator 1
 681 0022 3A4B     		ldr	r3, .L61+8
 682 0024 1B68     		ldr	r3, [r3]
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 683              		.loc 2 460 0 discriminator 1
 684 0026 3A4A     		ldr	r2, .L61+12
 685 0028 9342     		cmp	r3, r2
 686 002a 00D0     		beq	.LCB511
 687 002c 63E0     		b	.L44	@long jump
 688              	.LCB511:
 689              		.loc 2 461 0
 690 002e 009B     		ldr	r3, [sp]
 691 0030 002B     		cmp	r3, #0
 692 0032 60D0     		beq	.L44
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 693              		.loc 2 464 0
 694 0034 019B     		ldr	r3, [sp, #4]
 695 0036 002B     		cmp	r3, #0
 696 0038 3DD1     		bne	.L45
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 697              		.loc 2 466 0
 698 003a 364B     		ldr	r3, .L61+16
 699 003c 1B68     		ldr	r3, [r3]
 700 003e 9B0A     		lsrs	r3, r3, #10
 701 0040 0493     		str	r3, [sp, #16]
 702              	.L50:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 34


 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 703              		.loc 2 470 0
 704 0042 354A     		ldr	r2, .L61+20
 705 0044 334B     		ldr	r3, .L61+16
 706 0046 1B68     		ldr	r3, [r3]
 707 0048 9B0A     		lsrs	r3, r3, #10
 708 004a 1360     		str	r3, [r2]
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 709              		.loc 2 473 0
 710 004c 05E0     		b	.L46
 711              	.L48:
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 712              		.loc 2 475 0
 713 004e 049B     		ldr	r3, [sp, #16]
 714 0050 013B     		subs	r3, r3, #1
 715 0052 0493     		str	r3, [sp, #16]
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 716              		.loc 2 476 0
 717 0054 049B     		ldr	r3, [sp, #16]
 718 0056 002B     		cmp	r3, #0
 719 0058 04D0     		beq	.L60
 720              	.L46:
 473:Generated_Source\PSoC4/CyLFClk.c ****                 {
 721              		.loc 2 473 0
 722 005a 2F4B     		ldr	r3, .L61+20
 723 005c 1B68     		ldr	r3, [r3]
 724 005e 002B     		cmp	r3, #0
 725 0060 F5DA     		bge	.L48
 726 0062 00E0     		b	.L47
 727              	.L60:
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 728              		.loc 2 478 0
 729 0064 C046     		nop
 730              	.L47:
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 731              		.loc 2 481 0
 732 0066 009B     		ldr	r3, [sp]
 733 0068 1800     		movs	r0, r3
 734 006a FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 735 006e 0200     		movs	r2, r0
 736 0070 2A4B     		ldr	r3, .L61+24
 737 0072 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 738              		.loc 2 482 0
 739 0074 059B     		ldr	r3, [sp, #20]
 740 0076 013B     		subs	r3, r3, #1
 741 0078 0593     		str	r3, [sp, #20]
 483:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 35


 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 742              		.loc 2 485 0
 743 007a 284B     		ldr	r3, .L61+24
 744 007c 1B68     		ldr	r3, [r3]
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 745              		.loc 2 487 0
 746 007e 002B     		cmp	r3, #0
 747 0080 06D0     		beq	.L49
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 748              		.loc 2 486 0
 749 0082 264B     		ldr	r3, .L61+24
 750 0084 1B68     		ldr	r3, [r3]
 485:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 751              		.loc 2 485 0
 752 0086 112B     		cmp	r3, #17
 753 0088 02D0     		beq	.L49
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 754              		.loc 2 486 0
 755 008a 059B     		ldr	r3, [sp, #20]
 756 008c 002B     		cmp	r3, #0
 757 008e D8D1     		bne	.L50
 758              	.L49:
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 759              		.loc 2 489 0
 760 0090 224B     		ldr	r3, .L61+24
 761 0092 1B68     		ldr	r3, [r3]
 762 0094 002B     		cmp	r3, #0
 763 0096 02D1     		bne	.L51
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 764              		.loc 2 491 0
 765 0098 0023     		movs	r3, #0
 766 009a 0393     		str	r3, [sp, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 767              		.loc 2 464 0
 768 009c 2DE0     		b	.L58
 769              	.L51:
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 770              		.loc 2 495 0
 771 009e 059B     		ldr	r3, [sp, #20]
 772 00a0 002B     		cmp	r3, #0
 773 00a2 05D1     		bne	.L53
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 774              		.loc 2 497 0
 775 00a4 1D4B     		ldr	r3, .L61+24
 776 00a6 0022     		movs	r2, #0
 777 00a8 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 778              		.loc 2 498 0
 779 00aa 1023     		movs	r3, #16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 36


 780 00ac 0393     		str	r3, [sp, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 781              		.loc 2 464 0
 782 00ae 24E0     		b	.L58
 783              	.L53:
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 784              		.loc 2 502 0
 785 00b0 1123     		movs	r3, #17
 786 00b2 0393     		str	r3, [sp, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 787              		.loc 2 464 0
 788 00b4 21E0     		b	.L58
 789              	.L45:
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 790              		.loc 2 509 0
 791 00b6 194B     		ldr	r3, .L61+24
 792 00b8 1B68     		ldr	r3, [r3]
 793 00ba 002B     		cmp	r3, #0
 794 00bc 10D0     		beq	.L55
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 795              		.loc 2 512 0
 796 00be 164B     		ldr	r3, .L61+20
 797 00c0 1B68     		ldr	r3, [r3]
 798 00c2 002B     		cmp	r3, #0
 799 00c4 09DA     		bge	.L56
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 800              		.loc 2 514 0
 801 00c6 009B     		ldr	r3, [sp]
 802 00c8 1800     		movs	r0, r3
 803 00ca FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 804 00ce 0300     		movs	r3, r0
 805 00d0 0393     		str	r3, [sp, #12]
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 806              		.loc 2 515 0
 807 00d2 124B     		ldr	r3, .L61+24
 808 00d4 0022     		movs	r2, #0
 809 00d6 1A60     		str	r2, [r3]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 810              		.loc 2 464 0
 811 00d8 0FE0     		b	.L58
 812              	.L56:
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 37


 813              		.loc 2 519 0
 814 00da 0723     		movs	r3, #7
 815 00dc 0393     		str	r3, [sp, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 816              		.loc 2 464 0
 817 00de 0CE0     		b	.L58
 818              	.L55:
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 819              		.loc 2 525 0
 820 00e0 0D4A     		ldr	r2, .L61+20
 821 00e2 0C4B     		ldr	r3, .L61+16
 822 00e4 1B68     		ldr	r3, [r3]
 823 00e6 9B0A     		lsrs	r3, r3, #10
 824 00e8 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 825              		.loc 2 526 0
 826 00ea 0C4B     		ldr	r3, .L61+24
 827 00ec 0122     		movs	r2, #1
 828 00ee 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 829              		.loc 2 527 0
 830 00f0 0723     		movs	r3, #7
 831 00f2 0393     		str	r3, [sp, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 832              		.loc 2 464 0
 833 00f4 01E0     		b	.L58
 834              	.L44:
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 835              		.loc 2 533 0
 836 00f6 1123     		movs	r3, #17
 837 00f8 0393     		str	r3, [sp, #12]
 838              	.L58:
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 839              		.loc 2 536 0
 840 00fa 039B     		ldr	r3, [sp, #12]
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 841              		.loc 2 537 0
 842 00fc 1800     		movs	r0, r3
 843 00fe 07B0     		add	sp, sp, #28
 844              		@ sp needed
 845 0100 00BD     		pop	{pc}
 846              	.L62:
 847 0102 C046     		.align	2
 848              	.L61:
 849 0104 10010B40 		.word	1074462992
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 38


 850 0108 3F3F0000 		.word	16191
 851 010c 08000340 		.word	1073938440
 852 0110 0A0B0000 		.word	2826
 853 0114 00000000 		.word	cydelayFreqHz
 854 0118 18000340 		.word	1073938456
 855 011c 20000000 		.word	trimRunningStatus.4898
 856              		.cfi_endproc
 857              	.LFE8:
 858              		.size	CySysClkIloTrim, .-CySysClkIloTrim
 859              		.global	__aeabi_idiv
 860              		.section	.text.CySysClkIloUpdateTrimReg,"ax",%progbits
 861              		.align	2
 862              		.global	CySysClkIloUpdateTrimReg
 863              		.code	16
 864              		.thumb_func
 865              		.type	CySysClkIloUpdateTrimReg, %function
 866              	CySysClkIloUpdateTrimReg:
 867              	.LFB9:
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 868              		.loc 2 572 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 32
 871              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 39


 872 0000 00B5     		push	{lr}
 873              		.cfi_def_cfa_offset 4
 874              		.cfi_offset 14, -4
 875 0002 89B0     		sub	sp, sp, #36
 876              		.cfi_def_cfa_offset 40
 877 0004 0190     		str	r0, [sp, #4]
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 878              		.loc 2 579 0
 879 0006 374B     		ldr	r3, .L73
 880 0008 1B68     		ldr	r3, [r3]
 881 000a 002B     		cmp	r3, #0
 882 000c 64D0     		beq	.L64
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 883              		.loc 2 581 0
 884 000e 354B     		ldr	r3, .L73
 885 0010 1A68     		ldr	r2, [r3]
 886 0012 354B     		ldr	r3, .L73+4
 887 0014 1B68     		ldr	r3, [r3]
 888 0016 5A43     		muls	r2, r3
 889 0018 334B     		ldr	r3, .L73+4
 890 001a 1B68     		ldr	r3, [r3]
 891 001c 9B0A     		lsrs	r3, r3, #10
 892 001e 1900     		movs	r1, r3
 893 0020 1000     		movs	r0, r2
 894 0022 FFF7FEFF 		bl	__aeabi_uidiv
 895 0026 0300     		movs	r3, r0
 896 0028 0593     		str	r3, [sp, #20]
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 897              		.loc 2 585 0
 898 002a 059B     		ldr	r3, [sp, #20]
 899 002c 2F4A     		ldr	r2, .L73+8
 900 002e 9446     		mov	ip, r2
 901 0030 6344     		add	r3, r3, ip
 902 0032 FA22     		movs	r2, #250
 903 0034 9200     		lsls	r2, r2, #2
 904 0036 5A43     		muls	r2, r3
 905 0038 FA23     		movs	r3, #250
 906 003a D901     		lsls	r1, r3, #7
 907 003c 1000     		movs	r0, r2
 908 003e FFF7FEFF 		bl	__aeabi_idiv
 909 0042 0300     		movs	r3, r0
 910 0044 0493     		str	r3, [sp, #16]
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 911              		.loc 2 589 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 40


 912 0046 049B     		ldr	r3, [sp, #16]
 913 0048 DA17     		asrs	r2, r3, #31
 914 004a 9B18     		adds	r3, r3, r2
 915 004c 5340     		eors	r3, r2
 916 004e 382B     		cmp	r3, #56
 917 0050 3CD9     		bls	.L65
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 918              		.loc 2 591 0
 919 0052 049B     		ldr	r3, [sp, #16]
 920 0054 002B     		cmp	r3, #0
 921 0056 0DDD     		ble	.L66
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 922              		.loc 2 593 0
 923 0058 049A     		ldr	r2, [sp, #16]
 924 005a 1300     		movs	r3, r2
 925 005c 9B00     		lsls	r3, r3, #2
 926 005e 9B18     		adds	r3, r3, r2
 927 0060 5B00     		lsls	r3, r3, #1
 928 0062 7133     		adds	r3, r3, #113
 929 0064 FF33     		adds	r3, r3, #255
 930 0066 2249     		ldr	r1, .L73+12
 931 0068 1800     		movs	r0, r3
 932 006a FFF7FEFF 		bl	__aeabi_idiv
 933 006e 0300     		movs	r3, r0
 934 0070 0793     		str	r3, [sp, #28]
 935 0072 0CE0     		b	.L67
 936              	.L66:
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 937              		.loc 2 598 0
 938 0074 049A     		ldr	r2, [sp, #16]
 939 0076 1300     		movs	r3, r2
 940 0078 9B00     		lsls	r3, r3, #2
 941 007a 9B18     		adds	r3, r3, r2
 942 007c 5B00     		lsls	r3, r3, #1
 943 007e 713B     		subs	r3, r3, #113
 944 0080 FF3B     		subs	r3, r3, #255
 945 0082 1B49     		ldr	r1, .L73+12
 946 0084 1800     		movs	r0, r3
 947 0086 FFF7FEFF 		bl	__aeabi_idiv
 948 008a 0300     		movs	r3, r0
 949 008c 0793     		str	r3, [sp, #28]
 950              	.L67:
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 951              		.loc 2 601 0
 952 008e 194B     		ldr	r3, .L73+16
 953 0090 1B68     		ldr	r3, [r3]
 954 0092 0F22     		movs	r2, #15
 955 0094 1340     		ands	r3, r2
 956 0096 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 41


 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 957              		.loc 2 602 0
 958 0098 039A     		ldr	r2, [sp, #12]
 959 009a 079B     		ldr	r3, [sp, #28]
 960 009c D31A     		subs	r3, r2, r3
 961 009e 0793     		str	r3, [sp, #28]
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 962              		.loc 2 604 0
 963 00a0 079B     		ldr	r3, [sp, #28]
 964 00a2 0F2B     		cmp	r3, #15
 965 00a4 01DD     		ble	.L68
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 966              		.loc 2 606 0
 967 00a6 0F23     		movs	r3, #15
 968 00a8 0793     		str	r3, [sp, #28]
 969              	.L68:
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 970              		.loc 2 608 0
 971 00aa 079B     		ldr	r3, [sp, #28]
 972 00ac 002B     		cmp	r3, #0
 973 00ae 01DA     		bge	.L69
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 974              		.loc 2 610 0
 975 00b0 0023     		movs	r3, #0
 976 00b2 0793     		str	r3, [sp, #28]
 977              	.L69:
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 978              		.loc 2 612 0
 979 00b4 0F4B     		ldr	r3, .L73+16
 980 00b6 0F4A     		ldr	r2, .L73+16
 981 00b8 1268     		ldr	r2, [r2]
 982 00ba 0F21     		movs	r1, #15
 983 00bc 8A43     		bics	r2, r1
 984 00be 1100     		movs	r1, r2
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 985              		.loc 2 613 0
 986 00c0 079A     		ldr	r2, [sp, #28]
 612:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 987              		.loc 2 612 0
 988 00c2 0A43     		orrs	r2, r1
 989 00c4 1A60     		str	r2, [r3]
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 990              		.loc 2 614 0
 991 00c6 0723     		movs	r3, #7
 992 00c8 0693     		str	r3, [sp, #24]
 993 00ca 07E0     		b	.L71
 994              	.L65:
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 42


 995              		.loc 2 619 0
 996 00cc 019B     		ldr	r3, [sp, #4]
 997 00ce 049A     		ldr	r2, [sp, #16]
 998 00d0 1A60     		str	r2, [r3]
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 999              		.loc 2 620 0
 1000 00d2 0023     		movs	r3, #0
 1001 00d4 0693     		str	r3, [sp, #24]
 1002 00d6 01E0     		b	.L71
 1003              	.L64:
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 1004              		.loc 2 625 0
 1005 00d8 1123     		movs	r3, #17
 1006 00da 0693     		str	r3, [sp, #24]
 1007              	.L71:
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 1008              		.loc 2 627 0
 1009 00dc 069B     		ldr	r3, [sp, #24]
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 1010              		.loc 2 628 0
 1011 00de 1800     		movs	r0, r3
 1012 00e0 09B0     		add	sp, sp, #36
 1013              		@ sp needed
 1014 00e2 00BD     		pop	{pc}
 1015              	.L74:
 1016              		.align	2
 1017              	.L73:
 1018 00e4 1C000340 		.word	1073938460
 1019 00e8 00000000 		.word	cydelayFreqHz
 1020 00ec 0083FFFF 		.word	-32000
 1021 00f0 E1020000 		.word	737
 1022 00f4 24FF0B40 		.word	1074528036
 1023              		.cfi_endproc
 1024              	.LFE9:
 1025              		.size	CySysClkIloUpdateTrimReg, .-CySysClkIloUpdateTrimReg
 1026              		.section	.text.CySysClkIloRestoreFactoryTrim,"ax",%progbits
 1027              		.align	2
 1028              		.global	CySysClkIloRestoreFactoryTrim
 1029              		.code	16
 1030              		.thumb_func
 1031              		.type	CySysClkIloRestoreFactoryTrim, %function
 1032              	CySysClkIloRestoreFactoryTrim:
 1033              	.LFB10:
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 43


 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 1034              		.loc 2 649 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 8
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		@ link register save eliminated.
 1039 0000 82B0     		sub	sp, sp, #8
 1040              		.cfi_def_cfa_offset 8
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 1041              		.loc 2 650 0
 1042 0002 0023     		movs	r3, #0
 1043 0004 0193     		str	r3, [sp, #4]
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 1044              		.loc 2 653 0
 1045 0006 0D4B     		ldr	r3, .L79
 1046 0008 1B88     		ldrh	r3, [r3]
 1047 000a 9BB2     		uxth	r3, r3
 1048 000c F02B     		cmp	r3, #240
 1049 000e 0ED0     		beq	.L76
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 1050              		.loc 2 655 0
 1051 0010 0B4B     		ldr	r3, .L79+4
 1052 0012 0B4A     		ldr	r2, .L79+4
 1053 0014 1268     		ldr	r2, [r2]
 1054 0016 0F21     		movs	r1, #15
 1055 0018 8A43     		bics	r2, r1
 1056 001a 1100     		movs	r1, r2
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1057              		.loc 2 656 0
 1058 001c 074A     		ldr	r2, .L79
 1059 001e 1288     		ldrh	r2, [r2]
 1060 0020 92B2     		uxth	r2, r2
 1061 0022 1000     		movs	r0, r2
 1062 0024 0F22     		movs	r2, #15
 1063 0026 0240     		ands	r2, r0
 655:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1064              		.loc 2 655 0
 1065 0028 0A43     		orrs	r2, r1
 1066 002a 1A60     		str	r2, [r3]
 1067 002c 02E0     		b	.L77
 1068              	.L76:
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 44


 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 1069              		.loc 2 660 0
 1070 002e 0123     		movs	r3, #1
 1071 0030 5B42     		rsbs	r3, r3, #0
 1072 0032 0193     		str	r3, [sp, #4]
 1073              	.L77:
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 1074              		.loc 2 663 0
 1075 0034 019B     		ldr	r3, [sp, #4]
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 1076              		.loc 2 664 0
 1077 0036 1800     		movs	r0, r3
 1078 0038 02B0     		add	sp, sp, #8
 1079              		@ sp needed
 1080 003a 7047     		bx	lr
 1081              	.L80:
 1082              		.align	2
 1083              	.L79:
 1084 003c 00000000 		.word	defaultIloTrimRegValue
 1085 0040 24FF0B40 		.word	1074528036
 1086              		.cfi_endproc
 1087              	.LFE10:
 1088              		.size	CySysClkIloRestoreFactoryTrim, .-CySysClkIloRestoreFactoryTrim
 1089              		.section	.text.CySysClkGetLfclkSource,"ax",%progbits
 1090              		.align	2
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CySysClkGetLfclkSource, %function
 1094              	CySysClkGetLfclkSource:
 1095              	.LFB11:
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 1096              		.loc 2 686 0
 1097              		.cfi_startproc
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 45


 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
 1101 0000 82B0     		sub	sp, sp, #8
 1102              		.cfi_def_cfa_offset 8
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 1103              		.loc 2 688 0
 1104 0002 044B     		ldr	r3, .L83
 1105 0004 1B68     		ldr	r3, [r3]
 1106 0006 9B0F     		lsrs	r3, r3, #30
 1107 0008 9B07     		lsls	r3, r3, #30
 1108 000a 0193     		str	r3, [sp, #4]
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 1109              		.loc 2 689 0
 1110 000c 019B     		ldr	r3, [sp, #4]
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 1111              		.loc 2 690 0
 1112 000e 1800     		movs	r0, r3
 1113 0010 02B0     		add	sp, sp, #8
 1114              		@ sp needed
 1115 0012 7047     		bx	lr
 1116              	.L84:
 1117              		.align	2
 1118              	.L83:
 1119 0014 0C020B40 		.word	1074463244
 1120              		.cfi_endproc
 1121              	.LFE11:
 1122              		.size	CySysClkGetLfclkSource, .-CySysClkGetLfclkSource
 1123              		.section	.text.CySysClkSetLfclkSource,"ax",%progbits
 1124              		.align	2
 1125              		.global	CySysClkSetLfclkSource
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CySysClkSetLfclkSource, %function
 1129              	CySysClkSetLfclkSource:
 1130              	.LFB12:
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 46


 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 1131              		.loc 2 735 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 16
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135 0000 10B5     		push	{r4, lr}
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 4, -8
 1138              		.cfi_offset 14, -4
 1139 0002 84B0     		sub	sp, sp, #16
 1140              		.cfi_def_cfa_offset 24
 1141 0004 0190     		str	r0, [sp, #4]
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 1142              		.loc 2 738 0
 1143 0006 FFF7FEFF 		bl	CySysClkGetLfclkSource
 1144 000a 0200     		movs	r2, r0
 1145 000c 019B     		ldr	r3, [sp, #4]
 1146 000e 9A42     		cmp	r2, r3
 1147 0010 19D0     		beq	.L87
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1148              		.loc 2 740 0
 1149 0012 0F24     		movs	r4, #15
 1150 0014 6C44     		add	r4, r4, sp
 1151 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 1152 001a 0300     		movs	r3, r0
 1153 001c 2370     		strb	r3, [r4]
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 1154              		.loc 2 741 0
 1155 001e FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 47


 1156              		.loc 2 742 0
 1157 0022 0A4B     		ldr	r3, .L88
 1158 0024 094A     		ldr	r2, .L88
 1159 0026 1268     		ldr	r2, [r2]
 1160 0028 9200     		lsls	r2, r2, #2
 1161 002a 9108     		lsrs	r1, r2, #2
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 1162              		.loc 2 743 0
 1163 002c 019A     		ldr	r2, [sp, #4]
 1164 002e 920F     		lsrs	r2, r2, #30
 1165 0030 9207     		lsls	r2, r2, #30
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1166              		.loc 2 742 0
 1167 0032 0A43     		orrs	r2, r1
 1168 0034 1A60     		str	r2, [r3]
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 1169              		.loc 2 744 0
 1170 0036 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1171              		.loc 2 745 0
 1172 003a 0F23     		movs	r3, #15
 1173 003c 6B44     		add	r3, r3, sp
 1174 003e 1B78     		ldrb	r3, [r3]
 1175 0040 1800     		movs	r0, r3
 1176 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1177              	.L87:
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 1178              		.loc 2 747 0
 1179 0046 C046     		nop
 1180 0048 04B0     		add	sp, sp, #16
 1181              		@ sp needed
 1182 004a 10BD     		pop	{r4, pc}
 1183              	.L89:
 1184              		.align	2
 1185              	.L88:
 1186 004c 0C020B40 		.word	1074463244
 1187              		.cfi_endproc
 1188              	.LFE12:
 1189              		.size	CySysClkSetLfclkSource, .-CySysClkSetLfclkSource
 1190              		.section	.text.CySysClkWcoStart,"ax",%progbits
 1191              		.align	2
 1192              		.global	CySysClkWcoStart
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	CySysClkWcoStart, %function
 1196              	CySysClkWcoStart:
 1197              	.LFB13:
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 48


 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 1198              		.loc 2 772 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202 0000 10B5     		push	{r4, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 4, -8
 1205              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 1206              		.loc 2 773 0
 1207 0002 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1208              		.loc 2 774 0
 1209 0006 044B     		ldr	r3, .L91
 1210 0008 034A     		ldr	r2, .L91
 1211 000a 1268     		ldr	r2, [r2]
 1212 000c 8021     		movs	r1, #128
 1213 000e 0906     		lsls	r1, r1, #24
 1214 0010 0A43     		orrs	r2, r1
 1215 0012 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 1216              		.loc 2 775 0
 1217 0014 C046     		nop
 1218              		@ sp needed
 1219 0016 10BD     		pop	{r4, pc}
 1220              	.L92:
 1221              		.align	2
 1222              	.L91:
 1223 0018 00F02E40 		.word	1076817920
 1224              		.cfi_endproc
 1225              	.LFE13:
 1226              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 1227              		.section	.text.CySysClkWcoStop,"ax",%progbits
 1228              		.align	2
 1229              		.global	CySysClkWcoStop
 1230              		.code	16
 1231              		.thumb_func
 1232              		.type	CySysClkWcoStop, %function
 1233              	CySysClkWcoStop:
 1234              	.LFB14:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 49


 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 1235              		.loc 2 790 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 8
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239 0000 10B5     		push	{r4, lr}
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 4, -8
 1242              		.cfi_offset 14, -4
 1243 0002 82B0     		sub	sp, sp, #8
 1244              		.cfi_def_cfa_offset 16
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1245              		.loc 2 795 0
 1246 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1247 0008 031E     		subs	r3, r0, #0
 1248 000a 23D0     		beq	.L96
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 1249              		.loc 2 798 0
 1250 000c FFF7FEFF 		bl	CySysClkGetLfclkSource
 1251 0010 0200     		movs	r2, r0
 1252 0012 8023     		movs	r3, #128
 1253 0014 DB05     		lsls	r3, r3, #23
 1254 0016 9A42     		cmp	r2, r3
 1255 0018 16D1     		bne	.L95
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 1256              		.loc 2 800 0
 1257 001a 6B46     		mov	r3, sp
 1258 001c DC1D     		adds	r4, r3, #7
 1259 001e FFF7FEFF 		bl	CyEnterCriticalSection
 1260 0022 0300     		movs	r3, r0
 1261 0024 2370     		strb	r3, [r4]
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 1262              		.loc 2 801 0
 1263 0026 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1264              		.loc 2 802 0
 1265 002a 0C4B     		ldr	r3, .L97
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 50


 1266 002c 0B4A     		ldr	r2, .L97
 1267 002e 1268     		ldr	r2, [r2]
 1268 0030 5200     		lsls	r2, r2, #1
 1269 0032 5208     		lsrs	r2, r2, #1
 1270 0034 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 1271              		.loc 2 803 0
 1272 0036 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 1273              		.loc 2 804 0
 1274 003a 6B46     		mov	r3, sp
 1275 003c 0733     		adds	r3, r3, #7
 1276 003e 1B78     		ldrb	r3, [r3]
 1277 0040 1800     		movs	r0, r3
 1278 0042 FFF7FEFF 		bl	CyExitCriticalSection
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 1279              		.loc 2 812 0
 1280 0046 05E0     		b	.L96
 1281              	.L95:
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 1282              		.loc 2 809 0
 1283 0048 044B     		ldr	r3, .L97
 1284 004a 044A     		ldr	r2, .L97
 1285 004c 1268     		ldr	r2, [r2]
 1286 004e 5200     		lsls	r2, r2, #1
 1287 0050 5208     		lsrs	r2, r2, #1
 1288 0052 1A60     		str	r2, [r3]
 1289              	.L96:
 1290              		.loc 2 812 0
 1291 0054 C046     		nop
 1292 0056 02B0     		add	sp, sp, #8
 1293              		@ sp needed
 1294 0058 10BD     		pop	{r4, pc}
 1295              	.L98:
 1296 005a C046     		.align	2
 1297              	.L97:
 1298 005c 00F02E40 		.word	1076817920
 1299              		.cfi_endproc
 1300              	.LFE14:
 1301              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 1302              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 1303              		.align	2
 1304              		.global	CySysClkWcoEnabled
 1305              		.code	16
 1306              		.thumb_func
 1307              		.type	CySysClkWcoEnabled, %function
 1308              	CySysClkWcoEnabled:
 1309              	.LFB15:
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 51


 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 1310              		.loc 2 825 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 1315              		.loc 2 826 0
 1316 0000 044B     		ldr	r3, .L103
 1317 0002 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 1318              		.loc 2 827 0
 1319 0004 002B     		cmp	r3, #0
 1320 0006 01DA     		bge	.L100
 1321              		.loc 2 827 0 is_stmt 0 discriminator 1
 1322 0008 0123     		movs	r3, #1
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 1323              		.loc 2 826 0 is_stmt 1 discriminator 1
 1324 000a 00E0     		b	.L102
 1325              	.L100:
 1326              		.loc 2 827 0 discriminator 2
 1327 000c 0023     		movs	r3, #0
 1328              	.L102:
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 1329              		.loc 2 829 0 discriminator 1
 1330 000e 1800     		movs	r0, r3
 1331              		@ sp needed
 1332 0010 7047     		bx	lr
 1333              	.L104:
 1334 0012 C046     		.align	2
 1335              	.L103:
 1336 0014 00F02E40 		.word	1076817920
 1337              		.cfi_endproc
 1338              	.LFE15:
 1339              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 1340              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 1341              		.align	2
 1342              		.global	CySysClkWcoSetPowerMode
 1343              		.code	16
 1344              		.thumb_func
 1345              		.type	CySysClkWcoSetPowerMode, %function
 1346              	CySysClkWcoSetPowerMode:
 1347              	.LFB16:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 52


 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 1348              		.loc 2 852 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 16
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352 0000 00B5     		push	{lr}
 1353              		.cfi_def_cfa_offset 4
 1354              		.cfi_offset 14, -4
 1355 0002 85B0     		sub	sp, sp, #20
 1356              		.cfi_def_cfa_offset 24
 1357 0004 0190     		str	r0, [sp, #4]
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 1358              		.loc 2 855 0
 1359 0006 0C4B     		ldr	r3, .L112
 1360 0008 1B68     		ldr	r3, [r3]
 1361 000a 0122     		movs	r2, #1
 1362 000c 1340     		ands	r3, r2
 1363 000e 0393     		str	r3, [sp, #12]
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 1364              		.loc 2 857 0
 1365 0010 019B     		ldr	r3, [sp, #4]
 1366 0012 002B     		cmp	r3, #0
 1367 0014 02D0     		beq	.L107
 1368 0016 012B     		cmp	r3, #1
 1369 0018 03D0     		beq	.L108
 1370 001a 05E0     		b	.L111
 1371              	.L107:
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 1372              		.loc 2 860 0
 1373 001c FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1374              		.loc 2 861 0
 1375 0020 06E0     		b	.L109
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 53


 1376              	.L108:
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 1377              		.loc 2 865 0
 1378 0022 FFF7FEFF 		bl	CySysClkWcoSetLowPowerMode
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 1379              		.loc 2 866 0
 1380 0026 03E0     		b	.L109
 1381              	.L111:
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1382              		.loc 2 870 0
 1383 0028 0020     		movs	r0, #0
 1384 002a FFF7FEFF 		bl	CyHalt
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1385              		.loc 2 871 0
 1386 002e C046     		nop
 1387              	.L109:
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 1388              		.loc 2 874 0
 1389 0030 039B     		ldr	r3, [sp, #12]
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 1390              		.loc 2 875 0
 1391 0032 1800     		movs	r0, r3
 1392 0034 05B0     		add	sp, sp, #20
 1393              		@ sp needed
 1394 0036 00BD     		pop	{pc}
 1395              	.L113:
 1396              		.align	2
 1397              	.L112:
 1398 0038 00F02E40 		.word	1076817920
 1399              		.cfi_endproc
 1400              	.LFE16:
 1401              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 1402              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 1403              		.align	2
 1404              		.global	CySysClkWcoClockOutSelect
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	CySysClkWcoClockOutSelect, %function
 1408              	CySysClkWcoClockOutSelect:
 1409              	.LFB17:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 54


 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 1410              		.loc 2 919 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 8
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414 0000 00B5     		push	{lr}
 1415              		.cfi_def_cfa_offset 4
 1416              		.cfi_offset 14, -4
 1417 0002 83B0     		sub	sp, sp, #12
 1418              		.cfi_def_cfa_offset 16
 1419 0004 0190     		str	r0, [sp, #4]
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1420              		.loc 2 920 0
 1421 0006 FFF7FEFF 		bl	CySysClkWcoEnabled
 1422 000a 031E     		subs	r3, r0, #0
 1423 000c 10D0     		beq	.L117
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 1424              		.loc 2 922 0
 1425 000e 019B     		ldr	r3, [sp, #4]
 1426 0010 012B     		cmp	r3, #1
 1427 0012 0AD8     		bhi	.L116
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 55


 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 1428              		.loc 2 924 0
 1429 0014 084B     		ldr	r3, .L118
 1430 0016 084A     		ldr	r2, .L118
 1431 0018 1268     		ldr	r2, [r2]
 1432 001a 0421     		movs	r1, #4
 1433 001c 8A43     		bics	r2, r1
 1434 001e 1100     		movs	r1, r2
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1435              		.loc 2 925 0
 1436 0020 019A     		ldr	r2, [sp, #4]
 1437 0022 9200     		lsls	r2, r2, #2
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1438              		.loc 2 924 0
 1439 0024 0A43     		orrs	r2, r1
 1440 0026 1A60     		str	r2, [r3]
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 1441              		.loc 2 932 0
 1442 0028 02E0     		b	.L117
 1443              	.L116:
 929:Generated_Source\PSoC4/CyLFClk.c ****             }
 1444              		.loc 2 929 0 discriminator 1
 1445 002a 0020     		movs	r0, #0
 1446 002c FFF7FEFF 		bl	CyHalt
 1447              	.L117:
 1448              		.loc 2 932 0
 1449 0030 C046     		nop
 1450 0032 03B0     		add	sp, sp, #12
 1451              		@ sp needed
 1452 0034 00BD     		pop	{pc}
 1453              	.L119:
 1454 0036 C046     		.align	2
 1455              	.L118:
 1456 0038 00F02E40 		.word	1076817920
 1457              		.cfi_endproc
 1458              	.LFE17:
 1459              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 1460              		.section	.text.CySysWdtLock,"ax",%progbits
 1461              		.align	2
 1462              		.global	CySysWdtLock
 1463              		.code	16
 1464              		.thumb_func
 1465              		.type	CySysWdtLock, %function
 1466              	CySysWdtLock:
 1467              	.LFB18:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 56


 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 1468              		.loc 2 949 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 8
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472 0000 10B5     		push	{r4, lr}
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 4, -8
 1475              		.cfi_offset 14, -4
 1476 0002 82B0     		sub	sp, sp, #8
 1477              		.cfi_def_cfa_offset 16
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1478              		.loc 2 951 0
 1479 0004 6B46     		mov	r3, sp
 1480 0006 DC1D     		adds	r4, r3, #7
 1481 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1482 000c 0300     		movs	r3, r0
 1483 000e 2370     		strb	r3, [r4]
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 1484              		.loc 2 953 0
 1485 0010 074B     		ldr	r3, .L121
 1486 0012 074A     		ldr	r2, .L121
 1487 0014 1268     		ldr	r2, [r2]
 1488 0016 C021     		movs	r1, #192
 1489 0018 0902     		lsls	r1, r1, #8
 1490 001a 0A43     		orrs	r2, r1
 1491 001c 1A60     		str	r2, [r3]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1492              		.loc 2 956 0
 1493 001e 6B46     		mov	r3, sp
 1494 0020 0733     		adds	r3, r3, #7
 1495 0022 1B78     		ldrb	r3, [r3]
 1496 0024 1800     		movs	r0, r3
 1497 0026 FFF7FEFF 		bl	CyExitCriticalSection
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 1498              		.loc 2 957 0
 1499 002a C046     		nop
 1500 002c 02B0     		add	sp, sp, #8
 1501              		@ sp needed
 1502 002e 10BD     		pop	{r4, pc}
 1503              	.L122:
 1504              		.align	2
 1505              	.L121:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 57


 1506 0030 00010B40 		.word	1074462976
 1507              		.cfi_endproc
 1508              	.LFE18:
 1509              		.size	CySysWdtLock, .-CySysWdtLock
 1510              		.section	.text.CySysWdtLocked,"ax",%progbits
 1511              		.align	2
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	CySysWdtLocked, %function
 1515              	CySysWdtLocked:
 1516              	.LFB19:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 1517              		.loc 2 970 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 1522              		.loc 2 972 0
 1523 0000 054B     		ldr	r3, .L127
 1524 0002 1A68     		ldr	r2, [r3]
 1525 0004 C023     		movs	r3, #192
 1526 0006 1B02     		lsls	r3, r3, #8
 1527 0008 1340     		ands	r3, r2
 1528 000a 01D0     		beq	.L124
 1529              		.loc 2 972 0 is_stmt 0 discriminator 1
 1530 000c 0123     		movs	r3, #1
 1531 000e 00E0     		b	.L126
 1532              	.L124:
 1533              		.loc 2 972 0 discriminator 2
 1534 0010 0023     		movs	r3, #0
 1535              	.L126:
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 1536              		.loc 2 973 0 is_stmt 1 discriminator 5
 1537 0012 1800     		movs	r0, r3
 1538              		@ sp needed
 1539 0014 7047     		bx	lr
 1540              	.L128:
 1541 0016 C046     		.align	2
 1542              	.L127:
 1543 0018 00010B40 		.word	1074462976
 1544              		.cfi_endproc
 1545              	.LFE19:
 1546              		.size	CySysWdtLocked, .-CySysWdtLocked
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 58


 1547              		.section	.text.CySysWdtUnlock,"ax",%progbits
 1548              		.align	2
 1549              		.global	CySysWdtUnlock
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	CySysWdtUnlock, %function
 1553              	CySysWdtUnlock:
 1554              	.LFB20:
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 1555              		.loc 2 984 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559 0000 10B5     		push	{r4, lr}
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 4, -8
 1562              		.cfi_offset 14, -4
 1563 0002 82B0     		sub	sp, sp, #8
 1564              		.cfi_def_cfa_offset 16
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1565              		.loc 2 986 0
 1566 0004 6B46     		mov	r3, sp
 1567 0006 DC1D     		adds	r4, r3, #7
 1568 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1569 000c 0300     		movs	r3, r0
 1570 000e 2370     		strb	r3, [r4]
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1571              		.loc 2 989 0
 1572 0010 0D4B     		ldr	r3, .L130
 1573 0012 0D4A     		ldr	r2, .L130
 1574 0014 1268     		ldr	r2, [r2]
 1575 0016 0D49     		ldr	r1, .L130+4
 1576 0018 0A40     		ands	r2, r1
 1577 001a 8021     		movs	r1, #128
 1578 001c C901     		lsls	r1, r1, #7
 1579 001e 0A43     		orrs	r2, r1
 1580 0020 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1581              		.loc 2 992 0
 1582 0022 094B     		ldr	r3, .L130
 1583 0024 084A     		ldr	r2, .L130
 1584 0026 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 59


 1585 0028 0849     		ldr	r1, .L130+4
 1586 002a 0A40     		ands	r2, r1
 1587 002c 8021     		movs	r1, #128
 1588 002e 0902     		lsls	r1, r1, #8
 1589 0030 0A43     		orrs	r2, r1
 1590 0032 1A60     		str	r2, [r3]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1591              		.loc 2 995 0
 1592 0034 6B46     		mov	r3, sp
 1593 0036 0733     		adds	r3, r3, #7
 1594 0038 1B78     		ldrb	r3, [r3]
 1595 003a 1800     		movs	r0, r3
 1596 003c FFF7FEFF 		bl	CyExitCriticalSection
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 1597              		.loc 2 996 0
 1598 0040 C046     		nop
 1599 0042 02B0     		add	sp, sp, #8
 1600              		@ sp needed
 1601 0044 10BD     		pop	{r4, pc}
 1602              	.L131:
 1603 0046 C046     		.align	2
 1604              	.L130:
 1605 0048 00010B40 		.word	1074462976
 1606 004c FF3FFFFF 		.word	-49153
 1607              		.cfi_endproc
 1608              	.LFE20:
 1609              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 1610              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 1611              		.align	2
 1612              		.global	CySysWdtGetEnabledStatus
 1613              		.code	16
 1614              		.thumb_func
 1615              		.type	CySysWdtGetEnabledStatus, %function
 1616              	CySysWdtGetEnabledStatus:
 1617              	.LFB21:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 60


1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 1618              		.loc 2 1018 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 8
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 1622 0000 00B5     		push	{lr}
 1623              		.cfi_def_cfa_offset 4
 1624              		.cfi_offset 14, -4
 1625 0002 83B0     		sub	sp, sp, #12
 1626              		.cfi_def_cfa_offset 16
 1627 0004 0190     		str	r0, [sp, #4]
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1628              		.loc 2 1019 0
 1629 0006 019B     		ldr	r3, [sp, #4]
 1630 0008 022B     		cmp	r3, #2
 1631 000a 02D9     		bls	.L133
 1632              		.loc 2 1019 0 is_stmt 0 discriminator 1
 1633 000c 0020     		movs	r0, #0
 1634 000e FFF7FEFF 		bl	CyHalt
 1635              	.L133:
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 1636              		.loc 2 1020 0 is_stmt 1
 1637 0012 064B     		ldr	r3, .L135
 1638 0014 1A68     		ldr	r2, [r3]
 1639 0016 019B     		ldr	r3, [sp, #4]
 1640 0018 DB00     		lsls	r3, r3, #3
 1641 001a 0133     		adds	r3, r3, #1
 1642 001c DA40     		lsrs	r2, r2, r3
 1643 001e 1300     		movs	r3, r2
 1644 0020 0122     		movs	r2, #1
 1645 0022 1340     		ands	r3, r2
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 1646              		.loc 2 1021 0
 1647 0024 1800     		movs	r0, r3
 1648 0026 03B0     		add	sp, sp, #12
 1649              		@ sp needed
 1650 0028 00BD     		pop	{pc}
 1651              	.L136:
 1652 002a C046     		.align	2
 1653              	.L135:
 1654 002c 10020B40 		.word	1074463248
 1655              		.cfi_endproc
 1656              	.LFE21:
 1657              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 1658              		.section	.text.CySysWdtSetMode,"ax",%progbits
 1659              		.align	2
 1660              		.global	CySysWdtSetMode
 1661              		.code	16
 1662              		.thumb_func
 1663              		.type	CySysWdtSetMode, %function
 1664              	CySysWdtSetMode:
 1665              	.LFB22:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 61


1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 1666              		.loc 2 1048 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 16
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670 0000 00B5     		push	{lr}
 1671              		.cfi_def_cfa_offset 4
 1672              		.cfi_offset 14, -4
 1673 0002 85B0     		sub	sp, sp, #20
 1674              		.cfi_def_cfa_offset 24
 1675 0004 0190     		str	r0, [sp, #4]
 1676 0006 0091     		str	r1, [sp]
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1677              		.loc 2 1051 0
 1678 0008 019B     		ldr	r3, [sp, #4]
 1679 000a 022B     		cmp	r3, #2
 1680 000c 02D9     		bls	.L138
 1681              		.loc 2 1051 0 is_stmt 0 discriminator 1
 1682 000e 0020     		movs	r0, #0
 1683 0010 FFF7FEFF 		bl	CyHalt
 1684              	.L138:
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1685              		.loc 2 1053 0 is_stmt 1
 1686 0014 019B     		ldr	r3, [sp, #4]
 1687 0016 1800     		movs	r0, r3
 1688 0018 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1689 001c 031E     		subs	r3, r0, #0
 1690 001e 16D1     		bne	.L140
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1691              		.loc 2 1055 0
 1692 0020 0C4B     		ldr	r3, .L141
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 62


 1693 0022 1B68     		ldr	r3, [r3]
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1694              		.loc 2 1056 0
 1695 0024 019A     		ldr	r2, [sp, #4]
 1696 0026 D200     		lsls	r2, r2, #3
 1697 0028 0321     		movs	r1, #3
 1698 002a 9140     		lsls	r1, r1, r2
 1699 002c 0A00     		movs	r2, r1
 1700 002e D243     		mvns	r2, r2
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1701              		.loc 2 1055 0
 1702 0030 1340     		ands	r3, r2
 1703 0032 0393     		str	r3, [sp, #12]
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 1704              		.loc 2 1057 0
 1705 0034 009B     		ldr	r3, [sp]
 1706 0036 0322     		movs	r2, #3
 1707 0038 1A40     		ands	r2, r3
 1708 003a 019B     		ldr	r3, [sp, #4]
 1709 003c DB00     		lsls	r3, r3, #3
 1710 003e 9A40     		lsls	r2, r2, r3
 1711 0040 1300     		movs	r3, r2
 1712 0042 039A     		ldr	r2, [sp, #12]
 1713 0044 1343     		orrs	r3, r2
 1714 0046 0393     		str	r3, [sp, #12]
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1715              		.loc 2 1058 0
 1716 0048 024B     		ldr	r3, .L141
 1717 004a 039A     		ldr	r2, [sp, #12]
 1718 004c 1A60     		str	r2, [r3]
 1719              	.L140:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
 1720              		.loc 2 1060 0
 1721 004e C046     		nop
 1722 0050 05B0     		add	sp, sp, #20
 1723              		@ sp needed
 1724 0052 00BD     		pop	{pc}
 1725              	.L142:
 1726              		.align	2
 1727              	.L141:
 1728 0054 0C020B40 		.word	1074463244
 1729              		.cfi_endproc
 1730              	.LFE22:
 1731              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 1732              		.section	.text.CySysWdtGetMode,"ax",%progbits
 1733              		.align	2
 1734              		.global	CySysWdtGetMode
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	CySysWdtGetMode, %function
 1738              	CySysWdtGetMode:
 1739              	.LFB23:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 63


1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
 1740              		.loc 2 1076 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 8
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              		@ link register save eliminated.
 1745 0000 82B0     		sub	sp, sp, #8
 1746              		.cfi_def_cfa_offset 8
 1747 0002 0190     		str	r0, [sp, #4]
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1748              		.loc 2 1077 0
 1749 0004 054B     		ldr	r3, .L145
 1750 0006 1A68     		ldr	r2, [r3]
 1751 0008 019B     		ldr	r3, [sp, #4]
 1752 000a DB00     		lsls	r3, r3, #3
 1753 000c DA40     		lsrs	r2, r2, r3
 1754 000e 1300     		movs	r3, r2
 1755 0010 0322     		movs	r2, #3
 1756 0012 1340     		ands	r3, r2
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
 1757              		.loc 2 1078 0
 1758 0014 1800     		movs	r0, r3
 1759 0016 02B0     		add	sp, sp, #8
 1760              		@ sp needed
 1761 0018 7047     		bx	lr
 1762              	.L146:
 1763 001a C046     		.align	2
 1764              	.L145:
 1765 001c 0C020B40 		.word	1074463244
 1766              		.cfi_endproc
 1767              	.LFE23:
 1768              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 1769              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 1770              		.align	2
 1771              		.global	CySysWdtSetClearOnMatch
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	CySysWdtSetClearOnMatch, %function
 1775              	CySysWdtSetClearOnMatch:
 1776              	.LFB24:
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 64


1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
 1777              		.loc 2 1105 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 16
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 1781 0000 00B5     		push	{lr}
 1782              		.cfi_def_cfa_offset 4
 1783              		.cfi_offset 14, -4
 1784 0002 85B0     		sub	sp, sp, #20
 1785              		.cfi_def_cfa_offset 24
 1786 0004 0190     		str	r0, [sp, #4]
 1787 0006 0091     		str	r1, [sp]
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1788              		.loc 2 1108 0
 1789 0008 019B     		ldr	r3, [sp, #4]
 1790 000a 002B     		cmp	r3, #0
 1791 000c 02D0     		beq	.L148
 1792              		.loc 2 1108 0 is_stmt 0 discriminator 2
 1793 000e 019B     		ldr	r3, [sp, #4]
 1794 0010 012B     		cmp	r3, #1
 1795 0012 01D1     		bne	.L149
 1796              	.L148:
 1797              		.loc 2 1108 0 discriminator 3
 1798 0014 0123     		movs	r3, #1
 1799 0016 00E0     		b	.L150
 1800              	.L149:
 1801              		.loc 2 1108 0 discriminator 4
 1802 0018 0023     		movs	r3, #0
 1803              	.L150:
 1804              		.loc 2 1108 0 discriminator 6
 1805 001a 002B     		cmp	r3, #0
 1806 001c 02D1     		bne	.L151
 1807              		.loc 2 1108 0 discriminator 7
 1808 001e 0020     		movs	r0, #0
 1809 0020 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 65


 1810              	.L151:
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1811              		.loc 2 1111 0 is_stmt 1
 1812 0024 019B     		ldr	r3, [sp, #4]
 1813 0026 1800     		movs	r0, r3
 1814 0028 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1815 002c 031E     		subs	r3, r0, #0
 1816 002e 16D1     		bne	.L153
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1817              		.loc 2 1113 0
 1818 0030 0C4B     		ldr	r3, .L154
 1819 0032 1B68     		ldr	r3, [r3]
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1820              		.loc 2 1114 0
 1821 0034 019A     		ldr	r2, [sp, #4]
 1822 0036 D200     		lsls	r2, r2, #3
 1823 0038 0232     		adds	r2, r2, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1824              		.loc 2 1113 0
 1825 003a 0121     		movs	r1, #1
 1826 003c 9140     		lsls	r1, r1, r2
 1827 003e 0A00     		movs	r2, r1
 1828 0040 D243     		mvns	r2, r2
 1829 0042 1340     		ands	r3, r2
 1830 0044 0393     		str	r3, [sp, #12]
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 1831              		.loc 2 1117 0
 1832 0046 019B     		ldr	r3, [sp, #4]
 1833 0048 DB00     		lsls	r3, r3, #3
 1834 004a 0233     		adds	r3, r3, #2
 1835 004c 009A     		ldr	r2, [sp]
 1836 004e 9A40     		lsls	r2, r2, r3
 1837 0050 1300     		movs	r3, r2
 1838 0052 039A     		ldr	r2, [sp, #12]
 1839 0054 1343     		orrs	r3, r2
 1840 0056 0393     		str	r3, [sp, #12]
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1841              		.loc 2 1119 0
 1842 0058 024B     		ldr	r3, .L154
 1843 005a 039A     		ldr	r2, [sp, #12]
 1844 005c 1A60     		str	r2, [r3]
 1845              	.L153:
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
 1846              		.loc 2 1121 0
 1847 005e C046     		nop
 1848 0060 05B0     		add	sp, sp, #20
 1849              		@ sp needed
 1850 0062 00BD     		pop	{pc}
 1851              	.L155:
 1852              		.align	2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 66


 1853              	.L154:
 1854 0064 0C020B40 		.word	1074463244
 1855              		.cfi_endproc
 1856              	.LFE24:
 1857              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 1858              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 1859              		.align	2
 1860              		.global	CySysWdtGetClearOnMatch
 1861              		.code	16
 1862              		.thumb_func
 1863              		.type	CySysWdtGetClearOnMatch, %function
 1864              	CySysWdtGetClearOnMatch:
 1865              	.LFB25:
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
 1866              		.loc 2 1138 0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 8
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
 1870 0000 00B5     		push	{lr}
 1871              		.cfi_def_cfa_offset 4
 1872              		.cfi_offset 14, -4
 1873 0002 83B0     		sub	sp, sp, #12
 1874              		.cfi_def_cfa_offset 16
 1875 0004 0190     		str	r0, [sp, #4]
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1876              		.loc 2 1139 0
 1877 0006 019B     		ldr	r3, [sp, #4]
 1878 0008 002B     		cmp	r3, #0
 1879 000a 02D0     		beq	.L157
 1880              		.loc 2 1139 0 is_stmt 0 discriminator 2
 1881 000c 019B     		ldr	r3, [sp, #4]
 1882 000e 012B     		cmp	r3, #1
 1883 0010 01D1     		bne	.L158
 1884              	.L157:
 1885              		.loc 2 1139 0 discriminator 3
 1886 0012 0123     		movs	r3, #1
 1887 0014 00E0     		b	.L159
 1888              	.L158:
 1889              		.loc 2 1139 0 discriminator 4
 1890 0016 0023     		movs	r3, #0
 1891              	.L159:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 67


 1892              		.loc 2 1139 0 discriminator 6
 1893 0018 002B     		cmp	r3, #0
 1894 001a 02D1     		bne	.L160
 1895              		.loc 2 1139 0 discriminator 7
 1896 001c 0020     		movs	r0, #0
 1897 001e FFF7FEFF 		bl	CyHalt
 1898              	.L160:
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 1899              		.loc 2 1142 0 is_stmt 1
 1900 0022 064B     		ldr	r3, .L162
 1901 0024 1A68     		ldr	r2, [r3]
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1902              		.loc 2 1143 0
 1903 0026 019B     		ldr	r3, [sp, #4]
 1904 0028 DB00     		lsls	r3, r3, #3
 1905 002a 0233     		adds	r3, r3, #2
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1906              		.loc 2 1142 0
 1907 002c DA40     		lsrs	r2, r2, r3
 1908 002e 1300     		movs	r3, r2
 1909 0030 0122     		movs	r2, #1
 1910 0032 1340     		ands	r3, r2
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
 1911              		.loc 2 1144 0
 1912 0034 1800     		movs	r0, r3
 1913 0036 03B0     		add	sp, sp, #12
 1914              		@ sp needed
 1915 0038 00BD     		pop	{pc}
 1916              	.L163:
 1917 003a C046     		.align	2
 1918              	.L162:
 1919 003c 0C020B40 		.word	1074463244
 1920              		.cfi_endproc
 1921              	.LFE25:
 1922              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 1923              		.section	.text.CySysWdtEnable,"ax",%progbits
 1924              		.align	2
 1925              		.global	CySysWdtEnable
 1926              		.code	16
 1927              		.thumb_func
 1928              		.type	CySysWdtEnable, %function
 1929              	CySysWdtEnable:
 1930              	.LFB26:
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 68


1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
 1931              		.loc 2 1179 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 8
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935 0000 00B5     		push	{lr}
 1936              		.cfi_def_cfa_offset 4
 1937              		.cfi_offset 14, -4
 1938 0002 83B0     		sub	sp, sp, #12
 1939              		.cfi_def_cfa_offset 16
 1940 0004 0190     		str	r0, [sp, #4]
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 1941              		.loc 2 1184 0
 1942 0006 144B     		ldr	r3, .L172
 1943 0008 134A     		ldr	r2, .L172
 1944 000a 1168     		ldr	r1, [r2]
 1945 000c 019A     		ldr	r2, [sp, #4]
 1946 000e 0A43     		orrs	r2, r1
 1947 0010 1A60     		str	r2, [r3]
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 1948              		.loc 2 1186 0
 1949 0012 019B     		ldr	r3, [sp, #4]
 1950 0014 0122     		movs	r2, #1
 1951 0016 1340     		ands	r3, r2
 1952 0018 05D0     		beq	.L165
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 1953              		.loc 2 1188 0
 1954 001a C046     		nop
 1955              	.L166:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 69


 1956              		.loc 2 1188 0 is_stmt 0 discriminator 1
 1957 001c 0020     		movs	r0, #0
 1958 001e FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1959 0022 031E     		subs	r3, r0, #0
 1960 0024 FAD0     		beq	.L166
 1961              	.L165:
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 1962              		.loc 2 1194 0 is_stmt 1
 1963 0026 019A     		ldr	r2, [sp, #4]
 1964 0028 8023     		movs	r3, #128
 1965 002a 5B00     		lsls	r3, r3, #1
 1966 002c 1340     		ands	r3, r2
 1967 002e 05D0     		beq	.L167
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 1968              		.loc 2 1196 0
 1969 0030 C046     		nop
 1970              	.L168:
 1971              		.loc 2 1196 0 is_stmt 0 discriminator 1
 1972 0032 0120     		movs	r0, #1
 1973 0034 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1974 0038 031E     		subs	r3, r0, #0
 1975 003a FAD0     		beq	.L168
 1976              	.L167:
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 1977              		.loc 2 1202 0 is_stmt 1
 1978 003c 019A     		ldr	r2, [sp, #4]
 1979 003e 8023     		movs	r3, #128
 1980 0040 5B02     		lsls	r3, r3, #9
 1981 0042 1340     		ands	r3, r2
 1982 0044 05D0     		beq	.L171
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 1983              		.loc 2 1204 0
 1984 0046 C046     		nop
 1985              	.L170:
 1986              		.loc 2 1204 0 is_stmt 0 discriminator 1
 1987 0048 0220     		movs	r0, #2
 1988 004a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1989 004e 031E     		subs	r3, r0, #0
 1990 0050 FAD0     		beq	.L170
 1991              	.L171:
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 70


 1992              		.loc 2 1209 0 is_stmt 1
 1993 0052 C046     		nop
 1994 0054 03B0     		add	sp, sp, #12
 1995              		@ sp needed
 1996 0056 00BD     		pop	{pc}
 1997              	.L173:
 1998              		.align	2
 1999              	.L172:
 2000 0058 10020B40 		.word	1074463248
 2001              		.cfi_endproc
 2002              	.LFE26:
 2003              		.size	CySysWdtEnable, .-CySysWdtEnable
 2004              		.section	.text.CySysWdtDisable,"ax",%progbits
 2005              		.align	2
 2006              		.global	CySysWdtDisable
 2007              		.code	16
 2008              		.thumb_func
 2009              		.type	CySysWdtDisable, %function
 2010              	CySysWdtDisable:
 2011              	.LFB27:
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
 2012              		.loc 2 1227 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 8
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016 0000 00B5     		push	{lr}
 2017              		.cfi_def_cfa_offset 4
 2018              		.cfi_offset 14, -4
 2019 0002 83B0     		sub	sp, sp, #12
 2020              		.cfi_def_cfa_offset 16
 2021 0004 0190     		str	r0, [sp, #4]
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 2022              		.loc 2 1228 0
 2023 0006 FFF7FEFF 		bl	CySysWdtLocked
 2024 000a 031E     		subs	r3, r0, #0
 2025 000c 26D1     		bne	.L181
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 2026              		.loc 2 1230 0
 2027 000e 154B     		ldr	r3, .L182
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 71


 2028 0010 144A     		ldr	r2, .L182
 2029 0012 1268     		ldr	r2, [r2]
 2030 0014 0199     		ldr	r1, [sp, #4]
 2031 0016 C943     		mvns	r1, r1
 2032 0018 0A40     		ands	r2, r1
 2033 001a 1A60     		str	r2, [r3]
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 2034              		.loc 2 1232 0
 2035 001c 019B     		ldr	r3, [sp, #4]
 2036 001e 0122     		movs	r2, #1
 2037 0020 1340     		ands	r3, r2
 2038 0022 05D0     		beq	.L176
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 2039              		.loc 2 1234 0
 2040 0024 C046     		nop
 2041              	.L177:
 2042              		.loc 2 1234 0 is_stmt 0 discriminator 1
 2043 0026 0020     		movs	r0, #0
 2044 0028 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2045 002c 031E     		subs	r3, r0, #0
 2046 002e FAD1     		bne	.L177
 2047              	.L176:
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2048              		.loc 2 1240 0 is_stmt 1
 2049 0030 019A     		ldr	r2, [sp, #4]
 2050 0032 8023     		movs	r3, #128
 2051 0034 5B00     		lsls	r3, r3, #1
 2052 0036 1340     		ands	r3, r2
 2053 0038 05D0     		beq	.L178
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2054              		.loc 2 1242 0
 2055 003a C046     		nop
 2056              	.L179:
 2057              		.loc 2 1242 0 is_stmt 0 discriminator 1
 2058 003c 0120     		movs	r0, #1
 2059 003e FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2060 0042 031E     		subs	r3, r0, #0
 2061 0044 FAD1     		bne	.L179
 2062              	.L178:
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2063              		.loc 2 1248 0 is_stmt 1
 2064 0046 019A     		ldr	r2, [sp, #4]
 2065 0048 8023     		movs	r3, #128
 2066 004a 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 72


 2067 004c 1340     		ands	r3, r2
 2068 004e 05D0     		beq	.L181
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2069              		.loc 2 1250 0
 2070 0050 C046     		nop
 2071              	.L180:
 2072              		.loc 2 1250 0 is_stmt 0 discriminator 1
 2073 0052 0220     		movs	r0, #2
 2074 0054 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2075 0058 031E     		subs	r3, r0, #0
 2076 005a FAD1     		bne	.L180
 2077              	.L181:
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
 2078              		.loc 2 1256 0 is_stmt 1
 2079 005c C046     		nop
 2080 005e 03B0     		add	sp, sp, #12
 2081              		@ sp needed
 2082 0060 00BD     		pop	{pc}
 2083              	.L183:
 2084 0062 C046     		.align	2
 2085              	.L182:
 2086 0064 10020B40 		.word	1074463248
 2087              		.cfi_endproc
 2088              	.LFE27:
 2089              		.size	CySysWdtDisable, .-CySysWdtDisable
 2090              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 2091              		.align	2
 2092              		.global	CySysWdtSetCascade
 2093              		.code	16
 2094              		.thumb_func
 2095              		.type	CySysWdtSetCascade, %function
 2096              	CySysWdtSetCascade:
 2097              	.LFB28:
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 73


1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
 2098              		.loc 2 1286 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 16
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102 0000 10B5     		push	{r4, lr}
 2103              		.cfi_def_cfa_offset 8
 2104              		.cfi_offset 4, -8
 2105              		.cfi_offset 14, -4
 2106 0002 84B0     		sub	sp, sp, #16
 2107              		.cfi_def_cfa_offset 24
 2108 0004 0190     		str	r0, [sp, #4]
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
 2109              		.loc 2 1290 0
 2110 0006 0020     		movs	r0, #0
 2111 0008 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2112 000c 0400     		movs	r4, r0
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2113              		.loc 2 1291 0
 2114 000e 0120     		movs	r0, #1
 2115 0010 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2116 0014 0300     		movs	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2117              		.loc 2 1290 0
 2118 0016 1C43     		orrs	r4, r3
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
 2119              		.loc 2 1292 0
 2120 0018 0220     		movs	r0, #2
 2121 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2122 001e 0300     		movs	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2123              		.loc 2 1290 0
 2124 0020 2343     		orrs	r3, r4
 2125 0022 0393     		str	r3, [sp, #12]
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 2126              		.loc 2 1294 0
 2127 0024 039B     		ldr	r3, [sp, #12]
 2128 0026 002B     		cmp	r3, #0
 2129 0028 0DD1     		bne	.L186
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2130              		.loc 2 1296 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 74


 2131 002a 084B     		ldr	r3, .L187
 2132 002c 1B68     		ldr	r3, [r3]
 2133 002e 0293     		str	r3, [sp, #8]
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 2134              		.loc 2 1297 0
 2135 0030 029B     		ldr	r3, [sp, #8]
 2136 0032 074A     		ldr	r2, .L187+4
 2137 0034 1340     		ands	r3, r2
 2138 0036 0293     		str	r3, [sp, #8]
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 2139              		.loc 2 1298 0
 2140 0038 029A     		ldr	r2, [sp, #8]
 2141 003a 019B     		ldr	r3, [sp, #4]
 2142 003c 1343     		orrs	r3, r2
 2143 003e 0293     		str	r3, [sp, #8]
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2144              		.loc 2 1299 0
 2145 0040 024B     		ldr	r3, .L187
 2146 0042 029A     		ldr	r2, [sp, #8]
 2147 0044 1A60     		str	r2, [r3]
 2148              	.L186:
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
 2149              		.loc 2 1301 0
 2150 0046 C046     		nop
 2151 0048 04B0     		add	sp, sp, #16
 2152              		@ sp needed
 2153 004a 10BD     		pop	{r4, pc}
 2154              	.L188:
 2155              		.align	2
 2156              	.L187:
 2157 004c 0C020B40 		.word	1074463244
 2158 0050 F7F7FFFF 		.word	-2057
 2159              		.cfi_endproc
 2160              	.LFE28:
 2161              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 2162              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 2163              		.align	2
 2164              		.global	CySysWdtGetCascade
 2165              		.code	16
 2166              		.thumb_func
 2167              		.type	CySysWdtGetCascade, %function
 2168              	CySysWdtGetCascade:
 2169              	.LFB29:
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 75


1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
 2170              		.loc 2 1317 0
 2171              		.cfi_startproc
 2172              		@ args = 0, pretend = 0, frame = 0
 2173              		@ frame_needed = 0, uses_anonymous_args = 0
 2174              		@ link register save eliminated.
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 2175              		.loc 2 1318 0
 2176 0000 024B     		ldr	r3, .L191
 2177 0002 1B68     		ldr	r3, [r3]
 2178 0004 024A     		ldr	r2, .L191+4
 2179 0006 1340     		ands	r3, r2
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
 2180              		.loc 2 1319 0
 2181 0008 1800     		movs	r0, r3
 2182              		@ sp needed
 2183 000a 7047     		bx	lr
 2184              	.L192:
 2185              		.align	2
 2186              	.L191:
 2187 000c 0C020B40 		.word	1074463244
 2188 0010 08080000 		.word	2056
 2189              		.cfi_endproc
 2190              	.LFE29:
 2191              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 2192              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 2193              		.align	2
 2194              		.global	CySysWdtSetMatch
 2195              		.code	16
 2196              		.thumb_func
 2197              		.type	CySysWdtSetMatch, %function
 2198              	CySysWdtSetMatch:
 2199              	.LFB30:
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
 2200              		.loc 2 1337 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 76


 2204 0000 00B5     		push	{lr}
 2205              		.cfi_def_cfa_offset 4
 2206              		.cfi_offset 14, -4
 2207 0002 85B0     		sub	sp, sp, #20
 2208              		.cfi_def_cfa_offset 24
 2209 0004 0190     		str	r0, [sp, #4]
 2210 0006 0091     		str	r1, [sp]
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2211              		.loc 2 1340 0
 2212 0008 019B     		ldr	r3, [sp, #4]
 2213 000a 002B     		cmp	r3, #0
 2214 000c 02D0     		beq	.L194
 2215              		.loc 2 1340 0 is_stmt 0 discriminator 2
 2216 000e 019B     		ldr	r3, [sp, #4]
 2217 0010 012B     		cmp	r3, #1
 2218 0012 01D1     		bne	.L195
 2219              	.L194:
 2220              		.loc 2 1340 0 discriminator 3
 2221 0014 0123     		movs	r3, #1
 2222 0016 00E0     		b	.L196
 2223              	.L195:
 2224              		.loc 2 1340 0 discriminator 4
 2225 0018 0023     		movs	r3, #0
 2226              	.L196:
 2227              		.loc 2 1340 0 discriminator 6
 2228 001a 002B     		cmp	r3, #0
 2229 001c 02D1     		bne	.L197
 2230              		.loc 2 1340 0 discriminator 7
 2231 001e 0020     		movs	r0, #0
 2232 0020 FFF7FEFF 		bl	CyHalt
 2233              	.L197:
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 2234              		.loc 2 1344 0 is_stmt 1
 2235 0024 164B     		ldr	r3, .L202
 2236 0026 1B68     		ldr	r3, [r3]
 2237 0028 9B0F     		lsrs	r3, r3, #30
 2238 002a 9B07     		lsls	r3, r3, #30
 2239 002c 01D1     		bne	.L198
 2240              		.loc 2 1344 0 is_stmt 0 discriminator 1
 2241 002e C923     		movs	r3, #201
 2242 0030 00E0     		b	.L199
 2243              	.L198:
 2244              		.loc 2 1344 0 discriminator 2
 2245 0032 5D23     		movs	r3, #93
 2246              	.L199:
 2247              		.loc 2 1344 0 discriminator 4
 2248 0034 1800     		movs	r0, r3
 2249 0036 FFF7FEFF 		bl	CyDelayUs
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
 2250              		.loc 2 1346 0 is_stmt 1 discriminator 4
 2251 003a 124B     		ldr	r3, .L202+4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 77


 2252 003c 1B68     		ldr	r3, [r3]
 2253 003e 0393     		str	r3, [sp, #12]
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 2254              		.loc 2 1347 0 discriminator 4
 2255 0040 019B     		ldr	r3, [sp, #4]
 2256 0042 1B01     		lsls	r3, r3, #4
 2257 0044 104A     		ldr	r2, .L202+8
 2258 0046 9A40     		lsls	r2, r2, r3
 2259 0048 1300     		movs	r3, r2
 2260 004a DA43     		mvns	r2, r3
 2261 004c 039B     		ldr	r3, [sp, #12]
 2262 004e 1340     		ands	r3, r2
 2263 0050 0393     		str	r3, [sp, #12]
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 2264              		.loc 2 1348 0 discriminator 4
 2265 0052 0C4B     		ldr	r3, .L202+4
 2266 0054 019A     		ldr	r2, [sp, #4]
 2267 0056 1201     		lsls	r2, r2, #4
 2268 0058 0099     		ldr	r1, [sp]
 2269 005a 9140     		lsls	r1, r1, r2
 2270 005c 039A     		ldr	r2, [sp, #12]
 2271 005e 0A43     		orrs	r2, r1
 2272 0060 1A60     		str	r2, [r3]
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
 2273              		.loc 2 1351 0 discriminator 4
 2274 0062 074B     		ldr	r3, .L202
 2275 0064 1B68     		ldr	r3, [r3]
 2276 0066 9B0F     		lsrs	r3, r3, #30
 2277 0068 9B07     		lsls	r3, r3, #30
 2278 006a 01D1     		bne	.L200
 2279              		.loc 2 1351 0 is_stmt 0 discriminator 1
 2280 006c 4323     		movs	r3, #67
 2281 006e 00E0     		b	.L201
 2282              	.L200:
 2283              		.loc 2 1351 0 discriminator 2
 2284 0070 1F23     		movs	r3, #31
 2285              	.L201:
 2286              		.loc 2 1351 0 discriminator 4
 2287 0072 1800     		movs	r0, r3
 2288 0074 FFF7FEFF 		bl	CyDelayUs
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
 2289              		.loc 2 1352 0 is_stmt 1 discriminator 4
 2290 0078 C046     		nop
 2291 007a 05B0     		add	sp, sp, #20
 2292              		@ sp needed
 2293 007c 00BD     		pop	{pc}
 2294              	.L203:
 2295 007e C046     		.align	2
 2296              	.L202:
 2297 0080 0C020B40 		.word	1074463244
 2298 0084 08020B40 		.word	1074463240
 2299 0088 FFFF0000 		.word	65535
 2300              		.cfi_endproc
 2301              	.LFE30:
 2302              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 78


 2303              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 2304              		.align	2
 2305              		.global	CySysWdtSetToggleBit
 2306              		.code	16
 2307              		.thumb_func
 2308              		.type	CySysWdtSetToggleBit, %function
 2309              	CySysWdtSetToggleBit:
 2310              	.LFB31:
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
 2311              		.loc 2 1376 0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 16
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315 0000 00B5     		push	{lr}
 2316              		.cfi_def_cfa_offset 4
 2317              		.cfi_offset 14, -4
 2318 0002 85B0     		sub	sp, sp, #20
 2319              		.cfi_def_cfa_offset 24
 2320 0004 0190     		str	r0, [sp, #4]
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2321              		.loc 2 1379 0
 2322 0006 0220     		movs	r0, #2
 2323 0008 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2324 000c 031E     		subs	r3, r0, #0
 2325 000e 11D1     		bne	.L206
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2326              		.loc 2 1381 0
 2327 0010 0A4B     		ldr	r3, .L207
 2328 0012 1B68     		ldr	r3, [r3]
 2329 0014 0393     		str	r3, [sp, #12]
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 79


 2330              		.loc 2 1382 0
 2331 0016 039B     		ldr	r3, [sp, #12]
 2332 0018 094A     		ldr	r2, .L207+4
 2333 001a 1340     		ands	r3, r2
 2334 001c 0393     		str	r3, [sp, #12]
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 2335              		.loc 2 1383 0
 2336 001e 019B     		ldr	r3, [sp, #4]
 2337 0020 1A06     		lsls	r2, r3, #24
 2338 0022 F823     		movs	r3, #248
 2339 0024 5B05     		lsls	r3, r3, #21
 2340 0026 1340     		ands	r3, r2
 2341 0028 039A     		ldr	r2, [sp, #12]
 2342 002a 1343     		orrs	r3, r2
 2343 002c 0393     		str	r3, [sp, #12]
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2344              		.loc 2 1384 0
 2345 002e 034B     		ldr	r3, .L207
 2346 0030 039A     		ldr	r2, [sp, #12]
 2347 0032 1A60     		str	r2, [r3]
 2348              	.L206:
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
 2349              		.loc 2 1386 0
 2350 0034 C046     		nop
 2351 0036 05B0     		add	sp, sp, #20
 2352              		@ sp needed
 2353 0038 00BD     		pop	{pc}
 2354              	.L208:
 2355 003a C046     		.align	2
 2356              	.L207:
 2357 003c 0C020B40 		.word	1074463244
 2358 0040 FFFFFFE0 		.word	-520093697
 2359              		.cfi_endproc
 2360              	.LFE31:
 2361              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 2362              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 2363              		.align	2
 2364              		.global	CySysWdtGetToggleBit
 2365              		.code	16
 2366              		.thumb_func
 2367              		.type	CySysWdtGetToggleBit, %function
 2368              	CySysWdtGetToggleBit:
 2369              	.LFB32:
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 80


 2370              		.loc 2 1399 0
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 0
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
 2374              		@ link register save eliminated.
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 2375              		.loc 2 1400 0
 2376 0000 034B     		ldr	r3, .L211
 2377 0002 1B68     		ldr	r3, [r3]
 2378 0004 1B0E     		lsrs	r3, r3, #24
 2379 0006 1F22     		movs	r2, #31
 2380 0008 1340     		ands	r3, r2
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
 2381              		.loc 2 1401 0
 2382 000a 1800     		movs	r0, r3
 2383              		@ sp needed
 2384 000c 7047     		bx	lr
 2385              	.L212:
 2386 000e C046     		.align	2
 2387              	.L211:
 2388 0010 0C020B40 		.word	1074463244
 2389              		.cfi_endproc
 2390              	.LFE32:
 2391              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 2392              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 2393              		.align	2
 2394              		.global	CySysWdtGetMatch
 2395              		.code	16
 2396              		.thumb_func
 2397              		.type	CySysWdtGetMatch, %function
 2398              	CySysWdtGetMatch:
 2399              	.LFB33:
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
 2400              		.loc 2 1417 0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 8
 2403              		@ frame_needed = 0, uses_anonymous_args = 0
 2404 0000 00B5     		push	{lr}
 2405              		.cfi_def_cfa_offset 4
 2406              		.cfi_offset 14, -4
 2407 0002 83B0     		sub	sp, sp, #12
 2408              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 81


 2409 0004 0190     		str	r0, [sp, #4]
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2410              		.loc 2 1418 0
 2411 0006 019B     		ldr	r3, [sp, #4]
 2412 0008 002B     		cmp	r3, #0
 2413 000a 02D0     		beq	.L214
 2414              		.loc 2 1418 0 is_stmt 0 discriminator 2
 2415 000c 019B     		ldr	r3, [sp, #4]
 2416 000e 012B     		cmp	r3, #1
 2417 0010 01D1     		bne	.L215
 2418              	.L214:
 2419              		.loc 2 1418 0 discriminator 3
 2420 0012 0123     		movs	r3, #1
 2421 0014 00E0     		b	.L216
 2422              	.L215:
 2423              		.loc 2 1418 0 discriminator 4
 2424 0016 0023     		movs	r3, #0
 2425              	.L216:
 2426              		.loc 2 1418 0 discriminator 6
 2427 0018 002B     		cmp	r3, #0
 2428 001a 02D1     		bne	.L217
 2429              		.loc 2 1418 0 discriminator 7
 2430 001c 0020     		movs	r0, #0
 2431 001e FFF7FEFF 		bl	CyHalt
 2432              	.L217:
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
 2433              		.loc 2 1421 0 is_stmt 1
 2434 0022 054B     		ldr	r3, .L219
 2435 0024 1A68     		ldr	r2, [r3]
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2436              		.loc 2 1422 0
 2437 0026 019B     		ldr	r3, [sp, #4]
 2438 0028 1B01     		lsls	r3, r3, #4
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2439              		.loc 2 1421 0
 2440 002a DA40     		lsrs	r2, r2, r3
 2441 002c 1300     		movs	r3, r2
 2442 002e 1B04     		lsls	r3, r3, #16
 2443 0030 1B0C     		lsrs	r3, r3, #16
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
 2444              		.loc 2 1423 0
 2445 0032 1800     		movs	r0, r3
 2446 0034 03B0     		add	sp, sp, #12
 2447              		@ sp needed
 2448 0036 00BD     		pop	{pc}
 2449              	.L220:
 2450              		.align	2
 2451              	.L219:
 2452 0038 08020B40 		.word	1074463240
 2453              		.cfi_endproc
 2454              	.LFE33:
 2455              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 2456              		.section	.text.CySysWdtGetCount,"ax",%progbits
 2457              		.align	2
 2458              		.global	CySysWdtGetCount
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 82


 2459              		.code	16
 2460              		.thumb_func
 2461              		.type	CySysWdtGetCount, %function
 2462              	CySysWdtGetCount:
 2463              	.LFB34:
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
 2464              		.loc 2 1439 0
 2465              		.cfi_startproc
 2466              		@ args = 0, pretend = 0, frame = 16
 2467              		@ frame_needed = 0, uses_anonymous_args = 0
 2468 0000 00B5     		push	{lr}
 2469              		.cfi_def_cfa_offset 4
 2470              		.cfi_offset 14, -4
 2471 0002 85B0     		sub	sp, sp, #20
 2472              		.cfi_def_cfa_offset 24
 2473 0004 0190     		str	r0, [sp, #4]
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 2474              		.loc 2 1440 0
 2475 0006 0023     		movs	r3, #0
 2476 0008 0393     		str	r3, [sp, #12]
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 2477              		.loc 2 1442 0
 2478 000a 019B     		ldr	r3, [sp, #4]
 2479 000c 012B     		cmp	r3, #1
 2480 000e 09D0     		beq	.L223
 2481 0010 02D3     		bcc	.L224
 2482 0012 022B     		cmp	r3, #2
 2483 0014 0BD0     		beq	.L225
 2484 0016 0EE0     		b	.L228
 2485              	.L224:
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
 2486              		.loc 2 1446 0
 2487 0018 0B4B     		ldr	r3, .L229
 2488 001a 1B68     		ldr	r3, [r3]
 2489 001c 1B04     		lsls	r3, r3, #16
 2490 001e 1B0C     		lsrs	r3, r3, #16
 2491 0020 0393     		str	r3, [sp, #12]
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 83


 2492              		.loc 2 1447 0
 2493 0022 0CE0     		b	.L226
 2494              	.L223:
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
 2495              		.loc 2 1451 0
 2496 0024 084B     		ldr	r3, .L229
 2497 0026 1B68     		ldr	r3, [r3]
 2498 0028 1B0C     		lsrs	r3, r3, #16
 2499 002a 0393     		str	r3, [sp, #12]
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2500              		.loc 2 1452 0
 2501 002c 07E0     		b	.L226
 2502              	.L225:
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
 2503              		.loc 2 1456 0
 2504 002e 074B     		ldr	r3, .L229+4
 2505 0030 1B68     		ldr	r3, [r3]
 2506 0032 0393     		str	r3, [sp, #12]
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2507              		.loc 2 1457 0
 2508 0034 03E0     		b	.L226
 2509              	.L228:
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2510              		.loc 2 1460 0
 2511 0036 0020     		movs	r0, #0
 2512 0038 FFF7FEFF 		bl	CyHalt
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2513              		.loc 2 1461 0
 2514 003c C046     		nop
 2515              	.L226:
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
 2516              		.loc 2 1464 0
 2517 003e 039B     		ldr	r3, [sp, #12]
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
 2518              		.loc 2 1465 0
 2519 0040 1800     		movs	r0, r3
 2520 0042 05B0     		add	sp, sp, #20
 2521              		@ sp needed
 2522 0044 00BD     		pop	{pc}
 2523              	.L230:
 2524 0046 C046     		.align	2
 2525              	.L229:
 2526 0048 00020B40 		.word	1074463232
 2527 004c 04020B40 		.word	1074463236
 2528              		.cfi_endproc
 2529              	.LFE34:
 2530              		.size	CySysWdtGetCount, .-CySysWdtGetCount
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 84


 2531              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 2532              		.align	2
 2533              		.global	CySysWdtGetInterruptSource
 2534              		.code	16
 2535              		.thumb_func
 2536              		.type	CySysWdtGetInterruptSource, %function
 2537              	CySysWdtGetInterruptSource:
 2538              	.LFB35:
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
 2539              		.loc 2 1482 0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              		@ link register save eliminated.
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 2544              		.loc 2 1483 0
 2545 0000 024B     		ldr	r3, .L233
 2546 0002 1B68     		ldr	r3, [r3]
 2547 0004 024A     		ldr	r2, .L233+4
 2548 0006 1340     		ands	r3, r2
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
 2549              		.loc 2 1484 0
 2550 0008 1800     		movs	r0, r3
 2551              		@ sp needed
 2552 000a 7047     		bx	lr
 2553              	.L234:
 2554              		.align	2
 2555              	.L233:
 2556 000c 10020B40 		.word	1074463248
 2557 0010 04040400 		.word	263172
 2558              		.cfi_endproc
 2559              	.LFE35:
 2560              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 2561              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 2562              		.align	2
 2563              		.global	CySysWdtClearInterrupt
 2564              		.code	16
 2565              		.thumb_func
 2566              		.type	CySysWdtClearInterrupt, %function
 2567              	CySysWdtClearInterrupt:
 2568              	.LFB36:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 85


1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
 2569              		.loc 2 1511 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 16
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573 0000 10B5     		push	{r4, lr}
 2574              		.cfi_def_cfa_offset 8
 2575              		.cfi_offset 4, -8
 2576              		.cfi_offset 14, -4
 2577 0002 84B0     		sub	sp, sp, #16
 2578              		.cfi_def_cfa_offset 24
 2579 0004 0190     		str	r0, [sp, #4]
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 2580              		.loc 2 1515 0
 2581 0006 0B24     		movs	r4, #11
 2582 0008 6C44     		add	r4, r4, sp
 2583 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2584 000e 0300     		movs	r3, r0
 2585 0010 2370     		strb	r3, [r4]
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
 2586              		.loc 2 1517 0
 2587 0012 FFF7FEFF 		bl	CySysWdtLocked
 2588 0016 031E     		subs	r3, r0, #0
 2589 0018 04D0     		beq	.L236
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
 2590              		.loc 2 1519 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 86


 2591 001a 0123     		movs	r3, #1
 2592 001c 0393     		str	r3, [sp, #12]
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 2593              		.loc 2 1520 0
 2594 001e FFF7FEFF 		bl	CySysWdtUnlock
 2595 0022 01E0     		b	.L237
 2596              	.L236:
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
 2597              		.loc 2 1524 0
 2598 0024 0023     		movs	r3, #0
 2599 0026 0393     		str	r3, [sp, #12]
 2600              	.L237:
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
 2601              		.loc 2 1528 0
 2602 0028 019B     		ldr	r3, [sp, #4]
 2603 002a 0D4A     		ldr	r2, .L239
 2604 002c 1340     		ands	r3, r2
 2605 002e 0193     		str	r3, [sp, #4]
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
 2606              		.loc 2 1532 0
 2607 0030 0C4B     		ldr	r3, .L239+4
 2608 0032 0C4A     		ldr	r2, .L239+4
 2609 0034 1268     		ldr	r2, [r2]
 2610 0036 0C49     		ldr	r1, .L239+8
 2611 0038 1140     		ands	r1, r2
 2612 003a 019A     		ldr	r2, [sp, #4]
 2613 003c 0A43     		orrs	r2, r1
 2614 003e 1A60     		str	r2, [r3]
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
 2615              		.loc 2 1539 0
 2616 0040 084B     		ldr	r3, .L239+4
 2617 0042 1B68     		ldr	r3, [r3]
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
 2618              		.loc 2 1541 0
 2619 0044 039B     		ldr	r3, [sp, #12]
 2620 0046 012B     		cmp	r3, #1
 2621 0048 01D1     		bne	.L238
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
 2622              		.loc 2 1543 0
 2623 004a FFF7FEFF 		bl	CySysWdtLock
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 87


 2624              	.L238:
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 2625              		.loc 2 1546 0
 2626 004e 0B23     		movs	r3, #11
 2627 0050 6B44     		add	r3, r3, sp
 2628 0052 1B78     		ldrb	r3, [r3]
 2629 0054 1800     		movs	r0, r3
 2630 0056 FFF7FEFF 		bl	CyExitCriticalSection
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
 2631              		.loc 2 1547 0
 2632 005a C046     		nop
 2633 005c 04B0     		add	sp, sp, #16
 2634              		@ sp needed
 2635 005e 10BD     		pop	{r4, pc}
 2636              	.L240:
 2637              		.align	2
 2638              	.L239:
 2639 0060 04040400 		.word	263172
 2640 0064 10020B40 		.word	1074463248
 2641 0068 FBFBFBFF 		.word	-263173
 2642              		.cfi_endproc
 2643              	.LFE36:
 2644              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 2645              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 2646              		.align	2
 2647              		.global	CySysWdtResetCounters
 2648              		.code	16
 2649              		.thumb_func
 2650              		.type	CySysWdtResetCounters, %function
 2651              	CySysWdtResetCounters:
 2652              	.LFB37:
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
 2653              		.loc 2 1569 0
 2654              		.cfi_startproc
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 88


 2655              		@ args = 0, pretend = 0, frame = 8
 2656              		@ frame_needed = 0, uses_anonymous_args = 0
 2657              		@ link register save eliminated.
 2658 0000 82B0     		sub	sp, sp, #8
 2659              		.cfi_def_cfa_offset 8
 2660 0002 0190     		str	r0, [sp, #4]
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
 2661              		.loc 2 1571 0
 2662 0004 084B     		ldr	r3, .L243
 2663 0006 084A     		ldr	r2, .L243
 2664 0008 1168     		ldr	r1, [r2]
 2665 000a 019A     		ldr	r2, [sp, #4]
 2666 000c 0748     		ldr	r0, .L243+4
 2667 000e 0240     		ands	r2, r0
 2668 0010 0A43     		orrs	r2, r1
 2669 0012 1A60     		str	r2, [r3]
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
 2670              		.loc 2 1573 0
 2671 0014 C046     		nop
 2672              	.L242:
 2673              		.loc 2 1573 0 is_stmt 0 discriminator 1
 2674 0016 044B     		ldr	r3, .L243
 2675 0018 1B68     		ldr	r3, [r3]
 2676 001a 044A     		ldr	r2, .L243+4
 2677 001c 1340     		ands	r3, r2
 2678 001e FAD1     		bne	.L242
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
 2679              		.loc 2 1577 0 is_stmt 1
 2680 0020 C046     		nop
 2681 0022 02B0     		add	sp, sp, #8
 2682              		@ sp needed
 2683 0024 7047     		bx	lr
 2684              	.L244:
 2685 0026 C046     		.align	2
 2686              	.L243:
 2687 0028 10020B40 		.word	1074463248
 2688 002c 08080800 		.word	526344
 2689              		.cfi_endproc
 2690              	.LFE37:
 2691              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 2692              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 2693              		.align	2
 2694              		.global	CySysWdtSetInterruptCallback
 2695              		.code	16
 2696              		.thumb_func
 2697              		.type	CySysWdtSetInterruptCallback, %function
 2698              	CySysWdtSetInterruptCallback:
 2699              	.LFB38:
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 89


1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
 2700              		.loc 2 1595 0
 2701              		.cfi_startproc
 2702              		@ args = 0, pretend = 0, frame = 16
 2703              		@ frame_needed = 0, uses_anonymous_args = 0
 2704 0000 00B5     		push	{lr}
 2705              		.cfi_def_cfa_offset 4
 2706              		.cfi_offset 14, -4
 2707 0002 85B0     		sub	sp, sp, #20
 2708              		.cfi_def_cfa_offset 24
 2709 0004 0190     		str	r0, [sp, #4]
 2710 0006 0091     		str	r1, [sp]
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 2711              		.loc 2 1596 0
 2712 0008 0023     		movs	r3, #0
 2713 000a 0393     		str	r3, [sp, #12]
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2714              		.loc 2 1598 0
 2715 000c 019B     		ldr	r3, [sp, #4]
 2716 000e 022B     		cmp	r3, #2
 2717 0010 0AD8     		bhi	.L246
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
 2718              		.loc 2 1600 0
 2719 0012 094B     		ldr	r3, .L249
 2720 0014 019A     		ldr	r2, [sp, #4]
 2721 0016 9200     		lsls	r2, r2, #2
 2722 0018 D358     		ldr	r3, [r2, r3]
 2723 001a 0393     		str	r3, [sp, #12]
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 2724              		.loc 2 1601 0
 2725 001c 064B     		ldr	r3, .L249
 2726 001e 019A     		ldr	r2, [sp, #4]
 2727 0020 9200     		lsls	r2, r2, #2
 2728 0022 0099     		ldr	r1, [sp]
 2729 0024 D150     		str	r1, [r2, r3]
 2730 0026 02E0     		b	.L247
 2731              	.L246:
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2732              		.loc 2 1605 0 discriminator 1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 90


 2733 0028 0020     		movs	r0, #0
 2734 002a FFF7FEFF 		bl	CyHalt
 2735              	.L247:
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
 2736              		.loc 2 1608 0
 2737 002e 039B     		ldr	r3, [sp, #12]
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
 2738              		.loc 2 1609 0
 2739 0030 1800     		movs	r0, r3
 2740 0032 05B0     		add	sp, sp, #20
 2741              		@ sp needed
 2742 0034 00BD     		pop	{pc}
 2743              	.L250:
 2744 0036 C046     		.align	2
 2745              	.L249:
 2746 0038 0C000000 		.word	cySysWdtCallback
 2747              		.cfi_endproc
 2748              	.LFE38:
 2749              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 2750              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 2751              		.align	2
 2752              		.global	CySysWdtGetInterruptCallback
 2753              		.code	16
 2754              		.thumb_func
 2755              		.type	CySysWdtGetInterruptCallback, %function
 2756              	CySysWdtGetInterruptCallback:
 2757              	.LFB39:
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
 2758              		.loc 2 1625 0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 16
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
 2762 0000 00B5     		push	{lr}
 2763              		.cfi_def_cfa_offset 4
 2764              		.cfi_offset 14, -4
 2765 0002 85B0     		sub	sp, sp, #20
 2766              		.cfi_def_cfa_offset 24
 2767 0004 0190     		str	r0, [sp, #4]
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 2768              		.loc 2 1626 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 91


 2769 0006 0023     		movs	r3, #0
 2770 0008 0393     		str	r3, [sp, #12]
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2771              		.loc 2 1628 0
 2772 000a 019B     		ldr	r3, [sp, #4]
 2773 000c 022B     		cmp	r3, #2
 2774 000e 05D8     		bhi	.L252
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
 2775              		.loc 2 1630 0
 2776 0010 064B     		ldr	r3, .L255
 2777 0012 019A     		ldr	r2, [sp, #4]
 2778 0014 9200     		lsls	r2, r2, #2
 2779 0016 D358     		ldr	r3, [r2, r3]
 2780 0018 0393     		str	r3, [sp, #12]
 2781 001a 02E0     		b	.L253
 2782              	.L252:
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2783              		.loc 2 1634 0 discriminator 1
 2784 001c 0020     		movs	r0, #0
 2785 001e FFF7FEFF 		bl	CyHalt
 2786              	.L253:
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
 2787              		.loc 2 1637 0
 2788 0022 039B     		ldr	r3, [sp, #12]
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
 2789              		.loc 2 1638 0
 2790 0024 1800     		movs	r0, r3
 2791 0026 05B0     		add	sp, sp, #20
 2792              		@ sp needed
 2793 0028 00BD     		pop	{pc}
 2794              	.L256:
 2795 002a C046     		.align	2
 2796              	.L255:
 2797 002c 0C000000 		.word	cySysWdtCallback
 2798              		.cfi_endproc
 2799              	.LFE39:
 2800              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 2801              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 2802              		.align	2
 2803              		.global	CySysWdtEnableCounterIsr
 2804              		.code	16
 2805              		.thumb_func
 2806              		.type	CySysWdtEnableCounterIsr, %function
 2807              	CySysWdtEnableCounterIsr:
 2808              	.LFB40:
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 92


1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
 2809              		.loc 2 1654 0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 8
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
 2813 0000 00B5     		push	{lr}
 2814              		.cfi_def_cfa_offset 4
 2815              		.cfi_offset 14, -4
 2816 0002 83B0     		sub	sp, sp, #12
 2817              		.cfi_def_cfa_offset 16
 2818 0004 0190     		str	r0, [sp, #4]
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2819              		.loc 2 1655 0
 2820 0006 019B     		ldr	r3, [sp, #4]
 2821 0008 022B     		cmp	r3, #2
 2822 000a 13D8     		bhi	.L258
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
 2823              		.loc 2 1657 0
 2824 000c 0C4B     		ldr	r3, .L261
 2825 000e 019A     		ldr	r2, [sp, #4]
 2826 0010 9200     		lsls	r2, r2, #2
 2827 0012 D358     		ldr	r3, [r2, r3]
 2828 0014 DA43     		mvns	r2, r3
 2829 0016 0B4B     		ldr	r3, .L261+4
 2830 0018 1B68     		ldr	r3, [r3]
 2831 001a 1A40     		ands	r2, r3
 2832 001c 094B     		ldr	r3, .L261+4
 2833 001e 1A60     		str	r2, [r3]
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 2834              		.loc 2 1658 0
 2835 0020 074B     		ldr	r3, .L261
 2836 0022 019A     		ldr	r2, [sp, #4]
 2837 0024 9200     		lsls	r2, r2, #2
 2838 0026 D258     		ldr	r2, [r2, r3]
 2839 0028 074B     		ldr	r3, .L261+8
 2840 002a 1B68     		ldr	r3, [r3]
 2841 002c 1A43     		orrs	r2, r3
 2842 002e 064B     		ldr	r3, .L261+8
 2843 0030 1A60     		str	r2, [r3]
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
 2844              		.loc 2 1664 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 93


 2845 0032 02E0     		b	.L260
 2846              	.L258:
1662:Generated_Source\PSoC4/CyLFClk.c ****         }
 2847              		.loc 2 1662 0 discriminator 1
 2848 0034 0020     		movs	r0, #0
 2849 0036 FFF7FEFF 		bl	CyHalt
 2850              	.L260:
 2851              		.loc 2 1664 0
 2852 003a C046     		nop
 2853 003c 03B0     		add	sp, sp, #12
 2854              		@ sp needed
 2855 003e 00BD     		pop	{pc}
 2856              	.L262:
 2857              		.align	2
 2858              	.L261:
 2859 0040 00000000 		.word	counterIntMaskTbl
 2860 0044 08000000 		.word	disableServicedIsr
 2861 0048 04000000 		.word	wdtIsrMask
 2862              		.cfi_endproc
 2863              	.LFE40:
 2864              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 2865              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 2866              		.align	2
 2867              		.global	CySysWdtDisableCounterIsr
 2868              		.code	16
 2869              		.thumb_func
 2870              		.type	CySysWdtDisableCounterIsr, %function
 2871              	CySysWdtDisableCounterIsr:
 2872              	.LFB41:
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
 2873              		.loc 2 1677 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 8
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877 0000 00B5     		push	{lr}
 2878              		.cfi_def_cfa_offset 4
 2879              		.cfi_offset 14, -4
 2880 0002 83B0     		sub	sp, sp, #12
 2881              		.cfi_def_cfa_offset 16
 2882 0004 0190     		str	r0, [sp, #4]
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2883              		.loc 2 1678 0
 2884 0006 019B     		ldr	r3, [sp, #4]
 2885 0008 022B     		cmp	r3, #2
 2886 000a 0AD8     		bhi	.L264
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 94


1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
 2887              		.loc 2 1680 0
 2888 000c 084B     		ldr	r3, .L267
 2889 000e 019A     		ldr	r2, [sp, #4]
 2890 0010 9200     		lsls	r2, r2, #2
 2891 0012 D358     		ldr	r3, [r2, r3]
 2892 0014 DA43     		mvns	r2, r3
 2893 0016 074B     		ldr	r3, .L267+4
 2894 0018 1B68     		ldr	r3, [r3]
 2895 001a 1A40     		ands	r2, r3
 2896 001c 054B     		ldr	r3, .L267+4
 2897 001e 1A60     		str	r2, [r3]
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
 2898              		.loc 2 1686 0
 2899 0020 02E0     		b	.L266
 2900              	.L264:
1684:Generated_Source\PSoC4/CyLFClk.c ****         }
 2901              		.loc 2 1684 0 discriminator 1
 2902 0022 0020     		movs	r0, #0
 2903 0024 FFF7FEFF 		bl	CyHalt
 2904              	.L266:
 2905              		.loc 2 1686 0
 2906 0028 C046     		nop
 2907 002a 03B0     		add	sp, sp, #12
 2908              		@ sp needed
 2909 002c 00BD     		pop	{pc}
 2910              	.L268:
 2911 002e C046     		.align	2
 2912              	.L267:
 2913 0030 00000000 		.word	counterIntMaskTbl
 2914 0034 04000000 		.word	wdtIsrMask
 2915              		.cfi_endproc
 2916              	.LFE41:
 2917              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 2918              		.section	.text.CySysWdtIsr,"ax",%progbits
 2919              		.align	2
 2920              		.global	CySysWdtIsr
 2921              		.code	16
 2922              		.thumb_func
 2923              		.type	CySysWdtIsr, %function
 2924              	CySysWdtIsr:
 2925              	.LFB42:
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 95


1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
 2926              		.loc 2 1710 0
 2927              		.cfi_startproc
 2928              		@ args = 0, pretend = 0, frame = 0
 2929              		@ frame_needed = 0, uses_anonymous_args = 0
 2930 0000 10B5     		push	{r4, lr}
 2931              		.cfi_def_cfa_offset 8
 2932              		.cfi_offset 4, -8
 2933              		.cfi_offset 14, -4
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 2934              		.loc 2 1711 0
 2935 0002 344B     		ldr	r3, .L277
 2936 0004 1B68     		ldr	r3, [r3]
 2937 0006 0422     		movs	r2, #4
 2938 0008 1340     		ands	r3, r2
 2939 000a 1FD0     		beq	.L270
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
 2940              		.loc 2 1713 0
 2941 000c 324B     		ldr	r3, .L277+4
 2942 000e 1B68     		ldr	r3, [r3]
 2943 0010 0422     		movs	r2, #4
 2944 0012 1340     		ands	r3, r2
 2945 0014 17D0     		beq	.L271
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
 2946              		.loc 2 1715 0
 2947 0016 314B     		ldr	r3, .L277+8
 2948 0018 1B68     		ldr	r3, [r3]
 2949 001a 0422     		movs	r2, #4
 2950 001c 1340     		ands	r3, r2
 2951 001e DA43     		mvns	r2, r3
 2952 0020 2D4B     		ldr	r3, .L277+4
 2953 0022 1B68     		ldr	r3, [r3]
 2954 0024 1A40     		ands	r2, r3
 2955 0026 2C4B     		ldr	r3, .L277+4
 2956 0028 1A60     		str	r2, [r3]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 2957              		.loc 2 1716 0
 2958 002a 2C4B     		ldr	r3, .L277+8
 2959 002c 1B68     		ldr	r3, [r3]
 2960 002e 0422     		movs	r2, #4
 2961 0030 9343     		bics	r3, r2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 96


 2962 0032 1A00     		movs	r2, r3
 2963 0034 294B     		ldr	r3, .L277+8
 2964 0036 1A60     		str	r2, [r3]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 2965              		.loc 2 1717 0
 2966 0038 294B     		ldr	r3, .L277+12
 2967 003a 1B68     		ldr	r3, [r3]
 2968 003c 002B     		cmp	r3, #0
 2969 003e 02D0     		beq	.L271
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
 2970              		.loc 2 1719 0
 2971 0040 274B     		ldr	r3, .L277+12
 2972 0042 1B68     		ldr	r3, [r3]
 2973 0044 9847     		blx	r3
 2974              	.L271:
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 2975              		.loc 2 1722 0
 2976 0046 0420     		movs	r0, #4
 2977 0048 FFF7FEFF 		bl	CySysWdtClearInterrupt
 2978              	.L270:
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
 2979              		.loc 2 1725 0
 2980 004c 214B     		ldr	r3, .L277
 2981 004e 1A68     		ldr	r2, [r3]
 2982 0050 8023     		movs	r3, #128
 2983 0052 DB00     		lsls	r3, r3, #3
 2984 0054 1340     		ands	r3, r2
 2985 0056 22D0     		beq	.L272
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
 2986              		.loc 2 1727 0
 2987 0058 1F4B     		ldr	r3, .L277+4
 2988 005a 1A68     		ldr	r2, [r3]
 2989 005c 8023     		movs	r3, #128
 2990 005e DB00     		lsls	r3, r3, #3
 2991 0060 1340     		ands	r3, r2
 2992 0062 17D0     		beq	.L273
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
 2993              		.loc 2 1729 0
 2994 0064 1D4B     		ldr	r3, .L277+8
 2995 0066 1A68     		ldr	r2, [r3]
 2996 0068 8023     		movs	r3, #128
 2997 006a DB00     		lsls	r3, r3, #3
 2998 006c 1340     		ands	r3, r2
 2999 006e DA43     		mvns	r2, r3
 3000 0070 194B     		ldr	r3, .L277+4
 3001 0072 1B68     		ldr	r3, [r3]
 3002 0074 1A40     		ands	r2, r3
 3003 0076 184B     		ldr	r3, .L277+4
 3004 0078 1A60     		str	r2, [r3]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 97


 3005              		.loc 2 1730 0
 3006 007a 184B     		ldr	r3, .L277+8
 3007 007c 1B68     		ldr	r3, [r3]
 3008 007e 194A     		ldr	r2, .L277+16
 3009 0080 1A40     		ands	r2, r3
 3010 0082 164B     		ldr	r3, .L277+8
 3011 0084 1A60     		str	r2, [r3]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 3012              		.loc 2 1731 0
 3013 0086 164B     		ldr	r3, .L277+12
 3014 0088 5B68     		ldr	r3, [r3, #4]
 3015 008a 002B     		cmp	r3, #0
 3016 008c 02D0     		beq	.L273
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
 3017              		.loc 2 1733 0
 3018 008e 144B     		ldr	r3, .L277+12
 3019 0090 5B68     		ldr	r3, [r3, #4]
 3020 0092 9847     		blx	r3
 3021              	.L273:
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3022              		.loc 2 1736 0
 3023 0094 8023     		movs	r3, #128
 3024 0096 DB00     		lsls	r3, r3, #3
 3025 0098 1800     		movs	r0, r3
 3026 009a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3027              	.L272:
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
 3028              		.loc 2 1739 0
 3029 009e 0D4B     		ldr	r3, .L277
 3030 00a0 1A68     		ldr	r2, [r3]
 3031 00a2 8023     		movs	r3, #128
 3032 00a4 DB02     		lsls	r3, r3, #11
 3033 00a6 1340     		ands	r3, r2
 3034 00a8 11D0     		beq	.L276
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
 3035              		.loc 2 1741 0
 3036 00aa 0B4B     		ldr	r3, .L277+4
 3037 00ac 1A68     		ldr	r2, [r3]
 3038 00ae 8023     		movs	r3, #128
 3039 00b0 DB02     		lsls	r3, r3, #11
 3040 00b2 1340     		ands	r3, r2
 3041 00b4 06D0     		beq	.L275
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
 3042              		.loc 2 1743 0
 3043 00b6 0A4B     		ldr	r3, .L277+12
 3044 00b8 9B68     		ldr	r3, [r3, #8]
 3045 00ba 002B     		cmp	r3, #0
 3046 00bc 02D0     		beq	.L275
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 98


 3047              		.loc 2 1745 0
 3048 00be 084B     		ldr	r3, .L277+12
 3049 00c0 9B68     		ldr	r3, [r3, #8]
 3050 00c2 9847     		blx	r3
 3051              	.L275:
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
 3052              		.loc 2 1748 0
 3053 00c4 8023     		movs	r3, #128
 3054 00c6 DB02     		lsls	r3, r3, #11
 3055 00c8 1800     		movs	r0, r3
 3056 00ca FFF7FEFF 		bl	CySysWdtClearInterrupt
 3057              	.L276:
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
 3058              		.loc 2 1750 0
 3059 00ce C046     		nop
 3060              		@ sp needed
 3061 00d0 10BD     		pop	{r4, pc}
 3062              	.L278:
 3063 00d2 C046     		.align	2
 3064              	.L277:
 3065 00d4 10020B40 		.word	1074463248
 3066 00d8 04000000 		.word	wdtIsrMask
 3067 00dc 08000000 		.word	disableServicedIsr
 3068 00e0 0C000000 		.word	cySysWdtCallback
 3069 00e4 FFFBFFFF 		.word	-1025
 3070              		.cfi_endproc
 3071              	.LFE42:
 3072              		.size	CySysWdtIsr, .-CySysWdtIsr
 3073              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 3074              		.align	2
 3075              		.global	CySysWatchdogFeed
 3076              		.code	16
 3077              		.thumb_func
 3078              		.type	CySysWatchdogFeed, %function
 3079              	CySysWatchdogFeed:
 3080              	.LFB43:
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 99


1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
 3081              		.loc 2 1775 0
 3082              		.cfi_startproc
 3083              		@ args = 0, pretend = 0, frame = 8
 3084              		@ frame_needed = 0, uses_anonymous_args = 0
 3085 0000 00B5     		push	{lr}
 3086              		.cfi_def_cfa_offset 4
 3087              		.cfi_offset 14, -4
 3088 0002 83B0     		sub	sp, sp, #12
 3089              		.cfi_def_cfa_offset 16
 3090 0004 0190     		str	r0, [sp, #4]
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 3091              		.loc 2 1776 0
 3092 0006 019B     		ldr	r3, [sp, #4]
 3093 0008 002B     		cmp	r3, #0
 3094 000a 18D1     		bne	.L280
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 3095              		.loc 2 1778 0
 3096 000c 019B     		ldr	r3, [sp, #4]
 3097 000e 1800     		movs	r0, r3
 3098 0010 FFF7FEFF 		bl	CySysWdtGetMode
 3099 0014 0300     		movs	r3, r0
 3100 0016 032B     		cmp	r3, #3
 3101 0018 03D1     		bne	.L281
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3102              		.loc 2 1780 0
 3103 001a 0420     		movs	r0, #4
 3104 001c FFF7FEFF 		bl	CySysWdtClearInterrupt
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 100


1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
 3105              		.loc 2 1812 0
 3106 0020 2EE0     		b	.L284
 3107              	.L281:
1782:Generated_Source\PSoC4/CyLFClk.c ****             {
 3108              		.loc 2 1782 0
 3109 0022 019B     		ldr	r3, [sp, #4]
 3110 0024 1800     		movs	r0, r3
 3111 0026 FFF7FEFF 		bl	CySysWdtGetMode
 3112 002a 0300     		movs	r3, r0
 3113 002c 022B     		cmp	r3, #2
 3114 002e 27D1     		bne	.L284
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3115              		.loc 2 1784 0
 3116 0030 0820     		movs	r0, #8
 3117 0032 FFF7FEFF 		bl	CySysWdtResetCounters
1785:Generated_Source\PSoC4/CyLFClk.c ****             }
 3118              		.loc 2 1785 0
 3119 0036 0420     		movs	r0, #4
 3120 0038 FFF7FEFF 		bl	CySysWdtClearInterrupt
 3121              		.loc 2 1812 0
 3122 003c 20E0     		b	.L284
 3123              	.L280:
1792:Generated_Source\PSoC4/CyLFClk.c ****         {
 3124              		.loc 2 1792 0
 3125 003e 019B     		ldr	r3, [sp, #4]
 3126 0040 012B     		cmp	r3, #1
 3127 0042 1DD1     		bne	.L284
1794:Generated_Source\PSoC4/CyLFClk.c ****             {
 3128              		.loc 2 1794 0
 3129 0044 019B     		ldr	r3, [sp, #4]
 3130 0046 1800     		movs	r0, r3
 3131 0048 FFF7FEFF 		bl	CySysWdtGetMode
 3132 004c 0300     		movs	r3, r0
 3133 004e 032B     		cmp	r3, #3
 3134 0050 05D1     		bne	.L283
1796:Generated_Source\PSoC4/CyLFClk.c ****             }
 3135              		.loc 2 1796 0
 3136 0052 8023     		movs	r3, #128
 3137 0054 DB00     		lsls	r3, r3, #3
 3138 0056 1800     		movs	r0, r3
 3139 0058 FFF7FEFF 		bl	CySysWdtClearInterrupt
 3140              		.loc 2 1812 0
 3141 005c 10E0     		b	.L284
 3142              	.L283:
1798:Generated_Source\PSoC4/CyLFClk.c ****             {
 3143              		.loc 2 1798 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 101


 3144 005e 019B     		ldr	r3, [sp, #4]
 3145 0060 1800     		movs	r0, r3
 3146 0062 FFF7FEFF 		bl	CySysWdtGetMode
 3147 0066 0300     		movs	r3, r0
 3148 0068 022B     		cmp	r3, #2
 3149 006a 09D1     		bne	.L284
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3150              		.loc 2 1800 0
 3151 006c 8023     		movs	r3, #128
 3152 006e 1B01     		lsls	r3, r3, #4
 3153 0070 1800     		movs	r0, r3
 3154 0072 FFF7FEFF 		bl	CySysWdtResetCounters
1801:Generated_Source\PSoC4/CyLFClk.c ****             }
 3155              		.loc 2 1801 0
 3156 0076 8023     		movs	r3, #128
 3157 0078 DB00     		lsls	r3, r3, #3
 3158 007a 1800     		movs	r0, r3
 3159 007c FFF7FEFF 		bl	CySysWdtClearInterrupt
 3160              	.L284:
 3161              		.loc 2 1812 0
 3162 0080 C046     		nop
 3163 0082 03B0     		add	sp, sp, #12
 3164              		@ sp needed
 3165 0084 00BD     		pop	{pc}
 3166              		.cfi_endproc
 3167              	.LFE43:
 3168              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 3169 0086 C046     		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 3170              		.align	2
 3171              		.code	16
 3172              		.thumb_func
 3173              		.type	CySysClkLfclkPosedgeCatch, %function
 3174              	CySysClkLfclkPosedgeCatch:
 3175              	.LFB44:
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 102


1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
 3176              		.loc 2 1841 0
 3177              		.cfi_startproc
 3178              		@ args = 0, pretend = 0, frame = 8
 3179              		@ frame_needed = 0, uses_anonymous_args = 0
 3180 0000 00B5     		push	{lr}
 3181              		.cfi_def_cfa_offset 4
 3182              		.cfi_offset 14, -4
 3183 0002 83B0     		sub	sp, sp, #12
 3184              		.cfi_def_cfa_offset 16
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 3185              		.loc 2 1845 0
 3186 0004 0020     		movs	r0, #0
 3187 0006 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3188 000a 031E     		subs	r3, r0, #0
 3189 000c 03D0     		beq	.L286
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3190              		.loc 2 1847 0
 3191 000e 1E4B     		ldr	r3, .L291
 3192 0010 0022     		movs	r2, #0
 3193 0012 1A60     		str	r2, [r3]
 3194 0014 24E0     		b	.L287
 3195              	.L286:
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 3196              		.loc 2 1849 0
 3197 0016 0120     		movs	r0, #1
 3198 0018 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3199 001c 031E     		subs	r3, r0, #0
 3200 001e 03D0     		beq	.L288
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
 3201              		.loc 2 1851 0
 3202 0020 194B     		ldr	r3, .L291
 3203 0022 0122     		movs	r2, #1
 3204 0024 1A60     		str	r2, [r3]
 3205 0026 1BE0     		b	.L287
 3206              	.L288:
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 3207              		.loc 2 1853 0
 3208 0028 0220     		movs	r0, #2
 3209 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3210 002e 031E     		subs	r3, r0, #0
 3211 0030 03D0     		beq	.L289
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
 3212              		.loc 2 1855 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 103


 3213 0032 154B     		ldr	r3, .L291
 3214 0034 0222     		movs	r2, #2
 3215 0036 1A60     		str	r2, [r3]
 3216 0038 12E0     		b	.L287
 3217              	.L289:
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
 3218              		.loc 2 1860 0
 3219 003a 144B     		ldr	r3, .L291+4
 3220 003c 0122     		movs	r2, #1
 3221 003e 1A60     		str	r2, [r3]
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3222              		.loc 2 1861 0
 3223 0040 114B     		ldr	r3, .L291
 3224 0042 0022     		movs	r2, #0
 3225 0044 1A60     		str	r2, [r3]
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
 3226              		.loc 2 1863 0
 3227 0046 0020     		movs	r0, #0
 3228 0048 FFF7FEFF 		bl	CySysWdtGetMode
 3229 004c 0200     		movs	r2, r0
 3230 004e 104B     		ldr	r3, .L291+8
 3231 0050 1A60     		str	r2, [r3]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 3232              		.loc 2 1864 0
 3233 0052 0021     		movs	r1, #0
 3234 0054 0020     		movs	r0, #0
 3235 0056 FFF7FEFF 		bl	CySysWdtSetMode
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 3236              		.loc 2 1865 0
 3237 005a 0120     		movs	r0, #1
 3238 005c FFF7FEFF 		bl	CySysWdtEnable
 3239              	.L287:
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
 3240              		.loc 2 1868 0
 3241 0060 094B     		ldr	r3, .L291
 3242 0062 1B68     		ldr	r3, [r3]
 3243 0064 1800     		movs	r0, r3
 3244 0066 FFF7FEFF 		bl	CySysWdtGetCount
 3245 006a 0300     		movs	r3, r0
 3246 006c 0193     		str	r3, [sp, #4]
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 3247              		.loc 2 1869 0
 3248 006e C046     		nop
 3249              	.L290:
 3250              		.loc 2 1869 0 is_stmt 0 discriminator 1
 3251 0070 054B     		ldr	r3, .L291
 3252 0072 1B68     		ldr	r3, [r3]
 3253 0074 1800     		movs	r0, r3
 3254 0076 FFF7FEFF 		bl	CySysWdtGetCount
 3255 007a 0200     		movs	r2, r0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 104


 3256 007c 019B     		ldr	r3, [sp, #4]
 3257 007e 9A42     		cmp	r2, r3
 3258 0080 F6D0     		beq	.L290
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
 3259              		.loc 2 1873 0 is_stmt 1
 3260 0082 C046     		nop
 3261 0084 03B0     		add	sp, sp, #12
 3262              		@ sp needed
 3263 0086 00BD     		pop	{pc}
 3264              	.L292:
 3265              		.align	2
 3266              	.L291:
 3267 0088 24000000 		.word	lfclkPosedgeEnabledWdtCounter.5072
 3268 008c 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3269 0090 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3270              		.cfi_endproc
 3271              	.LFE44:
 3272              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 3273              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 3274              		.align	2
 3275              		.code	16
 3276              		.thumb_func
 3277              		.type	CySysClkLfclkPosedgeRestore, %function
 3278              	CySysClkLfclkPosedgeRestore:
 3279              	.LFB45:
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
 3280              		.loc 2 1895 0
 3281              		.cfi_startproc
 3282              		@ args = 0, pretend = 0, frame = 0
 3283              		@ frame_needed = 0, uses_anonymous_args = 0
 3284 0000 10B5     		push	{r4, lr}
 3285              		.cfi_def_cfa_offset 8
 3286              		.cfi_offset 4, -8
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 105


 3287              		.cfi_offset 14, -4
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 3288              		.loc 2 1896 0
 3289 0002 0A4B     		ldr	r3, .L296
 3290 0004 1B68     		ldr	r3, [r3]
 3291 0006 002B     		cmp	r3, #0
 3292 0008 0ED0     		beq	.L295
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 3293              		.loc 2 1899 0
 3294 000a 094B     		ldr	r3, .L296+4
 3295 000c 084A     		ldr	r2, .L296+4
 3296 000e 1268     		ldr	r2, [r2]
 3297 0010 0121     		movs	r1, #1
 3298 0012 8A43     		bics	r2, r1
 3299 0014 1A60     		str	r2, [r3]
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 3300              		.loc 2 1900 0
 3301 0016 074B     		ldr	r3, .L296+8
 3302 0018 1B68     		ldr	r3, [r3]
 3303 001a 1900     		movs	r1, r3
 3304 001c 0020     		movs	r0, #0
 3305 001e FFF7FEFF 		bl	CySysWdtSetMode
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 3306              		.loc 2 1901 0
 3307 0022 024B     		ldr	r3, .L296
 3308 0024 0022     		movs	r2, #0
 3309 0026 1A60     		str	r2, [r3]
 3310              	.L295:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
 3311              		.loc 2 1903 0
 3312 0028 C046     		nop
 3313              		@ sp needed
 3314 002a 10BD     		pop	{r4, pc}
 3315              	.L297:
 3316              		.align	2
 3317              	.L296:
 3318 002c 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3319 0030 10020B40 		.word	1074463248
 3320 0034 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3321              		.cfi_endproc
 3322              	.LFE45:
 3323              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 3324              		.section	.text.CySysTimerDelay,"ax",%progbits
 3325              		.align	2
 3326              		.global	CySysTimerDelay
 3327              		.code	16
 3328              		.thumb_func
 3329              		.type	CySysTimerDelay, %function
 3330              	CySysTimerDelay:
 3331              	.LFB46:
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 106


1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 107


1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 108


2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 109


2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 110


2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 111


2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 112


2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 113


2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 114


2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 115


2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 116


2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 117


2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 118


2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 119


2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 120


2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 121


2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 122


2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 123


2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 124


2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 125


2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
 3332              		.loc 2 3032 0
 3333              		.cfi_startproc
 3334              		@ args = 0, pretend = 0, frame = 24
 3335              		@ frame_needed = 0, uses_anonymous_args = 0
 3336 0000 00B5     		push	{lr}
 3337              		.cfi_def_cfa_offset 4
 3338              		.cfi_offset 14, -4
 3339 0002 87B0     		sub	sp, sp, #28
 3340              		.cfi_def_cfa_offset 32
 3341 0004 0390     		str	r0, [sp, #12]
 3342 0006 0192     		str	r2, [sp, #4]
 3343 0008 0B23     		movs	r3, #11
 3344 000a 6B44     		add	r3, r3, sp
 3345 000c 0A1C     		adds	r2, r1, #0
 3346 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 126


3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3347              		.loc 2 3037 0
 3348 0010 039B     		ldr	r3, [sp, #12]
 3349 0012 012B     		cmp	r3, #1
 3350 0014 1ED8     		bhi	.L299
 3351              		.loc 2 3037 0 is_stmt 0 discriminator 1
 3352 0016 039B     		ldr	r3, [sp, #12]
 3353 0018 1800     		movs	r0, r3
 3354 001a FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3355 001e 031E     		subs	r3, r0, #0
 3356 0020 18D1     		bne	.L299
 3357              		.loc 2 3037 0 discriminator 2
 3358 0022 019B     		ldr	r3, [sp, #4]
 3359 0024 0E4A     		ldr	r2, .L301
 3360 0026 9342     		cmp	r3, r2
 3361 0028 14D8     		bhi	.L299
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
 3362              		.loc 2 3040 0 is_stmt 1
 3363 002a 039B     		ldr	r3, [sp, #12]
 3364 002c 1800     		movs	r0, r3
 3365 002e FFF7FEFF 		bl	CySysWdtGetCount
 3366 0032 0300     		movs	r3, r0
 3367 0034 0593     		str	r3, [sp, #20]
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 3368              		.loc 2 3041 0
 3369 0036 059A     		ldr	r2, [sp, #20]
 3370 0038 019B     		ldr	r3, [sp, #4]
 3371 003a D318     		adds	r3, r2, r3
 3372 003c 1B04     		lsls	r3, r3, #16
 3373 003e 1B0C     		lsrs	r3, r3, #16
 3374 0040 0493     		str	r3, [sp, #16]
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
 3375              		.loc 2 3043 0
 3376 0042 049A     		ldr	r2, [sp, #16]
 3377 0044 0B23     		movs	r3, #11
 3378 0046 6B44     		add	r3, r3, sp
 3379 0048 1978     		ldrb	r1, [r3]
 3380 004a 039B     		ldr	r3, [sp, #12]
 3381 004c 1800     		movs	r0, r3
 3382 004e FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 3383 0052 02E0     		b	.L300
 3384              	.L299:
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3385              		.loc 2 3047 0 discriminator 1
 3386 0054 0020     		movs	r0, #0
 3387 0056 FFF7FEFF 		bl	CyHalt
 3388              	.L300:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 127


3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
 3389              		.loc 2 3065 0
 3390 005a C046     		nop
 3391 005c 07B0     		add	sp, sp, #28
 3392              		@ sp needed
 3393 005e 00BD     		pop	{pc}
 3394              	.L302:
 3395              		.align	2
 3396              	.L301:
 3397 0060 FFFF0000 		.word	65535
 3398              		.cfi_endproc
 3399              	.LFE46:
 3400              		.size	CySysTimerDelay, .-CySysTimerDelay
 3401              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 3402              		.align	2
 3403              		.global	CySysTimerDelayUntilMatch
 3404              		.code	16
 3405              		.thumb_func
 3406              		.type	CySysTimerDelayUntilMatch, %function
 3407              	CySysTimerDelayUntilMatch:
 3408              	.LFB47:
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 128


3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 129


3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 3409              		.loc 2 3161 0
 3410              		.cfi_startproc
 3411              		@ args = 0, pretend = 0, frame = 24
 3412              		@ frame_needed = 0, uses_anonymous_args = 0
 3413 0000 00B5     		push	{lr}
 3414              		.cfi_def_cfa_offset 4
 3415              		.cfi_offset 14, -4
 3416 0002 87B0     		sub	sp, sp, #28
 3417              		.cfi_def_cfa_offset 32
 3418 0004 0390     		str	r0, [sp, #12]
 3419 0006 0192     		str	r2, [sp, #4]
 3420 0008 0B23     		movs	r3, #11
 3421 000a 6B44     		add	r3, r3, sp
 3422 000c 0A1C     		adds	r2, r1, #0
 3423 000e 1A70     		strb	r2, [r3]
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3424              		.loc 2 3165 0
 3425 0010 039B     		ldr	r3, [sp, #12]
 3426 0012 012B     		cmp	r3, #1
 3427 0014 3BD8     		bhi	.L304
 3428              		.loc 2 3165 0 is_stmt 0 discriminator 1
 3429 0016 039B     		ldr	r3, [sp, #12]
 3430 0018 1800     		movs	r0, r3
 3431 001a FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3432 001e 031E     		subs	r3, r0, #0
 3433 0020 35D1     		bne	.L304
 3434              		.loc 2 3165 0 discriminator 2
 3435 0022 019B     		ldr	r3, [sp, #4]
 3436 0024 1D4A     		ldr	r2, .L310
 3437 0026 9342     		cmp	r3, r2
 3438 0028 31D8     		bhi	.L304
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 130


 3439              		.loc 2 3168 0 is_stmt 1
 3440 002a 0B23     		movs	r3, #11
 3441 002c 6B44     		add	r3, r3, sp
 3442 002e 1B78     		ldrb	r3, [r3]
 3443 0030 002B     		cmp	r3, #0
 3444 0032 14D1     		bne	.L305
 3445              	.L306:
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3446              		.loc 2 3172 0 discriminator 1
 3447 0034 039B     		ldr	r3, [sp, #12]
 3448 0036 1800     		movs	r0, r3
 3449 0038 FFF7FEFF 		bl	CySysWdtGetCount
 3450 003c 0300     		movs	r3, r0
 3451 003e 0593     		str	r3, [sp, #20]
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 3452              		.loc 2 3173 0 discriminator 1
 3453 0040 059A     		ldr	r2, [sp, #20]
 3454 0042 019B     		ldr	r3, [sp, #4]
 3455 0044 9A42     		cmp	r2, r3
 3456 0046 F5D8     		bhi	.L306
 3457              	.L307:
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3458              		.loc 2 3177 0 discriminator 1
 3459 0048 039B     		ldr	r3, [sp, #12]
 3460 004a 1800     		movs	r0, r3
 3461 004c FFF7FEFF 		bl	CySysWdtGetCount
 3462 0050 0300     		movs	r3, r0
 3463 0052 0593     		str	r3, [sp, #20]
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 3464              		.loc 2 3178 0 discriminator 1
 3465 0054 059A     		ldr	r2, [sp, #20]
 3466 0056 019B     		ldr	r3, [sp, #4]
 3467 0058 9A42     		cmp	r2, r3
 3468 005a F5D3     		bcc	.L307
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3469              		.loc 2 3168 0
 3470 005c 1AE0     		b	.L309
 3471              	.L305:
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 3472              		.loc 2 3182 0
 3473 005e 104B     		ldr	r3, .L310+4
 3474 0060 039A     		ldr	r2, [sp, #12]
 3475 0062 9200     		lsls	r2, r2, #2
 3476 0064 D358     		ldr	r3, [r2, r3]
 3477 0066 0593     		str	r3, [sp, #20]
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 3478              		.loc 2 3183 0
 3479 0068 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 131


 3480 006a 039B     		ldr	r3, [sp, #12]
 3481 006c 1100     		movs	r1, r2
 3482 006e 1800     		movs	r0, r3
 3483 0070 FFF7FEFF 		bl	CySysWdtSetMatch
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
 3484              		.loc 2 3185 0
 3485 0074 0B4B     		ldr	r3, .L310+8
 3486 0076 1A68     		ldr	r2, [r3]
 3487 0078 059B     		ldr	r3, [sp, #20]
 3488 007a 1A43     		orrs	r2, r3
 3489 007c 094B     		ldr	r3, .L310+8
 3490 007e 1A60     		str	r2, [r3]
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 3491              		.loc 2 3186 0
 3492 0080 094B     		ldr	r3, .L310+12
 3493 0082 1A68     		ldr	r2, [r3]
 3494 0084 059B     		ldr	r3, [sp, #20]
 3495 0086 1A43     		orrs	r2, r3
 3496 0088 074B     		ldr	r3, .L310+12
 3497 008a 1A60     		str	r2, [r3]
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3498              		.loc 2 3168 0
 3499 008c 02E0     		b	.L309
 3500              	.L304:
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3501              		.loc 2 3191 0 discriminator 1
 3502 008e 0020     		movs	r0, #0
 3503 0090 FFF7FEFF 		bl	CyHalt
 3504              	.L309:
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 132


3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 3505              		.loc 2 3226 0
 3506 0094 C046     		nop
 3507 0096 07B0     		add	sp, sp, #28
 3508              		@ sp needed
 3509 0098 00BD     		pop	{pc}
 3510              	.L311:
 3511 009a C046     		.align	2
 3512              	.L310:
 3513 009c FFFF0000 		.word	65535
 3514 00a0 00000000 		.word	counterIntMaskTbl
 3515 00a4 08000000 		.word	disableServicedIsr
 3516 00a8 04000000 		.word	wdtIsrMask
 3517              		.cfi_endproc
 3518              	.LFE47:
 3519              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 3520              		.bss
 3521              	iloTrimTrig.4876:
 3522 0018 00       		.space	1
 3523 0019 000000   		.align	2
 3524              	compensateRunningStatus.4886:
 3525 001c 00000000 		.space	4
 3526              		.align	2
 3527              	trimRunningStatus.4898:
 3528 0020 00000000 		.space	4
 3529              		.align	2
 3530              	lfclkPosedgeEnabledWdtCounter.5072:
 3531 0024 00000000 		.space	4
 3532              		.text
 3533              	.Letext0:
 3534              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 3535              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 3536              		.section	.debug_info,"",%progbits
 3537              	.Ldebug_info0:
 3538 0000 AF0A0000 		.4byte	0xaaf
 3539 0004 0400     		.2byte	0x4
 3540 0006 00000000 		.4byte	.Ldebug_abbrev0
 3541 000a 04       		.byte	0x4
 3542 000b 01       		.uleb128 0x1
 3543 000c 36060000 		.4byte	.LASF120
 3544 0010 0C       		.byte	0xc
 3545 0011 85070000 		.4byte	.LASF121
 3546 0015 6E040000 		.4byte	.LASF122
 3547 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3548 001d 00000000 		.4byte	0
 3549 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 133


 3550 0025 02       		.uleb128 0x2
 3551 0026 01       		.byte	0x1
 3552 0027 06       		.byte	0x6
 3553 0028 68010000 		.4byte	.LASF0
 3554 002c 02       		.uleb128 0x2
 3555 002d 01       		.byte	0x1
 3556 002e 08       		.byte	0x8
 3557 002f D9060000 		.4byte	.LASF1
 3558 0033 02       		.uleb128 0x2
 3559 0034 02       		.byte	0x2
 3560 0035 05       		.byte	0x5
 3561 0036 23070000 		.4byte	.LASF2
 3562 003a 02       		.uleb128 0x2
 3563 003b 02       		.byte	0x2
 3564 003c 07       		.byte	0x7
 3565 003d B8030000 		.4byte	.LASF3
 3566 0041 02       		.uleb128 0x2
 3567 0042 04       		.byte	0x4
 3568 0043 05       		.byte	0x5
 3569 0044 D2010000 		.4byte	.LASF4
 3570 0048 02       		.uleb128 0x2
 3571 0049 04       		.byte	0x4
 3572 004a 07       		.byte	0x7
 3573 004b 5D030000 		.4byte	.LASF5
 3574 004f 02       		.uleb128 0x2
 3575 0050 08       		.byte	0x8
 3576 0051 05       		.byte	0x5
 3577 0052 5A010000 		.4byte	.LASF6
 3578 0056 02       		.uleb128 0x2
 3579 0057 08       		.byte	0x8
 3580 0058 07       		.byte	0x7
 3581 0059 EF000000 		.4byte	.LASF7
 3582 005d 03       		.uleb128 0x3
 3583 005e 04       		.byte	0x4
 3584 005f 05       		.byte	0x5
 3585 0060 696E7400 		.ascii	"int\000"
 3586 0064 02       		.uleb128 0x2
 3587 0065 04       		.byte	0x4
 3588 0066 07       		.byte	0x7
 3589 0067 15030000 		.4byte	.LASF8
 3590 006b 04       		.uleb128 0x4
 3591 006c ED010000 		.4byte	.LASF9
 3592 0070 03       		.byte	0x3
 3593 0071 D201     		.2byte	0x1d2
 3594 0073 2C000000 		.4byte	0x2c
 3595 0077 04       		.uleb128 0x4
 3596 0078 00000000 		.4byte	.LASF10
 3597 007c 03       		.byte	0x3
 3598 007d D301     		.2byte	0x1d3
 3599 007f 3A000000 		.4byte	0x3a
 3600 0083 04       		.uleb128 0x4
 3601 0084 45020000 		.4byte	.LASF11
 3602 0088 03       		.byte	0x3
 3603 0089 D401     		.2byte	0x1d4
 3604 008b 48000000 		.4byte	0x48
 3605 008f 04       		.uleb128 0x4
 3606 0090 9A010000 		.4byte	.LASF12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 134


 3607 0094 03       		.byte	0x3
 3608 0095 D701     		.2byte	0x1d7
 3609 0097 41000000 		.4byte	0x41
 3610 009b 02       		.uleb128 0x2
 3611 009c 04       		.byte	0x4
 3612 009d 04       		.byte	0x4
 3613 009e F7050000 		.4byte	.LASF13
 3614 00a2 02       		.uleb128 0x2
 3615 00a3 08       		.byte	0x8
 3616 00a4 04       		.byte	0x4
 3617 00a5 FA010000 		.4byte	.LASF14
 3618 00a9 02       		.uleb128 0x2
 3619 00aa 01       		.byte	0x1
 3620 00ab 08       		.byte	0x8
 3621 00ac F9070000 		.4byte	.LASF15
 3622 00b0 04       		.uleb128 0x4
 3623 00b1 FA080000 		.4byte	.LASF16
 3624 00b5 03       		.byte	0x3
 3625 00b6 7402     		.2byte	0x274
 3626 00b8 48000000 		.4byte	0x48
 3627 00bc 05       		.uleb128 0x5
 3628 00bd 77000000 		.4byte	0x77
 3629 00c1 04       		.uleb128 0x4
 3630 00c2 FE070000 		.4byte	.LASF17
 3631 00c6 03       		.byte	0x3
 3632 00c7 7E02     		.2byte	0x27e
 3633 00c9 CD000000 		.4byte	0xcd
 3634 00cd 05       		.uleb128 0x5
 3635 00ce 83000000 		.4byte	0x83
 3636 00d2 06       		.uleb128 0x6
 3637 00d3 04       		.byte	0x4
 3638 00d4 D8000000 		.4byte	0xd8
 3639 00d8 07       		.uleb128 0x7
 3640 00d9 08       		.uleb128 0x8
 3641 00da 01       		.byte	0x1
 3642 00db 2C000000 		.4byte	0x2c
 3643 00df 01       		.byte	0x1
 3644 00e0 1A       		.byte	0x1a
 3645 00e1 F2000000 		.4byte	0xf2
 3646 00e5 09       		.uleb128 0x9
 3647 00e6 8A050000 		.4byte	.LASF18
 3648 00ea 00       		.byte	0
 3649 00eb 09       		.uleb128 0x9
 3650 00ec 3A090000 		.4byte	.LASF19
 3651 00f0 01       		.byte	0x1
 3652 00f1 00       		.byte	0
 3653 00f2 0A       		.uleb128 0xa
 3654 00f3 B1010000 		.4byte	.LASF20
 3655 00f7 01       		.byte	0x1
 3656 00f8 1D       		.byte	0x1d
 3657 00f9 D9000000 		.4byte	0xd9
 3658 00fd 0A       		.uleb128 0xa
 3659 00fe 8C010000 		.4byte	.LASF21
 3660 0102 01       		.byte	0x1
 3661 0103 58       		.byte	0x58
 3662 0104 D2000000 		.4byte	0xd2
 3663 0108 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 135


 3664 0109 08       		.byte	0x8
 3665 010a 04       		.byte	0x4
 3666 010b 49050000 		.4byte	.LASF22
 3667 010f 02       		.uleb128 0x2
 3668 0110 04       		.byte	0x4
 3669 0111 07       		.byte	0x7
 3670 0112 40050000 		.4byte	.LASF23
 3671 0116 0B       		.uleb128 0xb
 3672 0117 3E010000 		.4byte	.LASF24
 3673 011b 01       		.byte	0x1
 3674 011c 9202     		.2byte	0x292
 3675 011e 00000000 		.4byte	.LFB0
 3676 0122 44000000 		.4byte	.LFE0-.LFB0
 3677 0126 01       		.uleb128 0x1
 3678 0127 9C       		.byte	0x9c
 3679 0128 0B       		.uleb128 0xb
 3680 0129 67020000 		.4byte	.LASF25
 3681 012d 01       		.byte	0x1
 3682 012e AB02     		.2byte	0x2ab
 3683 0130 00000000 		.4byte	.LFB1
 3684 0134 44000000 		.4byte	.LFE1-.LFB1
 3685 0138 01       		.uleb128 0x1
 3686 0139 9C       		.byte	0x9c
 3687 013a 0C       		.uleb128 0xc
 3688 013b 26040000 		.4byte	.LASF30
 3689 013f 02       		.byte	0x2
 3690 0140 53       		.byte	0x53
 3691 0141 00000000 		.4byte	.LFB2
 3692 0145 18000000 		.4byte	.LFE2-.LFB2
 3693 0149 01       		.uleb128 0x1
 3694 014a 9C       		.byte	0x9c
 3695 014b 0D       		.uleb128 0xd
 3696 014c 13020000 		.4byte	.LASF26
 3697 0150 02       		.byte	0x2
 3698 0151 6C       		.byte	0x6c
 3699 0152 00000000 		.4byte	.LFB3
 3700 0156 60000000 		.4byte	.LFE3-.LFB3
 3701 015a 01       		.uleb128 0x1
 3702 015b 9C       		.byte	0x9c
 3703 015c 6F010000 		.4byte	0x16f
 3704 0160 0E       		.uleb128 0xe
 3705 0161 7D010000 		.4byte	.LASF28
 3706 0165 02       		.byte	0x2
 3707 0166 6F       		.byte	0x6f
 3708 0167 6B000000 		.4byte	0x6b
 3709 016b 02       		.uleb128 0x2
 3710 016c 91       		.byte	0x91
 3711 016d 77       		.sleb128 -9
 3712 016e 00       		.byte	0
 3713 016f 0F       		.uleb128 0xf
 3714 0170 B4000000 		.4byte	.LASF27
 3715 0174 02       		.byte	0x2
 3716 0175 A8       		.byte	0xa8
 3717 0176 00000000 		.4byte	.LFB4
 3718 017a 68000000 		.4byte	.LFE4-.LFB4
 3719 017e 01       		.uleb128 0x1
 3720 017f 9C       		.byte	0x9c
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 136


 3721 0180 96010000 		.4byte	0x196
 3722 0184 0E       		.uleb128 0xe
 3723 0185 01040000 		.4byte	.LASF29
 3724 0189 02       		.byte	0x2
 3725 018a AB       		.byte	0xab
 3726 018b 6B000000 		.4byte	0x6b
 3727 018f 05       		.uleb128 0x5
 3728 0190 03       		.byte	0x3
 3729 0191 18000000 		.4byte	iloTrimTrig.4876
 3730 0195 00       		.byte	0
 3731 0196 0C       		.uleb128 0xc
 3732 0197 4C020000 		.4byte	.LASF31
 3733 019b 02       		.byte	0x2
 3734 019c C9       		.byte	0xc9
 3735 019d 00000000 		.4byte	.LFB5
 3736 01a1 18000000 		.4byte	.LFE5-.LFB5
 3737 01a5 01       		.uleb128 0x1
 3738 01a6 9C       		.byte	0x9c
 3739 01a7 10       		.uleb128 0x10
 3740 01a8 24090000 		.4byte	.LASF39
 3741 01ac 02       		.byte	0x2
 3742 01ad 0B01     		.2byte	0x10b
 3743 01af B0000000 		.4byte	0xb0
 3744 01b3 00000000 		.4byte	.LFB6
 3745 01b7 54010000 		.4byte	.LFE6-.LFB6
 3746 01bb 01       		.uleb128 0x1
 3747 01bc 9C       		.byte	0x9c
 3748 01bd 2E020000 		.4byte	0x22e
 3749 01c1 11       		.uleb128 0x11
 3750 01c2 50030000 		.4byte	.LASF32
 3751 01c6 02       		.byte	0x2
 3752 01c7 0B01     		.2byte	0x10b
 3753 01c9 83000000 		.4byte	0x83
 3754 01cd 02       		.uleb128 0x2
 3755 01ce 91       		.byte	0x91
 3756 01cf 64       		.sleb128 -28
 3757 01d0 11       		.uleb128 0x11
 3758 01d1 01020000 		.4byte	.LASF33
 3759 01d5 02       		.byte	0x2
 3760 01d6 0B01     		.2byte	0x10b
 3761 01d8 2E020000 		.4byte	0x22e
 3762 01dc 02       		.uleb128 0x2
 3763 01dd 91       		.byte	0x91
 3764 01de 60       		.sleb128 -32
 3765 01df 12       		.uleb128 0x12
 3766 01e0 23020000 		.4byte	.LASF34
 3767 01e4 02       		.byte	0x2
 3768 01e5 0D01     		.2byte	0x10d
 3769 01e7 83000000 		.4byte	0x83
 3770 01eb 02       		.uleb128 0x2
 3771 01ec 91       		.byte	0x91
 3772 01ed 74       		.sleb128 -12
 3773 01ee 12       		.uleb128 0x12
 3774 01ef 90080000 		.4byte	.LASF35
 3775 01f3 02       		.byte	0x2
 3776 01f4 0E01     		.2byte	0x10e
 3777 01f6 83000000 		.4byte	0x83
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 137


 3778 01fa 02       		.uleb128 0x2
 3779 01fb 91       		.byte	0x91
 3780 01fc 68       		.sleb128 -24
 3781 01fd 12       		.uleb128 0x12
 3782 01fe E7060000 		.4byte	.LASF36
 3783 0202 02       		.byte	0x2
 3784 0203 0F01     		.2byte	0x10f
 3785 0205 83000000 		.4byte	0x83
 3786 0209 05       		.uleb128 0x5
 3787 020a 03       		.byte	0x3
 3788 020b 1C000000 		.4byte	compensateRunningStatus.4886
 3789 020f 12       		.uleb128 0x12
 3790 0210 9C050000 		.4byte	.LASF37
 3791 0214 02       		.byte	0x2
 3792 0215 1001     		.2byte	0x110
 3793 0217 83000000 		.4byte	0x83
 3794 021b 02       		.uleb128 0x2
 3795 021c 91       		.byte	0x91
 3796 021d 6C       		.sleb128 -20
 3797 021e 12       		.uleb128 0x12
 3798 021f 12050000 		.4byte	.LASF38
 3799 0223 02       		.byte	0x2
 3800 0224 1101     		.2byte	0x111
 3801 0226 B0000000 		.4byte	0xb0
 3802 022a 02       		.uleb128 0x2
 3803 022b 91       		.byte	0x91
 3804 022c 70       		.sleb128 -16
 3805 022d 00       		.byte	0
 3806 022e 06       		.uleb128 0x6
 3807 022f 04       		.byte	0x4
 3808 0230 83000000 		.4byte	0x83
 3809 0234 13       		.uleb128 0x13
 3810 0235 57070000 		.4byte	.LASF63
 3811 0239 02       		.byte	0x2
 3812 023a 7201     		.2byte	0x172
 3813 023c 83000000 		.4byte	0x83
 3814 0240 00000000 		.4byte	.LFB7
 3815 0244 18000000 		.4byte	.LFE7-.LFB7
 3816 0248 01       		.uleb128 0x1
 3817 0249 9C       		.byte	0x9c
 3818 024a 10       		.uleb128 0x10
 3819 024b 47070000 		.4byte	.LASF40
 3820 024f 02       		.byte	0x2
 3821 0250 C101     		.2byte	0x1c1
 3822 0252 B0000000 		.4byte	0xb0
 3823 0256 00000000 		.4byte	.LFB8
 3824 025a 20010000 		.4byte	.LFE8-.LFB8
 3825 025e 01       		.uleb128 0x1
 3826 025f 9C       		.byte	0x9c
 3827 0260 D1020000 		.4byte	0x2d1
 3828 0264 11       		.uleb128 0x11
 3829 0265 F8020000 		.4byte	.LASF41
 3830 0269 02       		.byte	0x2
 3831 026a C101     		.2byte	0x1c1
 3832 026c 83000000 		.4byte	0x83
 3833 0270 02       		.uleb128 0x2
 3834 0271 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 138


 3835 0272 64       		.sleb128 -28
 3836 0273 11       		.uleb128 0x11
 3837 0274 A6070000 		.4byte	.LASF42
 3838 0278 02       		.byte	0x2
 3839 0279 C101     		.2byte	0x1c1
 3840 027b D1020000 		.4byte	0x2d1
 3841 027f 02       		.uleb128 0x2
 3842 0280 91       		.byte	0x91
 3843 0281 60       		.sleb128 -32
 3844 0282 12       		.uleb128 0x12
 3845 0283 60080000 		.4byte	.LASF43
 3846 0287 02       		.byte	0x2
 3847 0288 C301     		.2byte	0x1c3
 3848 028a 83000000 		.4byte	0x83
 3849 028e 02       		.uleb128 0x2
 3850 028f 91       		.byte	0x91
 3851 0290 74       		.sleb128 -12
 3852 0291 12       		.uleb128 0x12
 3853 0292 CC050000 		.4byte	.LASF44
 3854 0296 02       		.byte	0x2
 3855 0297 C401     		.2byte	0x1c4
 3856 0299 83000000 		.4byte	0x83
 3857 029d 02       		.uleb128 0x2
 3858 029e 91       		.byte	0x91
 3859 029f 70       		.sleb128 -16
 3860 02a0 12       		.uleb128 0x12
 3861 02a1 6E080000 		.4byte	.LASF45
 3862 02a5 02       		.byte	0x2
 3863 02a6 C501     		.2byte	0x1c5
 3864 02a8 83000000 		.4byte	0x83
 3865 02ac 05       		.uleb128 0x5
 3866 02ad 03       		.byte	0x3
 3867 02ae 20000000 		.4byte	trimRunningStatus.4898
 3868 02b2 12       		.uleb128 0x12
 3869 02b3 9C050000 		.4byte	.LASF37
 3870 02b7 02       		.byte	0x2
 3871 02b8 C601     		.2byte	0x1c6
 3872 02ba 83000000 		.4byte	0x83
 3873 02be 02       		.uleb128 0x2
 3874 02bf 91       		.byte	0x91
 3875 02c0 68       		.sleb128 -24
 3876 02c1 12       		.uleb128 0x12
 3877 02c2 12050000 		.4byte	.LASF38
 3878 02c6 02       		.byte	0x2
 3879 02c7 C701     		.2byte	0x1c7
 3880 02c9 B0000000 		.4byte	0xb0
 3881 02cd 02       		.uleb128 0x2
 3882 02ce 91       		.byte	0x91
 3883 02cf 6C       		.sleb128 -20
 3884 02d0 00       		.byte	0
 3885 02d1 06       		.uleb128 0x6
 3886 02d2 04       		.byte	0x4
 3887 02d3 8F000000 		.4byte	0x8f
 3888 02d7 10       		.uleb128 0x10
 3889 02d8 0D040000 		.4byte	.LASF46
 3890 02dc 02       		.byte	0x2
 3891 02dd 3B02     		.2byte	0x23b
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 139


 3892 02df B0000000 		.4byte	0xb0
 3893 02e3 00000000 		.4byte	.LFB9
 3894 02e7 F8000000 		.4byte	.LFE9-.LFB9
 3895 02eb 01       		.uleb128 0x1
 3896 02ec 9C       		.byte	0x9c
 3897 02ed 4C030000 		.4byte	0x34c
 3898 02f1 11       		.uleb128 0x11
 3899 02f2 A6070000 		.4byte	.LASF42
 3900 02f6 02       		.byte	0x2
 3901 02f7 3B02     		.2byte	0x23b
 3902 02f9 D1020000 		.4byte	0x2d1
 3903 02fd 02       		.uleb128 0x2
 3904 02fe 91       		.byte	0x91
 3905 02ff 5C       		.sleb128 -36
 3906 0300 12       		.uleb128 0x12
 3907 0301 55000000 		.4byte	.LASF47
 3908 0305 02       		.byte	0x2
 3909 0306 3D02     		.2byte	0x23d
 3910 0308 83000000 		.4byte	0x83
 3911 030c 02       		.uleb128 0x2
 3912 030d 91       		.byte	0x91
 3913 030e 6C       		.sleb128 -20
 3914 030f 12       		.uleb128 0x12
 3915 0310 06010000 		.4byte	.LASF48
 3916 0314 02       		.byte	0x2
 3917 0315 3E02     		.2byte	0x23e
 3918 0317 83000000 		.4byte	0x83
 3919 031b 02       		.uleb128 0x2
 3920 031c 91       		.byte	0x91
 3921 031d 64       		.sleb128 -28
 3922 031e 12       		.uleb128 0x12
 3923 031f A0010000 		.4byte	.LASF49
 3924 0323 02       		.byte	0x2
 3925 0324 3F02     		.2byte	0x23f
 3926 0326 8F000000 		.4byte	0x8f
 3927 032a 02       		.uleb128 0x2
 3928 032b 91       		.byte	0x91
 3929 032c 68       		.sleb128 -24
 3930 032d 12       		.uleb128 0x12
 3931 032e AF030000 		.4byte	.LASF50
 3932 0332 02       		.byte	0x2
 3933 0333 4002     		.2byte	0x240
 3934 0335 8F000000 		.4byte	0x8f
 3935 0339 02       		.uleb128 0x2
 3936 033a 91       		.byte	0x91
 3937 033b 74       		.sleb128 -12
 3938 033c 12       		.uleb128 0x12
 3939 033d 2D010000 		.4byte	.LASF51
 3940 0341 02       		.byte	0x2
 3941 0342 4102     		.2byte	0x241
 3942 0344 B0000000 		.4byte	0xb0
 3943 0348 02       		.uleb128 0x2
 3944 0349 91       		.byte	0x91
 3945 034a 70       		.sleb128 -16
 3946 034b 00       		.byte	0
 3947 034c 14       		.uleb128 0x14
 3948 034d 6C050000 		.4byte	.LASF52
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 140


 3949 0351 02       		.byte	0x2
 3950 0352 8802     		.2byte	0x288
 3951 0354 B0000000 		.4byte	0xb0
 3952 0358 00000000 		.4byte	.LFB10
 3953 035c 44000000 		.4byte	.LFE10-.LFB10
 3954 0360 01       		.uleb128 0x1
 3955 0361 9C       		.byte	0x9c
 3956 0362 76030000 		.4byte	0x376
 3957 0366 12       		.uleb128 0x12
 3958 0367 12050000 		.4byte	.LASF38
 3959 036b 02       		.byte	0x2
 3960 036c 8A02     		.2byte	0x28a
 3961 036e B0000000 		.4byte	0xb0
 3962 0372 02       		.uleb128 0x2
 3963 0373 91       		.byte	0x91
 3964 0374 7C       		.sleb128 -4
 3965 0375 00       		.byte	0
 3966 0376 15       		.uleb128 0x15
 3967 0377 9D000000 		.4byte	.LASF123
 3968 037b 02       		.byte	0x2
 3969 037c AD02     		.2byte	0x2ad
 3970 037e 83000000 		.4byte	0x83
 3971 0382 00000000 		.4byte	.LFB11
 3972 0386 18000000 		.4byte	.LFE11-.LFB11
 3973 038a 01       		.uleb128 0x1
 3974 038b 9C       		.byte	0x9c
 3975 038c A0030000 		.4byte	0x3a0
 3976 0390 12       		.uleb128 0x12
 3977 0391 07000000 		.4byte	.LASF53
 3978 0395 02       		.byte	0x2
 3979 0396 AF02     		.2byte	0x2af
 3980 0398 83000000 		.4byte	0x83
 3981 039c 02       		.uleb128 0x2
 3982 039d 91       		.byte	0x91
 3983 039e 7C       		.sleb128 -4
 3984 039f 00       		.byte	0
 3985 03a0 16       		.uleb128 0x16
 3986 03a1 22030000 		.4byte	.LASF54
 3987 03a5 02       		.byte	0x2
 3988 03a6 DE02     		.2byte	0x2de
 3989 03a8 00000000 		.4byte	.LFB12
 3990 03ac 50000000 		.4byte	.LFE12-.LFB12
 3991 03b0 01       		.uleb128 0x1
 3992 03b1 9C       		.byte	0x9c
 3993 03b2 D5030000 		.4byte	0x3d5
 3994 03b6 11       		.uleb128 0x11
 3995 03b7 1F050000 		.4byte	.LASF55
 3996 03bb 02       		.byte	0x2
 3997 03bc DE02     		.2byte	0x2de
 3998 03be 83000000 		.4byte	0x83
 3999 03c2 02       		.uleb128 0x2
 4000 03c3 91       		.byte	0x91
 4001 03c4 6C       		.sleb128 -20
 4002 03c5 12       		.uleb128 0x12
 4003 03c6 7D010000 		.4byte	.LASF28
 4004 03ca 02       		.byte	0x2
 4005 03cb E002     		.2byte	0x2e0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 141


 4006 03cd 6B000000 		.4byte	0x6b
 4007 03d1 02       		.uleb128 0x2
 4008 03d2 91       		.byte	0x91
 4009 03d3 77       		.sleb128 -9
 4010 03d4 00       		.byte	0
 4011 03d5 17       		.uleb128 0x17
 4012 03d6 A5080000 		.4byte	.LASF56
 4013 03da 02       		.byte	0x2
 4014 03db 0303     		.2byte	0x303
 4015 03dd 00000000 		.4byte	.LFB13
 4016 03e1 1C000000 		.4byte	.LFE13-.LFB13
 4017 03e5 01       		.uleb128 0x1
 4018 03e6 9C       		.byte	0x9c
 4019 03e7 16       		.uleb128 0x16
 4020 03e8 B7070000 		.4byte	.LASF57
 4021 03ec 02       		.byte	0x2
 4022 03ed 1503     		.2byte	0x315
 4023 03ef 00000000 		.4byte	.LFB14
 4024 03f3 60000000 		.4byte	.LFE14-.LFB14
 4025 03f7 01       		.uleb128 0x1
 4026 03f8 9C       		.byte	0x9c
 4027 03f9 0D040000 		.4byte	0x40d
 4028 03fd 12       		.uleb128 0x12
 4029 03fe 7D010000 		.4byte	.LASF28
 4030 0402 02       		.byte	0x2
 4031 0403 1803     		.2byte	0x318
 4032 0405 6B000000 		.4byte	0x6b
 4033 0409 02       		.uleb128 0x2
 4034 040a 91       		.byte	0x91
 4035 040b 77       		.sleb128 -9
 4036 040c 00       		.byte	0
 4037 040d 18       		.uleb128 0x18
 4038 040e 1A010000 		.4byte	.LASF80
 4039 0412 02       		.byte	0x2
 4040 0413 3803     		.2byte	0x338
 4041 0415 83000000 		.4byte	0x83
 4042 0419 00000000 		.4byte	.LFB15
 4043 041d 18000000 		.4byte	.LFE15-.LFB15
 4044 0421 01       		.uleb128 0x1
 4045 0422 9C       		.byte	0x9c
 4046 0423 10       		.uleb128 0x10
 4047 0424 C7070000 		.4byte	.LASF58
 4048 0428 02       		.byte	0x2
 4049 0429 5303     		.2byte	0x353
 4050 042b 83000000 		.4byte	0x83
 4051 042f 00000000 		.4byte	.LFB16
 4052 0433 3C000000 		.4byte	.LFE16-.LFB16
 4053 0437 01       		.uleb128 0x1
 4054 0438 9C       		.byte	0x9c
 4055 0439 5C040000 		.4byte	0x45c
 4056 043d 11       		.uleb128 0x11
 4057 043e F8020000 		.4byte	.LASF41
 4058 0442 02       		.byte	0x2
 4059 0443 5303     		.2byte	0x353
 4060 0445 83000000 		.4byte	0x83
 4061 0449 02       		.uleb128 0x2
 4062 044a 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 142


 4063 044b 6C       		.sleb128 -20
 4064 044c 12       		.uleb128 0x12
 4065 044d 4C040000 		.4byte	.LASF59
 4066 0451 02       		.byte	0x2
 4067 0452 5503     		.2byte	0x355
 4068 0454 83000000 		.4byte	0x83
 4069 0458 02       		.uleb128 0x2
 4070 0459 91       		.byte	0x91
 4071 045a 74       		.sleb128 -12
 4072 045b 00       		.byte	0
 4073 045c 16       		.uleb128 0x16
 4074 045d 26050000 		.4byte	.LASF60
 4075 0461 02       		.byte	0x2
 4076 0462 9603     		.2byte	0x396
 4077 0464 00000000 		.4byte	.LFB17
 4078 0468 3C000000 		.4byte	.LFE17-.LFB17
 4079 046c 01       		.uleb128 0x1
 4080 046d 9C       		.byte	0x9c
 4081 046e 82040000 		.4byte	0x482
 4082 0472 11       		.uleb128 0x11
 4083 0473 E4010000 		.4byte	.LASF61
 4084 0477 02       		.byte	0x2
 4085 0478 9603     		.2byte	0x396
 4086 047a 83000000 		.4byte	0x83
 4087 047e 02       		.uleb128 0x2
 4088 047f 91       		.byte	0x91
 4089 0480 74       		.sleb128 -12
 4090 0481 00       		.byte	0
 4091 0482 16       		.uleb128 0x16
 4092 0483 15080000 		.4byte	.LASF62
 4093 0487 02       		.byte	0x2
 4094 0488 B403     		.2byte	0x3b4
 4095 048a 00000000 		.4byte	.LFB18
 4096 048e 34000000 		.4byte	.LFE18-.LFB18
 4097 0492 01       		.uleb128 0x1
 4098 0493 9C       		.byte	0x9c
 4099 0494 A8040000 		.4byte	0x4a8
 4100 0498 12       		.uleb128 0x12
 4101 0499 7D010000 		.4byte	.LASF28
 4102 049d 02       		.byte	0x2
 4103 049e B603     		.2byte	0x3b6
 4104 04a0 6B000000 		.4byte	0x6b
 4105 04a4 02       		.uleb128 0x2
 4106 04a5 91       		.byte	0x91
 4107 04a6 77       		.sleb128 -9
 4108 04a7 00       		.byte	0
 4109 04a8 13       		.uleb128 0x13
 4110 04a9 27060000 		.4byte	.LASF64
 4111 04ad 02       		.byte	0x2
 4112 04ae C903     		.2byte	0x3c9
 4113 04b0 83000000 		.4byte	0x83
 4114 04b4 00000000 		.4byte	.LFB19
 4115 04b8 1C000000 		.4byte	.LFE19-.LFB19
 4116 04bc 01       		.uleb128 0x1
 4117 04bd 9C       		.byte	0x9c
 4118 04be 16       		.uleb128 0x16
 4119 04bf 46000000 		.4byte	.LASF65
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 143


 4120 04c3 02       		.byte	0x2
 4121 04c4 D703     		.2byte	0x3d7
 4122 04c6 00000000 		.4byte	.LFB20
 4123 04ca 50000000 		.4byte	.LFE20-.LFB20
 4124 04ce 01       		.uleb128 0x1
 4125 04cf 9C       		.byte	0x9c
 4126 04d0 E4040000 		.4byte	0x4e4
 4127 04d4 12       		.uleb128 0x12
 4128 04d5 7D010000 		.4byte	.LASF28
 4129 04d9 02       		.byte	0x2
 4130 04da D903     		.2byte	0x3d9
 4131 04dc 6B000000 		.4byte	0x6b
 4132 04e0 02       		.uleb128 0x2
 4133 04e1 91       		.byte	0x91
 4134 04e2 77       		.sleb128 -9
 4135 04e3 00       		.byte	0
 4136 04e4 10       		.uleb128 0x10
 4137 04e5 CB030000 		.4byte	.LASF66
 4138 04e9 02       		.byte	0x2
 4139 04ea F903     		.2byte	0x3f9
 4140 04ec 83000000 		.4byte	0x83
 4141 04f0 00000000 		.4byte	.LFB21
 4142 04f4 30000000 		.4byte	.LFE21-.LFB21
 4143 04f8 01       		.uleb128 0x1
 4144 04f9 9C       		.byte	0x9c
 4145 04fa 0E050000 		.4byte	0x50e
 4146 04fe 11       		.uleb128 0x11
 4147 04ff 65000000 		.4byte	.LASF67
 4148 0503 02       		.byte	0x2
 4149 0504 F903     		.2byte	0x3f9
 4150 0506 83000000 		.4byte	0x83
 4151 050a 02       		.uleb128 0x2
 4152 050b 91       		.byte	0x91
 4153 050c 74       		.sleb128 -12
 4154 050d 00       		.byte	0
 4155 050e 16       		.uleb128 0x16
 4156 050f 36000000 		.4byte	.LASF68
 4157 0513 02       		.byte	0x2
 4158 0514 1704     		.2byte	0x417
 4159 0516 00000000 		.4byte	.LFB22
 4160 051a 58000000 		.4byte	.LFE22-.LFB22
 4161 051e 01       		.uleb128 0x1
 4162 051f 9C       		.byte	0x9c
 4163 0520 52050000 		.4byte	0x552
 4164 0524 11       		.uleb128 0x11
 4165 0525 65000000 		.4byte	.LASF67
 4166 0529 02       		.byte	0x2
 4167 052a 1704     		.2byte	0x417
 4168 052c 83000000 		.4byte	0x83
 4169 0530 02       		.uleb128 0x2
 4170 0531 91       		.byte	0x91
 4171 0532 6C       		.sleb128 -20
 4172 0533 11       		.uleb128 0x11
 4173 0534 F8020000 		.4byte	.LASF41
 4174 0538 02       		.byte	0x2
 4175 0539 1704     		.2byte	0x417
 4176 053b 83000000 		.4byte	0x83
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 144


 4177 053f 02       		.uleb128 0x2
 4178 0540 91       		.byte	0x91
 4179 0541 68       		.sleb128 -24
 4180 0542 12       		.uleb128 0x12
 4181 0543 C3080000 		.4byte	.LASF69
 4182 0547 02       		.byte	0x2
 4183 0548 1904     		.2byte	0x419
 4184 054a 83000000 		.4byte	0x83
 4185 054e 02       		.uleb128 0x2
 4186 054f 91       		.byte	0x91
 4187 0550 74       		.sleb128 -12
 4188 0551 00       		.byte	0
 4189 0552 14       		.uleb128 0x14
 4190 0553 80080000 		.4byte	.LASF70
 4191 0557 02       		.byte	0x2
 4192 0558 3304     		.2byte	0x433
 4193 055a 83000000 		.4byte	0x83
 4194 055e 00000000 		.4byte	.LFB23
 4195 0562 20000000 		.4byte	.LFE23-.LFB23
 4196 0566 01       		.uleb128 0x1
 4197 0567 9C       		.byte	0x9c
 4198 0568 7C050000 		.4byte	0x57c
 4199 056c 11       		.uleb128 0x11
 4200 056d 65000000 		.4byte	.LASF67
 4201 0571 02       		.byte	0x2
 4202 0572 3304     		.2byte	0x433
 4203 0574 83000000 		.4byte	0x83
 4204 0578 02       		.uleb128 0x2
 4205 0579 91       		.byte	0x91
 4206 057a 7C       		.sleb128 -4
 4207 057b 00       		.byte	0
 4208 057c 16       		.uleb128 0x16
 4209 057d 35080000 		.4byte	.LASF71
 4210 0581 02       		.byte	0x2
 4211 0582 5004     		.2byte	0x450
 4212 0584 00000000 		.4byte	.LFB24
 4213 0588 68000000 		.4byte	.LFE24-.LFB24
 4214 058c 01       		.uleb128 0x1
 4215 058d 9C       		.byte	0x9c
 4216 058e C0050000 		.4byte	0x5c0
 4217 0592 11       		.uleb128 0x11
 4218 0593 65000000 		.4byte	.LASF67
 4219 0597 02       		.byte	0x2
 4220 0598 5004     		.2byte	0x450
 4221 059a 83000000 		.4byte	0x83
 4222 059e 02       		.uleb128 0x2
 4223 059f 91       		.byte	0x91
 4224 05a0 6C       		.sleb128 -20
 4225 05a1 11       		.uleb128 0x11
 4226 05a2 F3010000 		.4byte	.LASF72
 4227 05a6 02       		.byte	0x2
 4228 05a7 5004     		.2byte	0x450
 4229 05a9 83000000 		.4byte	0x83
 4230 05ad 02       		.uleb128 0x2
 4231 05ae 91       		.byte	0x91
 4232 05af 68       		.sleb128 -24
 4233 05b0 12       		.uleb128 0x12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 145


 4234 05b1 C3080000 		.4byte	.LASF69
 4235 05b5 02       		.byte	0x2
 4236 05b6 5204     		.2byte	0x452
 4237 05b8 83000000 		.4byte	0x83
 4238 05bc 02       		.uleb128 0x2
 4239 05bd 91       		.byte	0x91
 4240 05be 74       		.sleb128 -12
 4241 05bf 00       		.byte	0
 4242 05c0 10       		.uleb128 0x10
 4243 05c1 FD020000 		.4byte	.LASF73
 4244 05c5 02       		.byte	0x2
 4245 05c6 7104     		.2byte	0x471
 4246 05c8 83000000 		.4byte	0x83
 4247 05cc 00000000 		.4byte	.LFB25
 4248 05d0 40000000 		.4byte	.LFE25-.LFB25
 4249 05d4 01       		.uleb128 0x1
 4250 05d5 9C       		.byte	0x9c
 4251 05d6 EA050000 		.4byte	0x5ea
 4252 05da 11       		.uleb128 0x11
 4253 05db 65000000 		.4byte	.LASF67
 4254 05df 02       		.byte	0x2
 4255 05e0 7104     		.2byte	0x471
 4256 05e2 83000000 		.4byte	0x83
 4257 05e6 02       		.uleb128 0x2
 4258 05e7 91       		.byte	0x91
 4259 05e8 74       		.sleb128 -12
 4260 05e9 00       		.byte	0
 4261 05ea 16       		.uleb128 0x16
 4262 05eb C0020000 		.4byte	.LASF74
 4263 05ef 02       		.byte	0x2
 4264 05f0 9A04     		.2byte	0x49a
 4265 05f2 00000000 		.4byte	.LFB26
 4266 05f6 5C000000 		.4byte	.LFE26-.LFB26
 4267 05fa 01       		.uleb128 0x1
 4268 05fb 9C       		.byte	0x9c
 4269 05fc 10060000 		.4byte	0x610
 4270 0600 11       		.uleb128 0x11
 4271 0601 EC020000 		.4byte	.LASF75
 4272 0605 02       		.byte	0x2
 4273 0606 9A04     		.2byte	0x49a
 4274 0608 83000000 		.4byte	0x83
 4275 060c 02       		.uleb128 0x2
 4276 060d 91       		.byte	0x91
 4277 060e 74       		.sleb128 -12
 4278 060f 00       		.byte	0
 4279 0610 16       		.uleb128 0x16
 4280 0611 37070000 		.4byte	.LASF76
 4281 0615 02       		.byte	0x2
 4282 0616 CA04     		.2byte	0x4ca
 4283 0618 00000000 		.4byte	.LFB27
 4284 061c 68000000 		.4byte	.LFE27-.LFB27
 4285 0620 01       		.uleb128 0x1
 4286 0621 9C       		.byte	0x9c
 4287 0622 36060000 		.4byte	0x636
 4288 0626 11       		.uleb128 0x11
 4289 0627 EC020000 		.4byte	.LASF75
 4290 062b 02       		.byte	0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 146


 4291 062c CA04     		.2byte	0x4ca
 4292 062e 83000000 		.4byte	0x83
 4293 0632 02       		.uleb128 0x2
 4294 0633 91       		.byte	0x91
 4295 0634 74       		.sleb128 -12
 4296 0635 00       		.byte	0
 4297 0636 16       		.uleb128 0x16
 4298 0637 4D080000 		.4byte	.LASF77
 4299 063b 02       		.byte	0x2
 4300 063c 0505     		.2byte	0x505
 4301 063e 00000000 		.4byte	.LFB28
 4302 0642 54000000 		.4byte	.LFE28-.LFB28
 4303 0646 01       		.uleb128 0x1
 4304 0647 9C       		.byte	0x9c
 4305 0648 7A060000 		.4byte	0x67a
 4306 064c 11       		.uleb128 0x11
 4307 064d EE080000 		.4byte	.LASF78
 4308 0651 02       		.byte	0x2
 4309 0652 0505     		.2byte	0x505
 4310 0654 83000000 		.4byte	0x83
 4311 0658 02       		.uleb128 0x2
 4312 0659 91       		.byte	0x91
 4313 065a 6C       		.sleb128 -20
 4314 065b 12       		.uleb128 0x12
 4315 065c C3080000 		.4byte	.LASF69
 4316 0660 02       		.byte	0x2
 4317 0661 0705     		.2byte	0x507
 4318 0663 83000000 		.4byte	0x83
 4319 0667 02       		.uleb128 0x2
 4320 0668 91       		.byte	0x91
 4321 0669 70       		.sleb128 -16
 4322 066a 12       		.uleb128 0x12
 4323 066b A0020000 		.4byte	.LASF79
 4324 066f 02       		.byte	0x2
 4325 0670 0805     		.2byte	0x508
 4326 0672 83000000 		.4byte	0x83
 4327 0676 02       		.uleb128 0x2
 4328 0677 91       		.byte	0x91
 4329 0678 74       		.sleb128 -12
 4330 0679 00       		.byte	0
 4331 067a 18       		.uleb128 0x18
 4332 067b 8A000000 		.4byte	.LASF81
 4333 067f 02       		.byte	0x2
 4334 0680 2405     		.2byte	0x524
 4335 0682 83000000 		.4byte	0x83
 4336 0686 00000000 		.4byte	.LFB29
 4337 068a 14000000 		.4byte	.LFE29-.LFB29
 4338 068e 01       		.uleb128 0x1
 4339 068f 9C       		.byte	0x9c
 4340 0690 16       		.uleb128 0x16
 4341 0691 8F020000 		.4byte	.LASF82
 4342 0695 02       		.byte	0x2
 4343 0696 3805     		.2byte	0x538
 4344 0698 00000000 		.4byte	.LFB30
 4345 069c 8C000000 		.4byte	.LFE30-.LFB30
 4346 06a0 01       		.uleb128 0x1
 4347 06a1 9C       		.byte	0x9c
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 147


 4348 06a2 D4060000 		.4byte	0x6d4
 4349 06a6 11       		.uleb128 0x11
 4350 06a7 65000000 		.4byte	.LASF67
 4351 06ab 02       		.byte	0x2
 4352 06ac 3805     		.2byte	0x538
 4353 06ae 83000000 		.4byte	0x83
 4354 06b2 02       		.uleb128 0x2
 4355 06b3 91       		.byte	0x91
 4356 06b4 6C       		.sleb128 -20
 4357 06b5 11       		.uleb128 0x11
 4358 06b6 66050000 		.4byte	.LASF83
 4359 06ba 02       		.byte	0x2
 4360 06bb 3805     		.2byte	0x538
 4361 06bd 83000000 		.4byte	0x83
 4362 06c1 02       		.uleb128 0x2
 4363 06c2 91       		.byte	0x91
 4364 06c3 68       		.sleb128 -24
 4365 06c4 12       		.uleb128 0x12
 4366 06c5 DB010000 		.4byte	.LASF84
 4367 06c9 02       		.byte	0x2
 4368 06ca 3A05     		.2byte	0x53a
 4369 06cc 83000000 		.4byte	0x83
 4370 06d0 02       		.uleb128 0x2
 4371 06d1 91       		.byte	0x91
 4372 06d2 74       		.sleb128 -12
 4373 06d3 00       		.byte	0
 4374 06d4 16       		.uleb128 0x16
 4375 06d5 37040000 		.4byte	.LASF85
 4376 06d9 02       		.byte	0x2
 4377 06da 5F05     		.2byte	0x55f
 4378 06dc 00000000 		.4byte	.LFB31
 4379 06e0 44000000 		.4byte	.LFE31-.LFB31
 4380 06e4 01       		.uleb128 0x1
 4381 06e5 9C       		.byte	0x9c
 4382 06e6 09070000 		.4byte	0x709
 4383 06ea 11       		.uleb128 0x11
 4384 06eb CD010000 		.4byte	.LASF86
 4385 06ef 02       		.byte	0x2
 4386 06f0 5F05     		.2byte	0x55f
 4387 06f2 83000000 		.4byte	0x83
 4388 06f6 02       		.uleb128 0x2
 4389 06f7 91       		.byte	0x91
 4390 06f8 6C       		.sleb128 -20
 4391 06f9 12       		.uleb128 0x12
 4392 06fa C3080000 		.4byte	.LASF69
 4393 06fe 02       		.byte	0x2
 4394 06ff 6105     		.2byte	0x561
 4395 0701 83000000 		.4byte	0x83
 4396 0705 02       		.uleb128 0x2
 4397 0706 91       		.byte	0x91
 4398 0707 74       		.sleb128 -12
 4399 0708 00       		.byte	0
 4400 0709 18       		.uleb128 0x18
 4401 070a 0F090000 		.4byte	.LASF87
 4402 070e 02       		.byte	0x2
 4403 070f 7605     		.2byte	0x576
 4404 0711 83000000 		.4byte	0x83
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 148


 4405 0715 00000000 		.4byte	.LFB32
 4406 0719 14000000 		.4byte	.LFE32-.LFB32
 4407 071d 01       		.uleb128 0x1
 4408 071e 9C       		.byte	0x9c
 4409 071f 10       		.uleb128 0x10
 4410 0720 55050000 		.4byte	.LASF88
 4411 0724 02       		.byte	0x2
 4412 0725 8805     		.2byte	0x588
 4413 0727 83000000 		.4byte	0x83
 4414 072b 00000000 		.4byte	.LFB33
 4415 072f 3C000000 		.4byte	.LFE33-.LFB33
 4416 0733 01       		.uleb128 0x1
 4417 0734 9C       		.byte	0x9c
 4418 0735 49070000 		.4byte	0x749
 4419 0739 11       		.uleb128 0x11
 4420 073a 65000000 		.4byte	.LASF67
 4421 073e 02       		.byte	0x2
 4422 073f 8805     		.2byte	0x588
 4423 0741 83000000 		.4byte	0x83
 4424 0745 02       		.uleb128 0x2
 4425 0746 91       		.byte	0x91
 4426 0747 74       		.sleb128 -12
 4427 0748 00       		.byte	0
 4428 0749 10       		.uleb128 0x10
 4429 074a 04080000 		.4byte	.LASF89
 4430 074e 02       		.byte	0x2
 4431 074f 9E05     		.2byte	0x59e
 4432 0751 83000000 		.4byte	0x83
 4433 0755 00000000 		.4byte	.LFB34
 4434 0759 50000000 		.4byte	.LFE34-.LFB34
 4435 075d 01       		.uleb128 0x1
 4436 075e 9C       		.byte	0x9c
 4437 075f 82070000 		.4byte	0x782
 4438 0763 11       		.uleb128 0x11
 4439 0764 65000000 		.4byte	.LASF67
 4440 0768 02       		.byte	0x2
 4441 0769 9E05     		.2byte	0x59e
 4442 076b 83000000 		.4byte	0x83
 4443 076f 02       		.uleb128 0x2
 4444 0770 91       		.byte	0x91
 4445 0771 6C       		.sleb128 -20
 4446 0772 12       		.uleb128 0x12
 4447 0773 DB010000 		.4byte	.LASF84
 4448 0777 02       		.byte	0x2
 4449 0778 A005     		.2byte	0x5a0
 4450 077a 83000000 		.4byte	0x83
 4451 077e 02       		.uleb128 0x2
 4452 077f 91       		.byte	0x91
 4453 0780 74       		.sleb128 -12
 4454 0781 00       		.byte	0
 4455 0782 18       		.uleb128 0x18
 4456 0783 6A070000 		.4byte	.LASF90
 4457 0787 02       		.byte	0x2
 4458 0788 C905     		.2byte	0x5c9
 4459 078a 83000000 		.4byte	0x83
 4460 078e 00000000 		.4byte	.LFB35
 4461 0792 14000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 149


 4462 0796 01       		.uleb128 0x1
 4463 0797 9C       		.byte	0x9c
 4464 0798 16       		.uleb128 0x16
 4465 0799 E0050000 		.4byte	.LASF91
 4466 079d 02       		.byte	0x2
 4467 079e E605     		.2byte	0x5e6
 4468 07a0 00000000 		.4byte	.LFB36
 4469 07a4 6C000000 		.4byte	.LFE36-.LFB36
 4470 07a8 01       		.uleb128 0x1
 4471 07a9 9C       		.byte	0x9c
 4472 07aa DC070000 		.4byte	0x7dc
 4473 07ae 11       		.uleb128 0x11
 4474 07af EC020000 		.4byte	.LASF75
 4475 07b3 02       		.byte	0x2
 4476 07b4 E605     		.2byte	0x5e6
 4477 07b6 83000000 		.4byte	0x83
 4478 07ba 02       		.uleb128 0x2
 4479 07bb 91       		.byte	0x91
 4480 07bc 6C       		.sleb128 -20
 4481 07bd 12       		.uleb128 0x12
 4482 07be 7D010000 		.4byte	.LASF28
 4483 07c2 02       		.byte	0x2
 4484 07c3 E805     		.2byte	0x5e8
 4485 07c5 6B000000 		.4byte	0x6b
 4486 07c9 02       		.uleb128 0x2
 4487 07ca 91       		.byte	0x91
 4488 07cb 73       		.sleb128 -13
 4489 07cc 12       		.uleb128 0x12
 4490 07cd B6080000 		.4byte	.LASF92
 4491 07d1 02       		.byte	0x2
 4492 07d2 E905     		.2byte	0x5e9
 4493 07d4 83000000 		.4byte	0x83
 4494 07d8 02       		.uleb128 0x2
 4495 07d9 91       		.byte	0x91
 4496 07da 74       		.sleb128 -12
 4497 07db 00       		.byte	0
 4498 07dc 19       		.uleb128 0x19
 4499 07dd B6050000 		.4byte	.LASF93
 4500 07e1 02       		.byte	0x2
 4501 07e2 2006     		.2byte	0x620
 4502 07e4 00000000 		.4byte	.LFB37
 4503 07e8 30000000 		.4byte	.LFE37-.LFB37
 4504 07ec 01       		.uleb128 0x1
 4505 07ed 9C       		.byte	0x9c
 4506 07ee 02080000 		.4byte	0x802
 4507 07f2 11       		.uleb128 0x11
 4508 07f3 38020000 		.4byte	.LASF94
 4509 07f7 02       		.byte	0x2
 4510 07f8 2006     		.2byte	0x620
 4511 07fa 83000000 		.4byte	0x83
 4512 07fe 02       		.uleb128 0x2
 4513 07ff 91       		.byte	0x91
 4514 0800 7C       		.sleb128 -4
 4515 0801 00       		.byte	0
 4516 0802 10       		.uleb128 0x10
 4517 0803 CF020000 		.4byte	.LASF95
 4518 0807 02       		.byte	0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 150


 4519 0808 3A06     		.2byte	0x63a
 4520 080a FD000000 		.4byte	0xfd
 4521 080e 00000000 		.4byte	.LFB38
 4522 0812 3C000000 		.4byte	.LFE38-.LFB38
 4523 0816 01       		.uleb128 0x1
 4524 0817 9C       		.byte	0x9c
 4525 0818 4A080000 		.4byte	0x84a
 4526 081c 11       		.uleb128 0x11
 4527 081d 65000000 		.4byte	.LASF67
 4528 0821 02       		.byte	0x2
 4529 0822 3A06     		.2byte	0x63a
 4530 0824 83000000 		.4byte	0x83
 4531 0828 02       		.uleb128 0x2
 4532 0829 91       		.byte	0x91
 4533 082a 6C       		.sleb128 -20
 4534 082b 11       		.uleb128 0x11
 4535 082c 74010000 		.4byte	.LASF96
 4536 0830 02       		.byte	0x2
 4537 0831 3A06     		.2byte	0x63a
 4538 0833 FD000000 		.4byte	0xfd
 4539 0837 02       		.uleb128 0x2
 4540 0838 91       		.byte	0x91
 4541 0839 68       		.sleb128 -24
 4542 083a 12       		.uleb128 0x12
 4543 083b 82020000 		.4byte	.LASF97
 4544 083f 02       		.byte	0x2
 4545 0840 3C06     		.2byte	0x63c
 4546 0842 FD000000 		.4byte	0xfd
 4547 0846 02       		.uleb128 0x2
 4548 0847 91       		.byte	0x91
 4549 0848 74       		.sleb128 -12
 4550 0849 00       		.byte	0
 4551 084a 10       		.uleb128 0x10
 4552 084b E4030000 		.4byte	.LASF98
 4553 084f 02       		.byte	0x2
 4554 0850 5806     		.2byte	0x658
 4555 0852 FD000000 		.4byte	0xfd
 4556 0856 00000000 		.4byte	.LFB39
 4557 085a 30000000 		.4byte	.LFE39-.LFB39
 4558 085e 01       		.uleb128 0x1
 4559 085f 9C       		.byte	0x9c
 4560 0860 83080000 		.4byte	0x883
 4561 0864 11       		.uleb128 0x11
 4562 0865 65000000 		.4byte	.LASF67
 4563 0869 02       		.byte	0x2
 4564 086a 5806     		.2byte	0x658
 4565 086c 83000000 		.4byte	0x83
 4566 0870 02       		.uleb128 0x2
 4567 0871 91       		.byte	0x91
 4568 0872 6C       		.sleb128 -20
 4569 0873 12       		.uleb128 0x12
 4570 0874 44030000 		.4byte	.LASF99
 4571 0878 02       		.byte	0x2
 4572 0879 5A06     		.2byte	0x65a
 4573 087b FD000000 		.4byte	0xfd
 4574 087f 02       		.uleb128 0x2
 4575 0880 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 151


 4576 0881 74       		.sleb128 -12
 4577 0882 00       		.byte	0
 4578 0883 16       		.uleb128 0x16
 4579 0884 96030000 		.4byte	.LASF100
 4580 0888 02       		.byte	0x2
 4581 0889 7506     		.2byte	0x675
 4582 088b 00000000 		.4byte	.LFB40
 4583 088f 4C000000 		.4byte	.LFE40-.LFB40
 4584 0893 01       		.uleb128 0x1
 4585 0894 9C       		.byte	0x9c
 4586 0895 A9080000 		.4byte	0x8a9
 4587 0899 11       		.uleb128 0x11
 4588 089a 65000000 		.4byte	.LASF67
 4589 089e 02       		.byte	0x2
 4590 089f 7506     		.2byte	0x675
 4591 08a1 83000000 		.4byte	0x83
 4592 08a5 02       		.uleb128 0x2
 4593 08a6 91       		.byte	0x91
 4594 08a7 74       		.sleb128 -12
 4595 08a8 00       		.byte	0
 4596 08a9 16       		.uleb128 0x16
 4597 08aa DF070000 		.4byte	.LASF101
 4598 08ae 02       		.byte	0x2
 4599 08af 8C06     		.2byte	0x68c
 4600 08b1 00000000 		.4byte	.LFB41
 4601 08b5 38000000 		.4byte	.LFE41-.LFB41
 4602 08b9 01       		.uleb128 0x1
 4603 08ba 9C       		.byte	0x9c
 4604 08bb CF080000 		.4byte	0x8cf
 4605 08bf 11       		.uleb128 0x11
 4606 08c0 65000000 		.4byte	.LASF67
 4607 08c4 02       		.byte	0x2
 4608 08c5 8C06     		.2byte	0x68c
 4609 08c7 83000000 		.4byte	0x83
 4610 08cb 02       		.uleb128 0x2
 4611 08cc 91       		.byte	0x91
 4612 08cd 74       		.sleb128 -12
 4613 08ce 00       		.byte	0
 4614 08cf 17       		.uleb128 0x17
 4615 08d0 03090000 		.4byte	.LASF102
 4616 08d4 02       		.byte	0x2
 4617 08d5 AD06     		.2byte	0x6ad
 4618 08d7 00000000 		.4byte	.LFB42
 4619 08db E8000000 		.4byte	.LFE42-.LFB42
 4620 08df 01       		.uleb128 0x1
 4621 08e0 9C       		.byte	0x9c
 4622 08e1 16       		.uleb128 0x16
 4623 08e2 5C040000 		.4byte	.LASF103
 4624 08e6 02       		.byte	0x2
 4625 08e7 EE06     		.2byte	0x6ee
 4626 08e9 00000000 		.4byte	.LFB43
 4627 08ed 86000000 		.4byte	.LFE43-.LFB43
 4628 08f1 01       		.uleb128 0x1
 4629 08f2 9C       		.byte	0x9c
 4630 08f3 07090000 		.4byte	0x907
 4631 08f7 11       		.uleb128 0x11
 4632 08f8 65000000 		.4byte	.LASF67
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 152


 4633 08fc 02       		.byte	0x2
 4634 08fd EE06     		.2byte	0x6ee
 4635 08ff 83000000 		.4byte	0x83
 4636 0903 02       		.uleb128 0x2
 4637 0904 91       		.byte	0x91
 4638 0905 74       		.sleb128 -12
 4639 0906 00       		.byte	0
 4640 0907 1A       		.uleb128 0x1a
 4641 0908 70000000 		.4byte	.LASF124
 4642 090c 02       		.byte	0x2
 4643 090d 3007     		.2byte	0x730
 4644 090f 00000000 		.4byte	.LFB44
 4645 0913 94000000 		.4byte	.LFE44-.LFB44
 4646 0917 01       		.uleb128 0x1
 4647 0918 9C       		.byte	0x9c
 4648 0919 3F090000 		.4byte	0x93f
 4649 091d 12       		.uleb128 0x12
 4650 091e 39030000 		.4byte	.LASF104
 4651 0922 02       		.byte	0x2
 4652 0923 3207     		.2byte	0x732
 4653 0925 83000000 		.4byte	0x83
 4654 0929 02       		.uleb128 0x2
 4655 092a 91       		.byte	0x91
 4656 092b 74       		.sleb128 -12
 4657 092c 12       		.uleb128 0x12
 4658 092d FF060000 		.4byte	.LASF105
 4659 0931 02       		.byte	0x2
 4660 0932 3307     		.2byte	0x733
 4661 0934 83000000 		.4byte	0x83
 4662 0938 05       		.uleb128 0x5
 4663 0939 03       		.byte	0x3
 4664 093a 24000000 		.4byte	lfclkPosedgeEnabledWdtCounter.5072
 4665 093e 00       		.byte	0
 4666 093f 1B       		.uleb128 0x1b
 4667 0940 7A030000 		.4byte	.LASF106
 4668 0944 02       		.byte	0x2
 4669 0945 6607     		.2byte	0x766
 4670 0947 00000000 		.4byte	.LFB45
 4671 094b 38000000 		.4byte	.LFE45-.LFB45
 4672 094f 01       		.uleb128 0x1
 4673 0950 9C       		.byte	0x9c
 4674 0951 16       		.uleb128 0x16
 4675 0952 17060000 		.4byte	.LASF107
 4676 0956 02       		.byte	0x2
 4677 0957 D70B     		.2byte	0xbd7
 4678 0959 00000000 		.4byte	.LFB46
 4679 095d 64000000 		.4byte	.LFE46-.LFB46
 4680 0961 01       		.uleb128 0x1
 4681 0962 9C       		.byte	0x9c
 4682 0963 B3090000 		.4byte	0x9b3
 4683 0967 11       		.uleb128 0x11
 4684 0968 65000000 		.4byte	.LASF67
 4685 096c 02       		.byte	0x2
 4686 096d D70B     		.2byte	0xbd7
 4687 096f 83000000 		.4byte	0x83
 4688 0973 02       		.uleb128 0x2
 4689 0974 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 153


 4690 0975 6C       		.sleb128 -20
 4691 0976 11       		.uleb128 0x11
 4692 0977 2D070000 		.4byte	.LASF108
 4693 097b 02       		.byte	0x2
 4694 097c D70B     		.2byte	0xbd7
 4695 097e F2000000 		.4byte	0xf2
 4696 0982 02       		.uleb128 0x2
 4697 0983 91       		.byte	0x91
 4698 0984 6B       		.sleb128 -21
 4699 0985 11       		.uleb128 0x11
 4700 0986 1D070000 		.4byte	.LASF109
 4701 098a 02       		.byte	0x2
 4702 098b D70B     		.2byte	0xbd7
 4703 098d 83000000 		.4byte	0x83
 4704 0991 02       		.uleb128 0x2
 4705 0992 91       		.byte	0x91
 4706 0993 64       		.sleb128 -28
 4707 0994 12       		.uleb128 0x12
 4708 0995 DB010000 		.4byte	.LASF84
 4709 0999 02       		.byte	0x2
 4710 099a D90B     		.2byte	0xbd9
 4711 099c 83000000 		.4byte	0x83
 4712 09a0 02       		.uleb128 0x2
 4713 09a1 91       		.byte	0x91
 4714 09a2 74       		.sleb128 -12
 4715 09a3 12       		.uleb128 0x12
 4716 09a4 6F030000 		.4byte	.LASF110
 4717 09a8 02       		.byte	0x2
 4718 09a9 DA0B     		.2byte	0xbda
 4719 09ab 83000000 		.4byte	0x83
 4720 09af 02       		.uleb128 0x2
 4721 09b0 91       		.byte	0x91
 4722 09b1 70       		.sleb128 -16
 4723 09b2 00       		.byte	0
 4724 09b3 16       		.uleb128 0x16
 4725 09b4 FD050000 		.4byte	.LASF111
 4726 09b8 02       		.byte	0x2
 4727 09b9 580C     		.2byte	0xc58
 4728 09bb 00000000 		.4byte	.LFB47
 4729 09bf AC000000 		.4byte	.LFE47-.LFB47
 4730 09c3 01       		.uleb128 0x1
 4731 09c4 9C       		.byte	0x9c
 4732 09c5 060A0000 		.4byte	0xa06
 4733 09c9 11       		.uleb128 0x11
 4734 09ca 65000000 		.4byte	.LASF67
 4735 09ce 02       		.byte	0x2
 4736 09cf 580C     		.2byte	0xc58
 4737 09d1 83000000 		.4byte	0x83
 4738 09d5 02       		.uleb128 0x2
 4739 09d6 91       		.byte	0x91
 4740 09d7 6C       		.sleb128 -20
 4741 09d8 11       		.uleb128 0x11
 4742 09d9 2D070000 		.4byte	.LASF108
 4743 09dd 02       		.byte	0x2
 4744 09de 580C     		.2byte	0xc58
 4745 09e0 F2000000 		.4byte	0xf2
 4746 09e4 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 154


 4747 09e5 91       		.byte	0x91
 4748 09e6 6B       		.sleb128 -21
 4749 09e7 11       		.uleb128 0x11
 4750 09e8 66050000 		.4byte	.LASF83
 4751 09ec 02       		.byte	0x2
 4752 09ed 580C     		.2byte	0xc58
 4753 09ef 83000000 		.4byte	0x83
 4754 09f3 02       		.uleb128 0x2
 4755 09f4 91       		.byte	0x91
 4756 09f5 64       		.sleb128 -28
 4757 09f6 12       		.uleb128 0x12
 4758 09f7 09050000 		.4byte	.LASF112
 4759 09fb 02       		.byte	0x2
 4760 09fc 5A0C     		.2byte	0xc5a
 4761 09fe 83000000 		.4byte	0x83
 4762 0a02 02       		.uleb128 0x2
 4763 0a03 91       		.byte	0x91
 4764 0a04 74       		.sleb128 -12
 4765 0a05 00       		.byte	0
 4766 0a06 0E       		.uleb128 0xe
 4767 0a07 F2040000 		.4byte	.LASF113
 4768 0a0b 02       		.byte	0x2
 4769 0a0c 1D       		.byte	0x1d
 4770 0a0d BC000000 		.4byte	0xbc
 4771 0a11 05       		.uleb128 0x5
 4772 0a12 03       		.byte	0x3
 4773 0a13 00000000 		.4byte	defaultIloTrimRegValue
 4774 0a17 0E       		.uleb128 0xe
 4775 0a18 D0000000 		.4byte	.LASF114
 4776 0a1c 02       		.byte	0x2
 4777 0a1d 22       		.byte	0x22
 4778 0a1e 83000000 		.4byte	0x83
 4779 0a22 05       		.uleb128 0x5
 4780 0a23 03       		.byte	0x3
 4781 0a24 00000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 4782 0a28 0E       		.uleb128 0xe
 4783 0a29 D2080000 		.4byte	.LASF115
 4784 0a2d 02       		.byte	0x2
 4785 0a2e 23       		.byte	0x23
 4786 0a2f 83000000 		.4byte	0x83
 4787 0a33 05       		.uleb128 0x5
 4788 0a34 03       		.byte	0x3
 4789 0a35 04000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 4790 0a39 0E       		.uleb128 0xe
 4791 0a3a 22080000 		.4byte	.LASF116
 4792 0a3e 02       		.byte	0x2
 4793 0a3f 25       		.byte	0x25
 4794 0a40 CD000000 		.4byte	0xcd
 4795 0a44 05       		.uleb128 0x5
 4796 0a45 03       		.byte	0x3
 4797 0a46 08000000 		.4byte	disableServicedIsr
 4798 0a4a 0E       		.uleb128 0xe
 4799 0a4b B5020000 		.4byte	.LASF117
 4800 0a4f 02       		.byte	0x2
 4801 0a50 26       		.byte	0x26
 4802 0a51 CD000000 		.4byte	0xcd
 4803 0a55 05       		.uleb128 0x5
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 155


 4804 0a56 03       		.byte	0x3
 4805 0a57 04000000 		.4byte	wdtIsrMask
 4806 0a5b 1C       		.uleb128 0x1c
 4807 0a5c 6B0A0000 		.4byte	0xa6b
 4808 0a60 6B0A0000 		.4byte	0xa6b
 4809 0a64 1D       		.uleb128 0x1d
 4810 0a65 0F010000 		.4byte	0x10f
 4811 0a69 02       		.byte	0x2
 4812 0a6a 00       		.byte	0
 4813 0a6b 1E       		.uleb128 0x1e
 4814 0a6c 83000000 		.4byte	0x83
 4815 0a70 0E       		.uleb128 0xe
 4816 0a71 13000000 		.4byte	.LASF118
 4817 0a75 02       		.byte	0x2
 4818 0a76 2A       		.byte	0x2a
 4819 0a77 810A0000 		.4byte	0xa81
 4820 0a7b 05       		.uleb128 0x5
 4821 0a7c 03       		.byte	0x3
 4822 0a7d 00000000 		.4byte	counterIntMaskTbl
 4823 0a81 1E       		.uleb128 0x1e
 4824 0a82 5B0A0000 		.4byte	0xa5b
 4825 0a86 1C       		.uleb128 0x1c
 4826 0a87 FD000000 		.4byte	0xfd
 4827 0a8b 960A0000 		.4byte	0xa96
 4828 0a8f 1D       		.uleb128 0x1d
 4829 0a90 0F010000 		.4byte	0x10f
 4830 0a94 02       		.byte	0x2
 4831 0a95 00       		.byte	0
 4832 0a96 0E       		.uleb128 0xe
 4833 0a97 25000000 		.4byte	.LASF119
 4834 0a9b 02       		.byte	0x2
 4835 0a9c 44       		.byte	0x44
 4836 0a9d 860A0000 		.4byte	0xa86
 4837 0aa1 05       		.uleb128 0x5
 4838 0aa2 03       		.byte	0x3
 4839 0aa3 0C000000 		.4byte	cySysWdtCallback
 4840 0aa7 1F       		.uleb128 0x1f
 4841 0aa8 A8050000 		.4byte	.LASF125
 4842 0aac 04       		.byte	0x4
 4843 0aad D4       		.byte	0xd4
 4844 0aae 83000000 		.4byte	0x83
 4845 0ab2 00       		.byte	0
 4846              		.section	.debug_abbrev,"",%progbits
 4847              	.Ldebug_abbrev0:
 4848 0000 01       		.uleb128 0x1
 4849 0001 11       		.uleb128 0x11
 4850 0002 01       		.byte	0x1
 4851 0003 25       		.uleb128 0x25
 4852 0004 0E       		.uleb128 0xe
 4853 0005 13       		.uleb128 0x13
 4854 0006 0B       		.uleb128 0xb
 4855 0007 03       		.uleb128 0x3
 4856 0008 0E       		.uleb128 0xe
 4857 0009 1B       		.uleb128 0x1b
 4858 000a 0E       		.uleb128 0xe
 4859 000b 55       		.uleb128 0x55
 4860 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 156


 4861 000d 11       		.uleb128 0x11
 4862 000e 01       		.uleb128 0x1
 4863 000f 10       		.uleb128 0x10
 4864 0010 17       		.uleb128 0x17
 4865 0011 00       		.byte	0
 4866 0012 00       		.byte	0
 4867 0013 02       		.uleb128 0x2
 4868 0014 24       		.uleb128 0x24
 4869 0015 00       		.byte	0
 4870 0016 0B       		.uleb128 0xb
 4871 0017 0B       		.uleb128 0xb
 4872 0018 3E       		.uleb128 0x3e
 4873 0019 0B       		.uleb128 0xb
 4874 001a 03       		.uleb128 0x3
 4875 001b 0E       		.uleb128 0xe
 4876 001c 00       		.byte	0
 4877 001d 00       		.byte	0
 4878 001e 03       		.uleb128 0x3
 4879 001f 24       		.uleb128 0x24
 4880 0020 00       		.byte	0
 4881 0021 0B       		.uleb128 0xb
 4882 0022 0B       		.uleb128 0xb
 4883 0023 3E       		.uleb128 0x3e
 4884 0024 0B       		.uleb128 0xb
 4885 0025 03       		.uleb128 0x3
 4886 0026 08       		.uleb128 0x8
 4887 0027 00       		.byte	0
 4888 0028 00       		.byte	0
 4889 0029 04       		.uleb128 0x4
 4890 002a 16       		.uleb128 0x16
 4891 002b 00       		.byte	0
 4892 002c 03       		.uleb128 0x3
 4893 002d 0E       		.uleb128 0xe
 4894 002e 3A       		.uleb128 0x3a
 4895 002f 0B       		.uleb128 0xb
 4896 0030 3B       		.uleb128 0x3b
 4897 0031 05       		.uleb128 0x5
 4898 0032 49       		.uleb128 0x49
 4899 0033 13       		.uleb128 0x13
 4900 0034 00       		.byte	0
 4901 0035 00       		.byte	0
 4902 0036 05       		.uleb128 0x5
 4903 0037 35       		.uleb128 0x35
 4904 0038 00       		.byte	0
 4905 0039 49       		.uleb128 0x49
 4906 003a 13       		.uleb128 0x13
 4907 003b 00       		.byte	0
 4908 003c 00       		.byte	0
 4909 003d 06       		.uleb128 0x6
 4910 003e 0F       		.uleb128 0xf
 4911 003f 00       		.byte	0
 4912 0040 0B       		.uleb128 0xb
 4913 0041 0B       		.uleb128 0xb
 4914 0042 49       		.uleb128 0x49
 4915 0043 13       		.uleb128 0x13
 4916 0044 00       		.byte	0
 4917 0045 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 157


 4918 0046 07       		.uleb128 0x7
 4919 0047 15       		.uleb128 0x15
 4920 0048 00       		.byte	0
 4921 0049 27       		.uleb128 0x27
 4922 004a 19       		.uleb128 0x19
 4923 004b 00       		.byte	0
 4924 004c 00       		.byte	0
 4925 004d 08       		.uleb128 0x8
 4926 004e 04       		.uleb128 0x4
 4927 004f 01       		.byte	0x1
 4928 0050 0B       		.uleb128 0xb
 4929 0051 0B       		.uleb128 0xb
 4930 0052 49       		.uleb128 0x49
 4931 0053 13       		.uleb128 0x13
 4932 0054 3A       		.uleb128 0x3a
 4933 0055 0B       		.uleb128 0xb
 4934 0056 3B       		.uleb128 0x3b
 4935 0057 0B       		.uleb128 0xb
 4936 0058 01       		.uleb128 0x1
 4937 0059 13       		.uleb128 0x13
 4938 005a 00       		.byte	0
 4939 005b 00       		.byte	0
 4940 005c 09       		.uleb128 0x9
 4941 005d 28       		.uleb128 0x28
 4942 005e 00       		.byte	0
 4943 005f 03       		.uleb128 0x3
 4944 0060 0E       		.uleb128 0xe
 4945 0061 1C       		.uleb128 0x1c
 4946 0062 0B       		.uleb128 0xb
 4947 0063 00       		.byte	0
 4948 0064 00       		.byte	0
 4949 0065 0A       		.uleb128 0xa
 4950 0066 16       		.uleb128 0x16
 4951 0067 00       		.byte	0
 4952 0068 03       		.uleb128 0x3
 4953 0069 0E       		.uleb128 0xe
 4954 006a 3A       		.uleb128 0x3a
 4955 006b 0B       		.uleb128 0xb
 4956 006c 3B       		.uleb128 0x3b
 4957 006d 0B       		.uleb128 0xb
 4958 006e 49       		.uleb128 0x49
 4959 006f 13       		.uleb128 0x13
 4960 0070 00       		.byte	0
 4961 0071 00       		.byte	0
 4962 0072 0B       		.uleb128 0xb
 4963 0073 2E       		.uleb128 0x2e
 4964 0074 00       		.byte	0
 4965 0075 03       		.uleb128 0x3
 4966 0076 0E       		.uleb128 0xe
 4967 0077 3A       		.uleb128 0x3a
 4968 0078 0B       		.uleb128 0xb
 4969 0079 3B       		.uleb128 0x3b
 4970 007a 05       		.uleb128 0x5
 4971 007b 27       		.uleb128 0x27
 4972 007c 19       		.uleb128 0x19
 4973 007d 11       		.uleb128 0x11
 4974 007e 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 158


 4975 007f 12       		.uleb128 0x12
 4976 0080 06       		.uleb128 0x6
 4977 0081 40       		.uleb128 0x40
 4978 0082 18       		.uleb128 0x18
 4979 0083 9742     		.uleb128 0x2117
 4980 0085 19       		.uleb128 0x19
 4981 0086 00       		.byte	0
 4982 0087 00       		.byte	0
 4983 0088 0C       		.uleb128 0xc
 4984 0089 2E       		.uleb128 0x2e
 4985 008a 00       		.byte	0
 4986 008b 3F       		.uleb128 0x3f
 4987 008c 19       		.uleb128 0x19
 4988 008d 03       		.uleb128 0x3
 4989 008e 0E       		.uleb128 0xe
 4990 008f 3A       		.uleb128 0x3a
 4991 0090 0B       		.uleb128 0xb
 4992 0091 3B       		.uleb128 0x3b
 4993 0092 0B       		.uleb128 0xb
 4994 0093 27       		.uleb128 0x27
 4995 0094 19       		.uleb128 0x19
 4996 0095 11       		.uleb128 0x11
 4997 0096 01       		.uleb128 0x1
 4998 0097 12       		.uleb128 0x12
 4999 0098 06       		.uleb128 0x6
 5000 0099 40       		.uleb128 0x40
 5001 009a 18       		.uleb128 0x18
 5002 009b 9742     		.uleb128 0x2117
 5003 009d 19       		.uleb128 0x19
 5004 009e 00       		.byte	0
 5005 009f 00       		.byte	0
 5006 00a0 0D       		.uleb128 0xd
 5007 00a1 2E       		.uleb128 0x2e
 5008 00a2 01       		.byte	0x1
 5009 00a3 3F       		.uleb128 0x3f
 5010 00a4 19       		.uleb128 0x19
 5011 00a5 03       		.uleb128 0x3
 5012 00a6 0E       		.uleb128 0xe
 5013 00a7 3A       		.uleb128 0x3a
 5014 00a8 0B       		.uleb128 0xb
 5015 00a9 3B       		.uleb128 0x3b
 5016 00aa 0B       		.uleb128 0xb
 5017 00ab 27       		.uleb128 0x27
 5018 00ac 19       		.uleb128 0x19
 5019 00ad 11       		.uleb128 0x11
 5020 00ae 01       		.uleb128 0x1
 5021 00af 12       		.uleb128 0x12
 5022 00b0 06       		.uleb128 0x6
 5023 00b1 40       		.uleb128 0x40
 5024 00b2 18       		.uleb128 0x18
 5025 00b3 9642     		.uleb128 0x2116
 5026 00b5 19       		.uleb128 0x19
 5027 00b6 01       		.uleb128 0x1
 5028 00b7 13       		.uleb128 0x13
 5029 00b8 00       		.byte	0
 5030 00b9 00       		.byte	0
 5031 00ba 0E       		.uleb128 0xe
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 159


 5032 00bb 34       		.uleb128 0x34
 5033 00bc 00       		.byte	0
 5034 00bd 03       		.uleb128 0x3
 5035 00be 0E       		.uleb128 0xe
 5036 00bf 3A       		.uleb128 0x3a
 5037 00c0 0B       		.uleb128 0xb
 5038 00c1 3B       		.uleb128 0x3b
 5039 00c2 0B       		.uleb128 0xb
 5040 00c3 49       		.uleb128 0x49
 5041 00c4 13       		.uleb128 0x13
 5042 00c5 02       		.uleb128 0x2
 5043 00c6 18       		.uleb128 0x18
 5044 00c7 00       		.byte	0
 5045 00c8 00       		.byte	0
 5046 00c9 0F       		.uleb128 0xf
 5047 00ca 2E       		.uleb128 0x2e
 5048 00cb 01       		.byte	0x1
 5049 00cc 3F       		.uleb128 0x3f
 5050 00cd 19       		.uleb128 0x19
 5051 00ce 03       		.uleb128 0x3
 5052 00cf 0E       		.uleb128 0xe
 5053 00d0 3A       		.uleb128 0x3a
 5054 00d1 0B       		.uleb128 0xb
 5055 00d2 3B       		.uleb128 0x3b
 5056 00d3 0B       		.uleb128 0xb
 5057 00d4 27       		.uleb128 0x27
 5058 00d5 19       		.uleb128 0x19
 5059 00d6 11       		.uleb128 0x11
 5060 00d7 01       		.uleb128 0x1
 5061 00d8 12       		.uleb128 0x12
 5062 00d9 06       		.uleb128 0x6
 5063 00da 40       		.uleb128 0x40
 5064 00db 18       		.uleb128 0x18
 5065 00dc 9742     		.uleb128 0x2117
 5066 00de 19       		.uleb128 0x19
 5067 00df 01       		.uleb128 0x1
 5068 00e0 13       		.uleb128 0x13
 5069 00e1 00       		.byte	0
 5070 00e2 00       		.byte	0
 5071 00e3 10       		.uleb128 0x10
 5072 00e4 2E       		.uleb128 0x2e
 5073 00e5 01       		.byte	0x1
 5074 00e6 3F       		.uleb128 0x3f
 5075 00e7 19       		.uleb128 0x19
 5076 00e8 03       		.uleb128 0x3
 5077 00e9 0E       		.uleb128 0xe
 5078 00ea 3A       		.uleb128 0x3a
 5079 00eb 0B       		.uleb128 0xb
 5080 00ec 3B       		.uleb128 0x3b
 5081 00ed 05       		.uleb128 0x5
 5082 00ee 27       		.uleb128 0x27
 5083 00ef 19       		.uleb128 0x19
 5084 00f0 49       		.uleb128 0x49
 5085 00f1 13       		.uleb128 0x13
 5086 00f2 11       		.uleb128 0x11
 5087 00f3 01       		.uleb128 0x1
 5088 00f4 12       		.uleb128 0x12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 160


 5089 00f5 06       		.uleb128 0x6
 5090 00f6 40       		.uleb128 0x40
 5091 00f7 18       		.uleb128 0x18
 5092 00f8 9642     		.uleb128 0x2116
 5093 00fa 19       		.uleb128 0x19
 5094 00fb 01       		.uleb128 0x1
 5095 00fc 13       		.uleb128 0x13
 5096 00fd 00       		.byte	0
 5097 00fe 00       		.byte	0
 5098 00ff 11       		.uleb128 0x11
 5099 0100 05       		.uleb128 0x5
 5100 0101 00       		.byte	0
 5101 0102 03       		.uleb128 0x3
 5102 0103 0E       		.uleb128 0xe
 5103 0104 3A       		.uleb128 0x3a
 5104 0105 0B       		.uleb128 0xb
 5105 0106 3B       		.uleb128 0x3b
 5106 0107 05       		.uleb128 0x5
 5107 0108 49       		.uleb128 0x49
 5108 0109 13       		.uleb128 0x13
 5109 010a 02       		.uleb128 0x2
 5110 010b 18       		.uleb128 0x18
 5111 010c 00       		.byte	0
 5112 010d 00       		.byte	0
 5113 010e 12       		.uleb128 0x12
 5114 010f 34       		.uleb128 0x34
 5115 0110 00       		.byte	0
 5116 0111 03       		.uleb128 0x3
 5117 0112 0E       		.uleb128 0xe
 5118 0113 3A       		.uleb128 0x3a
 5119 0114 0B       		.uleb128 0xb
 5120 0115 3B       		.uleb128 0x3b
 5121 0116 05       		.uleb128 0x5
 5122 0117 49       		.uleb128 0x49
 5123 0118 13       		.uleb128 0x13
 5124 0119 02       		.uleb128 0x2
 5125 011a 18       		.uleb128 0x18
 5126 011b 00       		.byte	0
 5127 011c 00       		.byte	0
 5128 011d 13       		.uleb128 0x13
 5129 011e 2E       		.uleb128 0x2e
 5130 011f 00       		.byte	0
 5131 0120 03       		.uleb128 0x3
 5132 0121 0E       		.uleb128 0xe
 5133 0122 3A       		.uleb128 0x3a
 5134 0123 0B       		.uleb128 0xb
 5135 0124 3B       		.uleb128 0x3b
 5136 0125 05       		.uleb128 0x5
 5137 0126 27       		.uleb128 0x27
 5138 0127 19       		.uleb128 0x19
 5139 0128 49       		.uleb128 0x49
 5140 0129 13       		.uleb128 0x13
 5141 012a 11       		.uleb128 0x11
 5142 012b 01       		.uleb128 0x1
 5143 012c 12       		.uleb128 0x12
 5144 012d 06       		.uleb128 0x6
 5145 012e 40       		.uleb128 0x40
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 161


 5146 012f 18       		.uleb128 0x18
 5147 0130 9742     		.uleb128 0x2117
 5148 0132 19       		.uleb128 0x19
 5149 0133 00       		.byte	0
 5150 0134 00       		.byte	0
 5151 0135 14       		.uleb128 0x14
 5152 0136 2E       		.uleb128 0x2e
 5153 0137 01       		.byte	0x1
 5154 0138 3F       		.uleb128 0x3f
 5155 0139 19       		.uleb128 0x19
 5156 013a 03       		.uleb128 0x3
 5157 013b 0E       		.uleb128 0xe
 5158 013c 3A       		.uleb128 0x3a
 5159 013d 0B       		.uleb128 0xb
 5160 013e 3B       		.uleb128 0x3b
 5161 013f 05       		.uleb128 0x5
 5162 0140 27       		.uleb128 0x27
 5163 0141 19       		.uleb128 0x19
 5164 0142 49       		.uleb128 0x49
 5165 0143 13       		.uleb128 0x13
 5166 0144 11       		.uleb128 0x11
 5167 0145 01       		.uleb128 0x1
 5168 0146 12       		.uleb128 0x12
 5169 0147 06       		.uleb128 0x6
 5170 0148 40       		.uleb128 0x40
 5171 0149 18       		.uleb128 0x18
 5172 014a 9742     		.uleb128 0x2117
 5173 014c 19       		.uleb128 0x19
 5174 014d 01       		.uleb128 0x1
 5175 014e 13       		.uleb128 0x13
 5176 014f 00       		.byte	0
 5177 0150 00       		.byte	0
 5178 0151 15       		.uleb128 0x15
 5179 0152 2E       		.uleb128 0x2e
 5180 0153 01       		.byte	0x1
 5181 0154 03       		.uleb128 0x3
 5182 0155 0E       		.uleb128 0xe
 5183 0156 3A       		.uleb128 0x3a
 5184 0157 0B       		.uleb128 0xb
 5185 0158 3B       		.uleb128 0x3b
 5186 0159 05       		.uleb128 0x5
 5187 015a 27       		.uleb128 0x27
 5188 015b 19       		.uleb128 0x19
 5189 015c 49       		.uleb128 0x49
 5190 015d 13       		.uleb128 0x13
 5191 015e 11       		.uleb128 0x11
 5192 015f 01       		.uleb128 0x1
 5193 0160 12       		.uleb128 0x12
 5194 0161 06       		.uleb128 0x6
 5195 0162 40       		.uleb128 0x40
 5196 0163 18       		.uleb128 0x18
 5197 0164 9742     		.uleb128 0x2117
 5198 0166 19       		.uleb128 0x19
 5199 0167 01       		.uleb128 0x1
 5200 0168 13       		.uleb128 0x13
 5201 0169 00       		.byte	0
 5202 016a 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 162


 5203 016b 16       		.uleb128 0x16
 5204 016c 2E       		.uleb128 0x2e
 5205 016d 01       		.byte	0x1
 5206 016e 3F       		.uleb128 0x3f
 5207 016f 19       		.uleb128 0x19
 5208 0170 03       		.uleb128 0x3
 5209 0171 0E       		.uleb128 0xe
 5210 0172 3A       		.uleb128 0x3a
 5211 0173 0B       		.uleb128 0xb
 5212 0174 3B       		.uleb128 0x3b
 5213 0175 05       		.uleb128 0x5
 5214 0176 27       		.uleb128 0x27
 5215 0177 19       		.uleb128 0x19
 5216 0178 11       		.uleb128 0x11
 5217 0179 01       		.uleb128 0x1
 5218 017a 12       		.uleb128 0x12
 5219 017b 06       		.uleb128 0x6
 5220 017c 40       		.uleb128 0x40
 5221 017d 18       		.uleb128 0x18
 5222 017e 9642     		.uleb128 0x2116
 5223 0180 19       		.uleb128 0x19
 5224 0181 01       		.uleb128 0x1
 5225 0182 13       		.uleb128 0x13
 5226 0183 00       		.byte	0
 5227 0184 00       		.byte	0
 5228 0185 17       		.uleb128 0x17
 5229 0186 2E       		.uleb128 0x2e
 5230 0187 00       		.byte	0
 5231 0188 3F       		.uleb128 0x3f
 5232 0189 19       		.uleb128 0x19
 5233 018a 03       		.uleb128 0x3
 5234 018b 0E       		.uleb128 0xe
 5235 018c 3A       		.uleb128 0x3a
 5236 018d 0B       		.uleb128 0xb
 5237 018e 3B       		.uleb128 0x3b
 5238 018f 05       		.uleb128 0x5
 5239 0190 27       		.uleb128 0x27
 5240 0191 19       		.uleb128 0x19
 5241 0192 11       		.uleb128 0x11
 5242 0193 01       		.uleb128 0x1
 5243 0194 12       		.uleb128 0x12
 5244 0195 06       		.uleb128 0x6
 5245 0196 40       		.uleb128 0x40
 5246 0197 18       		.uleb128 0x18
 5247 0198 9642     		.uleb128 0x2116
 5248 019a 19       		.uleb128 0x19
 5249 019b 00       		.byte	0
 5250 019c 00       		.byte	0
 5251 019d 18       		.uleb128 0x18
 5252 019e 2E       		.uleb128 0x2e
 5253 019f 00       		.byte	0
 5254 01a0 3F       		.uleb128 0x3f
 5255 01a1 19       		.uleb128 0x19
 5256 01a2 03       		.uleb128 0x3
 5257 01a3 0E       		.uleb128 0xe
 5258 01a4 3A       		.uleb128 0x3a
 5259 01a5 0B       		.uleb128 0xb
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 163


 5260 01a6 3B       		.uleb128 0x3b
 5261 01a7 05       		.uleb128 0x5
 5262 01a8 27       		.uleb128 0x27
 5263 01a9 19       		.uleb128 0x19
 5264 01aa 49       		.uleb128 0x49
 5265 01ab 13       		.uleb128 0x13
 5266 01ac 11       		.uleb128 0x11
 5267 01ad 01       		.uleb128 0x1
 5268 01ae 12       		.uleb128 0x12
 5269 01af 06       		.uleb128 0x6
 5270 01b0 40       		.uleb128 0x40
 5271 01b1 18       		.uleb128 0x18
 5272 01b2 9742     		.uleb128 0x2117
 5273 01b4 19       		.uleb128 0x19
 5274 01b5 00       		.byte	0
 5275 01b6 00       		.byte	0
 5276 01b7 19       		.uleb128 0x19
 5277 01b8 2E       		.uleb128 0x2e
 5278 01b9 01       		.byte	0x1
 5279 01ba 3F       		.uleb128 0x3f
 5280 01bb 19       		.uleb128 0x19
 5281 01bc 03       		.uleb128 0x3
 5282 01bd 0E       		.uleb128 0xe
 5283 01be 3A       		.uleb128 0x3a
 5284 01bf 0B       		.uleb128 0xb
 5285 01c0 3B       		.uleb128 0x3b
 5286 01c1 05       		.uleb128 0x5
 5287 01c2 27       		.uleb128 0x27
 5288 01c3 19       		.uleb128 0x19
 5289 01c4 11       		.uleb128 0x11
 5290 01c5 01       		.uleb128 0x1
 5291 01c6 12       		.uleb128 0x12
 5292 01c7 06       		.uleb128 0x6
 5293 01c8 40       		.uleb128 0x40
 5294 01c9 18       		.uleb128 0x18
 5295 01ca 9742     		.uleb128 0x2117
 5296 01cc 19       		.uleb128 0x19
 5297 01cd 01       		.uleb128 0x1
 5298 01ce 13       		.uleb128 0x13
 5299 01cf 00       		.byte	0
 5300 01d0 00       		.byte	0
 5301 01d1 1A       		.uleb128 0x1a
 5302 01d2 2E       		.uleb128 0x2e
 5303 01d3 01       		.byte	0x1
 5304 01d4 03       		.uleb128 0x3
 5305 01d5 0E       		.uleb128 0xe
 5306 01d6 3A       		.uleb128 0x3a
 5307 01d7 0B       		.uleb128 0xb
 5308 01d8 3B       		.uleb128 0x3b
 5309 01d9 05       		.uleb128 0x5
 5310 01da 27       		.uleb128 0x27
 5311 01db 19       		.uleb128 0x19
 5312 01dc 11       		.uleb128 0x11
 5313 01dd 01       		.uleb128 0x1
 5314 01de 12       		.uleb128 0x12
 5315 01df 06       		.uleb128 0x6
 5316 01e0 40       		.uleb128 0x40
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 164


 5317 01e1 18       		.uleb128 0x18
 5318 01e2 9642     		.uleb128 0x2116
 5319 01e4 19       		.uleb128 0x19
 5320 01e5 01       		.uleb128 0x1
 5321 01e6 13       		.uleb128 0x13
 5322 01e7 00       		.byte	0
 5323 01e8 00       		.byte	0
 5324 01e9 1B       		.uleb128 0x1b
 5325 01ea 2E       		.uleb128 0x2e
 5326 01eb 00       		.byte	0
 5327 01ec 03       		.uleb128 0x3
 5328 01ed 0E       		.uleb128 0xe
 5329 01ee 3A       		.uleb128 0x3a
 5330 01ef 0B       		.uleb128 0xb
 5331 01f0 3B       		.uleb128 0x3b
 5332 01f1 05       		.uleb128 0x5
 5333 01f2 27       		.uleb128 0x27
 5334 01f3 19       		.uleb128 0x19
 5335 01f4 11       		.uleb128 0x11
 5336 01f5 01       		.uleb128 0x1
 5337 01f6 12       		.uleb128 0x12
 5338 01f7 06       		.uleb128 0x6
 5339 01f8 40       		.uleb128 0x40
 5340 01f9 18       		.uleb128 0x18
 5341 01fa 9642     		.uleb128 0x2116
 5342 01fc 19       		.uleb128 0x19
 5343 01fd 00       		.byte	0
 5344 01fe 00       		.byte	0
 5345 01ff 1C       		.uleb128 0x1c
 5346 0200 01       		.uleb128 0x1
 5347 0201 01       		.byte	0x1
 5348 0202 49       		.uleb128 0x49
 5349 0203 13       		.uleb128 0x13
 5350 0204 01       		.uleb128 0x1
 5351 0205 13       		.uleb128 0x13
 5352 0206 00       		.byte	0
 5353 0207 00       		.byte	0
 5354 0208 1D       		.uleb128 0x1d
 5355 0209 21       		.uleb128 0x21
 5356 020a 00       		.byte	0
 5357 020b 49       		.uleb128 0x49
 5358 020c 13       		.uleb128 0x13
 5359 020d 2F       		.uleb128 0x2f
 5360 020e 0B       		.uleb128 0xb
 5361 020f 00       		.byte	0
 5362 0210 00       		.byte	0
 5363 0211 1E       		.uleb128 0x1e
 5364 0212 26       		.uleb128 0x26
 5365 0213 00       		.byte	0
 5366 0214 49       		.uleb128 0x49
 5367 0215 13       		.uleb128 0x13
 5368 0216 00       		.byte	0
 5369 0217 00       		.byte	0
 5370 0218 1F       		.uleb128 0x1f
 5371 0219 34       		.uleb128 0x34
 5372 021a 00       		.byte	0
 5373 021b 03       		.uleb128 0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 165


 5374 021c 0E       		.uleb128 0xe
 5375 021d 3A       		.uleb128 0x3a
 5376 021e 0B       		.uleb128 0xb
 5377 021f 3B       		.uleb128 0x3b
 5378 0220 0B       		.uleb128 0xb
 5379 0221 49       		.uleb128 0x49
 5380 0222 13       		.uleb128 0x13
 5381 0223 3F       		.uleb128 0x3f
 5382 0224 19       		.uleb128 0x19
 5383 0225 3C       		.uleb128 0x3c
 5384 0226 19       		.uleb128 0x19
 5385 0227 00       		.byte	0
 5386 0228 00       		.byte	0
 5387 0229 00       		.byte	0
 5388              		.section	.debug_aranges,"",%progbits
 5389 0000 94010000 		.4byte	0x194
 5390 0004 0200     		.2byte	0x2
 5391 0006 00000000 		.4byte	.Ldebug_info0
 5392 000a 04       		.byte	0x4
 5393 000b 00       		.byte	0
 5394 000c 0000     		.2byte	0
 5395 000e 0000     		.2byte	0
 5396 0010 00000000 		.4byte	.LFB0
 5397 0014 44000000 		.4byte	.LFE0-.LFB0
 5398 0018 00000000 		.4byte	.LFB1
 5399 001c 44000000 		.4byte	.LFE1-.LFB1
 5400 0020 00000000 		.4byte	.LFB2
 5401 0024 18000000 		.4byte	.LFE2-.LFB2
 5402 0028 00000000 		.4byte	.LFB3
 5403 002c 60000000 		.4byte	.LFE3-.LFB3
 5404 0030 00000000 		.4byte	.LFB4
 5405 0034 68000000 		.4byte	.LFE4-.LFB4
 5406 0038 00000000 		.4byte	.LFB5
 5407 003c 18000000 		.4byte	.LFE5-.LFB5
 5408 0040 00000000 		.4byte	.LFB6
 5409 0044 54010000 		.4byte	.LFE6-.LFB6
 5410 0048 00000000 		.4byte	.LFB7
 5411 004c 18000000 		.4byte	.LFE7-.LFB7
 5412 0050 00000000 		.4byte	.LFB8
 5413 0054 20010000 		.4byte	.LFE8-.LFB8
 5414 0058 00000000 		.4byte	.LFB9
 5415 005c F8000000 		.4byte	.LFE9-.LFB9
 5416 0060 00000000 		.4byte	.LFB10
 5417 0064 44000000 		.4byte	.LFE10-.LFB10
 5418 0068 00000000 		.4byte	.LFB11
 5419 006c 18000000 		.4byte	.LFE11-.LFB11
 5420 0070 00000000 		.4byte	.LFB12
 5421 0074 50000000 		.4byte	.LFE12-.LFB12
 5422 0078 00000000 		.4byte	.LFB13
 5423 007c 1C000000 		.4byte	.LFE13-.LFB13
 5424 0080 00000000 		.4byte	.LFB14
 5425 0084 60000000 		.4byte	.LFE14-.LFB14
 5426 0088 00000000 		.4byte	.LFB15
 5427 008c 18000000 		.4byte	.LFE15-.LFB15
 5428 0090 00000000 		.4byte	.LFB16
 5429 0094 3C000000 		.4byte	.LFE16-.LFB16
 5430 0098 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 166


 5431 009c 3C000000 		.4byte	.LFE17-.LFB17
 5432 00a0 00000000 		.4byte	.LFB18
 5433 00a4 34000000 		.4byte	.LFE18-.LFB18
 5434 00a8 00000000 		.4byte	.LFB19
 5435 00ac 1C000000 		.4byte	.LFE19-.LFB19
 5436 00b0 00000000 		.4byte	.LFB20
 5437 00b4 50000000 		.4byte	.LFE20-.LFB20
 5438 00b8 00000000 		.4byte	.LFB21
 5439 00bc 30000000 		.4byte	.LFE21-.LFB21
 5440 00c0 00000000 		.4byte	.LFB22
 5441 00c4 58000000 		.4byte	.LFE22-.LFB22
 5442 00c8 00000000 		.4byte	.LFB23
 5443 00cc 20000000 		.4byte	.LFE23-.LFB23
 5444 00d0 00000000 		.4byte	.LFB24
 5445 00d4 68000000 		.4byte	.LFE24-.LFB24
 5446 00d8 00000000 		.4byte	.LFB25
 5447 00dc 40000000 		.4byte	.LFE25-.LFB25
 5448 00e0 00000000 		.4byte	.LFB26
 5449 00e4 5C000000 		.4byte	.LFE26-.LFB26
 5450 00e8 00000000 		.4byte	.LFB27
 5451 00ec 68000000 		.4byte	.LFE27-.LFB27
 5452 00f0 00000000 		.4byte	.LFB28
 5453 00f4 54000000 		.4byte	.LFE28-.LFB28
 5454 00f8 00000000 		.4byte	.LFB29
 5455 00fc 14000000 		.4byte	.LFE29-.LFB29
 5456 0100 00000000 		.4byte	.LFB30
 5457 0104 8C000000 		.4byte	.LFE30-.LFB30
 5458 0108 00000000 		.4byte	.LFB31
 5459 010c 44000000 		.4byte	.LFE31-.LFB31
 5460 0110 00000000 		.4byte	.LFB32
 5461 0114 14000000 		.4byte	.LFE32-.LFB32
 5462 0118 00000000 		.4byte	.LFB33
 5463 011c 3C000000 		.4byte	.LFE33-.LFB33
 5464 0120 00000000 		.4byte	.LFB34
 5465 0124 50000000 		.4byte	.LFE34-.LFB34
 5466 0128 00000000 		.4byte	.LFB35
 5467 012c 14000000 		.4byte	.LFE35-.LFB35
 5468 0130 00000000 		.4byte	.LFB36
 5469 0134 6C000000 		.4byte	.LFE36-.LFB36
 5470 0138 00000000 		.4byte	.LFB37
 5471 013c 30000000 		.4byte	.LFE37-.LFB37
 5472 0140 00000000 		.4byte	.LFB38
 5473 0144 3C000000 		.4byte	.LFE38-.LFB38
 5474 0148 00000000 		.4byte	.LFB39
 5475 014c 30000000 		.4byte	.LFE39-.LFB39
 5476 0150 00000000 		.4byte	.LFB40
 5477 0154 4C000000 		.4byte	.LFE40-.LFB40
 5478 0158 00000000 		.4byte	.LFB41
 5479 015c 38000000 		.4byte	.LFE41-.LFB41
 5480 0160 00000000 		.4byte	.LFB42
 5481 0164 E8000000 		.4byte	.LFE42-.LFB42
 5482 0168 00000000 		.4byte	.LFB43
 5483 016c 86000000 		.4byte	.LFE43-.LFB43
 5484 0170 00000000 		.4byte	.LFB44
 5485 0174 94000000 		.4byte	.LFE44-.LFB44
 5486 0178 00000000 		.4byte	.LFB45
 5487 017c 38000000 		.4byte	.LFE45-.LFB45
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 167


 5488 0180 00000000 		.4byte	.LFB46
 5489 0184 64000000 		.4byte	.LFE46-.LFB46
 5490 0188 00000000 		.4byte	.LFB47
 5491 018c AC000000 		.4byte	.LFE47-.LFB47
 5492 0190 00000000 		.4byte	0
 5493 0194 00000000 		.4byte	0
 5494              		.section	.debug_ranges,"",%progbits
 5495              	.Ldebug_ranges0:
 5496 0000 00000000 		.4byte	.LFB0
 5497 0004 44000000 		.4byte	.LFE0
 5498 0008 00000000 		.4byte	.LFB1
 5499 000c 44000000 		.4byte	.LFE1
 5500 0010 00000000 		.4byte	.LFB2
 5501 0014 18000000 		.4byte	.LFE2
 5502 0018 00000000 		.4byte	.LFB3
 5503 001c 60000000 		.4byte	.LFE3
 5504 0020 00000000 		.4byte	.LFB4
 5505 0024 68000000 		.4byte	.LFE4
 5506 0028 00000000 		.4byte	.LFB5
 5507 002c 18000000 		.4byte	.LFE5
 5508 0030 00000000 		.4byte	.LFB6
 5509 0034 54010000 		.4byte	.LFE6
 5510 0038 00000000 		.4byte	.LFB7
 5511 003c 18000000 		.4byte	.LFE7
 5512 0040 00000000 		.4byte	.LFB8
 5513 0044 20010000 		.4byte	.LFE8
 5514 0048 00000000 		.4byte	.LFB9
 5515 004c F8000000 		.4byte	.LFE9
 5516 0050 00000000 		.4byte	.LFB10
 5517 0054 44000000 		.4byte	.LFE10
 5518 0058 00000000 		.4byte	.LFB11
 5519 005c 18000000 		.4byte	.LFE11
 5520 0060 00000000 		.4byte	.LFB12
 5521 0064 50000000 		.4byte	.LFE12
 5522 0068 00000000 		.4byte	.LFB13
 5523 006c 1C000000 		.4byte	.LFE13
 5524 0070 00000000 		.4byte	.LFB14
 5525 0074 60000000 		.4byte	.LFE14
 5526 0078 00000000 		.4byte	.LFB15
 5527 007c 18000000 		.4byte	.LFE15
 5528 0080 00000000 		.4byte	.LFB16
 5529 0084 3C000000 		.4byte	.LFE16
 5530 0088 00000000 		.4byte	.LFB17
 5531 008c 3C000000 		.4byte	.LFE17
 5532 0090 00000000 		.4byte	.LFB18
 5533 0094 34000000 		.4byte	.LFE18
 5534 0098 00000000 		.4byte	.LFB19
 5535 009c 1C000000 		.4byte	.LFE19
 5536 00a0 00000000 		.4byte	.LFB20
 5537 00a4 50000000 		.4byte	.LFE20
 5538 00a8 00000000 		.4byte	.LFB21
 5539 00ac 30000000 		.4byte	.LFE21
 5540 00b0 00000000 		.4byte	.LFB22
 5541 00b4 58000000 		.4byte	.LFE22
 5542 00b8 00000000 		.4byte	.LFB23
 5543 00bc 20000000 		.4byte	.LFE23
 5544 00c0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 168


 5545 00c4 68000000 		.4byte	.LFE24
 5546 00c8 00000000 		.4byte	.LFB25
 5547 00cc 40000000 		.4byte	.LFE25
 5548 00d0 00000000 		.4byte	.LFB26
 5549 00d4 5C000000 		.4byte	.LFE26
 5550 00d8 00000000 		.4byte	.LFB27
 5551 00dc 68000000 		.4byte	.LFE27
 5552 00e0 00000000 		.4byte	.LFB28
 5553 00e4 54000000 		.4byte	.LFE28
 5554 00e8 00000000 		.4byte	.LFB29
 5555 00ec 14000000 		.4byte	.LFE29
 5556 00f0 00000000 		.4byte	.LFB30
 5557 00f4 8C000000 		.4byte	.LFE30
 5558 00f8 00000000 		.4byte	.LFB31
 5559 00fc 44000000 		.4byte	.LFE31
 5560 0100 00000000 		.4byte	.LFB32
 5561 0104 14000000 		.4byte	.LFE32
 5562 0108 00000000 		.4byte	.LFB33
 5563 010c 3C000000 		.4byte	.LFE33
 5564 0110 00000000 		.4byte	.LFB34
 5565 0114 50000000 		.4byte	.LFE34
 5566 0118 00000000 		.4byte	.LFB35
 5567 011c 14000000 		.4byte	.LFE35
 5568 0120 00000000 		.4byte	.LFB36
 5569 0124 6C000000 		.4byte	.LFE36
 5570 0128 00000000 		.4byte	.LFB37
 5571 012c 30000000 		.4byte	.LFE37
 5572 0130 00000000 		.4byte	.LFB38
 5573 0134 3C000000 		.4byte	.LFE38
 5574 0138 00000000 		.4byte	.LFB39
 5575 013c 30000000 		.4byte	.LFE39
 5576 0140 00000000 		.4byte	.LFB40
 5577 0144 4C000000 		.4byte	.LFE40
 5578 0148 00000000 		.4byte	.LFB41
 5579 014c 38000000 		.4byte	.LFE41
 5580 0150 00000000 		.4byte	.LFB42
 5581 0154 E8000000 		.4byte	.LFE42
 5582 0158 00000000 		.4byte	.LFB43
 5583 015c 86000000 		.4byte	.LFE43
 5584 0160 00000000 		.4byte	.LFB44
 5585 0164 94000000 		.4byte	.LFE44
 5586 0168 00000000 		.4byte	.LFB45
 5587 016c 38000000 		.4byte	.LFE45
 5588 0170 00000000 		.4byte	.LFB46
 5589 0174 64000000 		.4byte	.LFE46
 5590 0178 00000000 		.4byte	.LFB47
 5591 017c AC000000 		.4byte	.LFE47
 5592 0180 00000000 		.4byte	0
 5593 0184 00000000 		.4byte	0
 5594              		.section	.debug_line,"",%progbits
 5595              	.Ldebug_line0:
 5596 0000 1D070000 		.section	.debug_str,"MS",%progbits,1
 5596      02005C00 
 5596      00000201 
 5596      FB0E0D00 
 5596      01010101 
 5597              	.LASF10:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 169


 5598 0000 75696E74 		.ascii	"uint16\000"
 5598      313600
 5599              	.LASF53:
 5600 0007 6C66636C 		.ascii	"lfclkSource\000"
 5600      6B536F75 
 5600      72636500 
 5601              	.LASF118:
 5602 0013 636F756E 		.ascii	"counterIntMaskTbl\000"
 5602      74657249 
 5602      6E744D61 
 5602      736B5462 
 5602      6C00
 5603              	.LASF119:
 5604 0025 63795379 		.ascii	"cySysWdtCallback\000"
 5604      73576474 
 5604      43616C6C 
 5604      6261636B 
 5604      00
 5605              	.LASF68:
 5606 0036 43795379 		.ascii	"CySysWdtSetMode\000"
 5606      73576474 
 5606      5365744D 
 5606      6F646500 
 5607              	.LASF65:
 5608 0046 43795379 		.ascii	"CySysWdtUnlock\000"
 5608      73576474 
 5608      556E6C6F 
 5608      636B00
 5609              	.LASF47:
 5610 0055 6D656173 		.ascii	"measuredIloFreq\000"
 5610      75726564 
 5610      496C6F46 
 5610      72657100 
 5611              	.LASF67:
 5612 0065 636F756E 		.ascii	"counterNum\000"
 5612      7465724E 
 5612      756D00
 5613              	.LASF124:
 5614 0070 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 5614      73436C6B 
 5614      4C66636C 
 5614      6B506F73 
 5614      65646765 
 5615              	.LASF81:
 5616 008a 43795379 		.ascii	"CySysWdtGetCascade\000"
 5616      73576474 
 5616      47657443 
 5616      61736361 
 5616      646500
 5617              	.LASF123:
 5618 009d 43795379 		.ascii	"CySysClkGetLfclkSource\000"
 5618      73436C6B 
 5618      4765744C 
 5618      66636C6B 
 5618      536F7572 
 5619              	.LASF27:
 5620 00b4 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 170


 5620      73436C6B 
 5620      496C6F53 
 5620      74617274 
 5620      4D656173 
 5621              	.LASF114:
 5622 00d0 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 5622      6B506F73 
 5622      65646765 
 5622      57647443 
 5622      6F756E74 
 5623              	.LASF7:
 5624 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 5624      206C6F6E 
 5624      6720756E 
 5624      7369676E 
 5624      65642069 
 5625              	.LASF48:
 5626 0106 63757272 		.ascii	"currentIloTrimValue\000"
 5626      656E7449 
 5626      6C6F5472 
 5626      696D5661 
 5626      6C756500 
 5627              	.LASF80:
 5628 011a 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5628      73436C6B 
 5628      57636F45 
 5628      6E61626C 
 5628      656400
 5629              	.LASF51:
 5630 012d 6572726F 		.ascii	"errorRangeStatus\000"
 5630      7252616E 
 5630      67655374 
 5630      61747573 
 5630      00
 5631              	.LASF24:
 5632 013e 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 5632      73436C6B 
 5632      57636F53 
 5632      65744869 
 5632      6768506F 
 5633              	.LASF6:
 5634 015a 6C6F6E67 		.ascii	"long long int\000"
 5634      206C6F6E 
 5634      6720696E 
 5634      7400
 5635              	.LASF0:
 5636 0168 7369676E 		.ascii	"signed char\000"
 5636      65642063 
 5636      68617200 
 5637              	.LASF96:
 5638 0174 66756E63 		.ascii	"function\000"
 5638      74696F6E 
 5638      00
 5639              	.LASF28:
 5640 017d 696E7465 		.ascii	"interruptState\000"
 5640      72727570 
 5640      74537461 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 171


 5640      746500
 5641              	.LASF21:
 5642 018c 63795764 		.ascii	"cyWdtCallback\000"
 5642      7443616C 
 5642      6C626163 
 5642      6B00
 5643              	.LASF12:
 5644 019a 696E7433 		.ascii	"int32\000"
 5644      3200
 5645              	.LASF49:
 5646 01a0 696C6F41 		.ascii	"iloAccuracyValue\000"
 5646      63637572 
 5646      61637956 
 5646      616C7565 
 5646      00
 5647              	.LASF20:
 5648 01b1 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 5648      79735F74 
 5648      696D6572 
 5648      5F64656C 
 5648      61797479 
 5649              	.LASF86:
 5650 01cd 62697473 		.ascii	"bits\000"
 5650      00
 5651              	.LASF4:
 5652 01d2 6C6F6E67 		.ascii	"long int\000"
 5652      20696E74 
 5652      00
 5653              	.LASF84:
 5654 01db 72656756 		.ascii	"regValue\000"
 5654      616C7565 
 5654      00
 5655              	.LASF61:
 5656 01e4 636C6F63 		.ascii	"clockSel\000"
 5656      6B53656C 
 5656      00
 5657              	.LASF9:
 5658 01ed 75696E74 		.ascii	"uint8\000"
 5658      3800
 5659              	.LASF72:
 5660 01f3 656E6162 		.ascii	"enable\000"
 5660      6C6500
 5661              	.LASF14:
 5662 01fa 646F7562 		.ascii	"double\000"
 5662      6C6500
 5663              	.LASF33:
 5664 0201 636F6D70 		.ascii	"compensatedCycles\000"
 5664      656E7361 
 5664      74656443 
 5664      79636C65 
 5664      7300
 5665              	.LASF26:
 5666 0213 43795379 		.ascii	"CySysClkIloStop\000"
 5666      73436C6B 
 5666      496C6F53 
 5666      746F7000 
 5667              	.LASF34:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 172


 5668 0223 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5668      6F6D7065 
 5668      6E736174 
 5668      65644379 
 5668      636C6573 
 5669              	.LASF94:
 5670 0238 636F756E 		.ascii	"countersMask\000"
 5670      74657273 
 5670      4D61736B 
 5670      00
 5671              	.LASF11:
 5672 0245 75696E74 		.ascii	"uint32\000"
 5672      333200
 5673              	.LASF31:
 5674 024c 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5674      73436C6B 
 5674      496C6F53 
 5674      746F704D 
 5674      65617375 
 5675              	.LASF25:
 5676 0267 43795379 		.ascii	"CySysClkWcoSetLowPowerMode\000"
 5676      73436C6B 
 5676      57636F53 
 5676      65744C6F 
 5676      77506F77 
 5677              	.LASF97:
 5678 0282 70726576 		.ascii	"prevCallback\000"
 5678      43616C6C 
 5678      6261636B 
 5678      00
 5679              	.LASF82:
 5680 028f 43795379 		.ascii	"CySysWdtSetMatch\000"
 5680      73576474 
 5680      5365744D 
 5680      61746368 
 5680      00
 5681              	.LASF79:
 5682 02a0 636F756E 		.ascii	"countersEnableStatus\000"
 5682      74657273 
 5682      456E6162 
 5682      6C655374 
 5682      61747573 
 5683              	.LASF117:
 5684 02b5 77647449 		.ascii	"wdtIsrMask\000"
 5684      73724D61 
 5684      736B00
 5685              	.LASF74:
 5686 02c0 43795379 		.ascii	"CySysWdtEnable\000"
 5686      73576474 
 5686      456E6162 
 5686      6C6500
 5687              	.LASF95:
 5688 02cf 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5688      73576474 
 5688      53657449 
 5688      6E746572 
 5688      72757074 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 173


 5689              	.LASF75:
 5690 02ec 636F756E 		.ascii	"counterMask\000"
 5690      7465724D 
 5690      61736B00 
 5691              	.LASF41:
 5692 02f8 6D6F6465 		.ascii	"mode\000"
 5692      00
 5693              	.LASF73:
 5694 02fd 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 5694      73576474 
 5694      47657443 
 5694      6C656172 
 5694      4F6E4D61 
 5695              	.LASF8:
 5696 0315 756E7369 		.ascii	"unsigned int\000"
 5696      676E6564 
 5696      20696E74 
 5696      00
 5697              	.LASF54:
 5698 0322 43795379 		.ascii	"CySysClkSetLfclkSource\000"
 5698      73436C6B 
 5698      5365744C 
 5698      66636C6B 
 5698      536F7572 
 5699              	.LASF104:
 5700 0339 66697273 		.ascii	"firstCount\000"
 5700      74436F75 
 5700      6E7400
 5701              	.LASF99:
 5702 0344 72657443 		.ascii	"retCallback\000"
 5702      616C6C62 
 5702      61636B00 
 5703              	.LASF32:
 5704 0350 64657369 		.ascii	"desiredDelay\000"
 5704      72656444 
 5704      656C6179 
 5704      00
 5705              	.LASF5:
 5706 035d 6C6F6E67 		.ascii	"long unsigned int\000"
 5706      20756E73 
 5706      69676E65 
 5706      6420696E 
 5706      7400
 5707              	.LASF110:
 5708 036f 6D617463 		.ascii	"matchValue\000"
 5708      6856616C 
 5708      756500
 5709              	.LASF106:
 5710 037a 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 5710      73436C6B 
 5710      4C66636C 
 5710      6B506F73 
 5710      65646765 
 5711              	.LASF100:
 5712 0396 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 5712      73576474 
 5712      456E6162 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 174


 5712      6C65436F 
 5712      756E7465 
 5713              	.LASF50:
 5714 03af 7472696D 		.ascii	"trimStep\000"
 5714      53746570 
 5714      00
 5715              	.LASF3:
 5716 03b8 73686F72 		.ascii	"short unsigned int\000"
 5716      7420756E 
 5716      7369676E 
 5716      65642069 
 5716      6E7400
 5717              	.LASF66:
 5718 03cb 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 5718      73576474 
 5718      47657445 
 5718      6E61626C 
 5718      65645374 
 5719              	.LASF98:
 5720 03e4 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 5720      73576474 
 5720      47657449 
 5720      6E746572 
 5720      72757074 
 5721              	.LASF29:
 5722 0401 696C6F54 		.ascii	"iloTrimTrig\000"
 5722      72696D54 
 5722      72696700 
 5723              	.LASF46:
 5724 040d 43795379 		.ascii	"CySysClkIloUpdateTrimReg\000"
 5724      73436C6B 
 5724      496C6F55 
 5724      70646174 
 5724      65547269 
 5725              	.LASF30:
 5726 0426 43795379 		.ascii	"CySysClkIloStart\000"
 5726      73436C6B 
 5726      496C6F53 
 5726      74617274 
 5726      00
 5727              	.LASF85:
 5728 0437 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 5728      73576474 
 5728      53657454 
 5728      6F67676C 
 5728      65426974 
 5729              	.LASF59:
 5730 044c 706F7765 		.ascii	"powerModeStatus\000"
 5730      724D6F64 
 5730      65537461 
 5730      74757300 
 5731              	.LASF103:
 5732 045c 43795379 		.ascii	"CySysWatchdogFeed\000"
 5732      73576174 
 5732      6368646F 
 5732      67466565 
 5732      6400
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 175


 5733              	.LASF122:
 5734 046e 443A5C44 		.ascii	"D:\\Dropbox\\5_kurs\\diploma\\led_lamp(for_diploma)"
 5734      726F7062 
 5734      6F785C35 
 5734      5F6B7572 
 5734      735C6469 
 5735 049d 5C424C45 		.ascii	"\\BLE_Dynamic_GATT_Service_Configuration\\BLE_Dynam"
 5735      5F44796E 
 5735      616D6963 
 5735      5F474154 
 5735      545F5365 
 5736 04ce 69635F47 		.ascii	"ic_GATT_Service_Configuration.cydsn\000"
 5736      4154545F 
 5736      53657276 
 5736      6963655F 
 5736      436F6E66 
 5737              	.LASF113:
 5738 04f2 64656661 		.ascii	"defaultIloTrimRegValue\000"
 5738      756C7449 
 5738      6C6F5472 
 5738      696D5265 
 5738      6756616C 
 5739              	.LASF112:
 5740 0509 746D7056 		.ascii	"tmpValue\000"
 5740      616C7565 
 5740      00
 5741              	.LASF38:
 5742 0512 72657475 		.ascii	"returnStatus\000"
 5742      726E5374 
 5742      61747573 
 5742      00
 5743              	.LASF55:
 5744 051f 736F7572 		.ascii	"source\000"
 5744      636500
 5745              	.LASF60:
 5746 0526 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 5746      73436C6B 
 5746      57636F43 
 5746      6C6F636B 
 5746      4F757453 
 5747              	.LASF23:
 5748 0540 73697A65 		.ascii	"sizetype\000"
 5748      74797065 
 5748      00
 5749              	.LASF22:
 5750 0549 6C6F6E67 		.ascii	"long double\000"
 5750      20646F75 
 5750      626C6500 
 5751              	.LASF88:
 5752 0555 43795379 		.ascii	"CySysWdtGetMatch\000"
 5752      73576474 
 5752      4765744D 
 5752      61746368 
 5752      00
 5753              	.LASF83:
 5754 0566 6D617463 		.ascii	"match\000"
 5754      6800
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 176


 5755              	.LASF52:
 5756 056c 43795379 		.ascii	"CySysClkIloRestoreFactoryTrim\000"
 5756      73436C6B 
 5756      496C6F52 
 5756      6573746F 
 5756      72654661 
 5757              	.LASF18:
 5758 058a 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5758      59535F54 
 5758      494D4552 
 5758      5F574149 
 5758      5400
 5759              	.LASF37:
 5760 059c 63686563 		.ascii	"checkStatus\000"
 5760      6B537461 
 5760      74757300 
 5761              	.LASF125:
 5762 05a8 63796465 		.ascii	"cydelayFreqHz\000"
 5762      6C617946 
 5762      72657148 
 5762      7A00
 5763              	.LASF93:
 5764 05b6 43795379 		.ascii	"CySysWdtResetCounters\000"
 5764      73576474 
 5764      52657365 
 5764      74436F75 
 5764      6E746572 
 5765              	.LASF44:
 5766 05cc 77616974 		.ascii	"waitUntilCntr1Stops\000"
 5766      556E7469 
 5766      6C436E74 
 5766      72315374 
 5766      6F707300 
 5767              	.LASF91:
 5768 05e0 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5768      73576474 
 5768      436C6561 
 5768      72496E74 
 5768      65727275 
 5769              	.LASF13:
 5770 05f7 666C6F61 		.ascii	"float\000"
 5770      7400
 5771              	.LASF111:
 5772 05fd 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 5772      7354696D 
 5772      65724465 
 5772      6C617955 
 5772      6E74696C 
 5773              	.LASF107:
 5774 0617 43795379 		.ascii	"CySysTimerDelay\000"
 5774      7354696D 
 5774      65724465 
 5774      6C617900 
 5775              	.LASF64:
 5776 0627 43795379 		.ascii	"CySysWdtLocked\000"
 5776      73576474 
 5776      4C6F636B 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 177


 5776      656400
 5777              	.LASF120:
 5778 0636 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5778      43313120 
 5778      352E342E 
 5778      31203230 
 5778      31363036 
 5779 0669 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5779      20726576 
 5779      6973696F 
 5779      6E203233 
 5779      37373135 
 5780 069c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 5780      66756E63 
 5780      74696F6E 
 5780      2D736563 
 5780      74696F6E 
 5781 06cf 652D706F 		.ascii	"e-pointer\000"
 5781      696E7465 
 5781      7200
 5782              	.LASF1:
 5783 06d9 756E7369 		.ascii	"unsigned char\000"
 5783      676E6564 
 5783      20636861 
 5783      7200
 5784              	.LASF36:
 5785 06e7 636F6D70 		.ascii	"compensateRunningStatus\000"
 5785      656E7361 
 5785      74655275 
 5785      6E6E696E 
 5785      67537461 
 5786              	.LASF105:
 5787 06ff 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 5787      6B506F73 
 5787      65646765 
 5787      456E6162 
 5787      6C656457 
 5788              	.LASF109:
 5789 071d 64656C61 		.ascii	"delay\000"
 5789      7900
 5790              	.LASF2:
 5791 0723 73686F72 		.ascii	"short int\000"
 5791      7420696E 
 5791      7400
 5792              	.LASF108:
 5793 072d 64656C61 		.ascii	"delayType\000"
 5793      79547970 
 5793      6500
 5794              	.LASF76:
 5795 0737 43795379 		.ascii	"CySysWdtDisable\000"
 5795      73576474 
 5795      44697361 
 5795      626C6500 
 5796              	.LASF40:
 5797 0747 43795379 		.ascii	"CySysClkIloTrim\000"
 5797      73436C6B 
 5797      496C6F54 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 178


 5797      72696D00 
 5798              	.LASF63:
 5799 0757 43795379 		.ascii	"CySysClkIloEnabled\000"
 5799      73436C6B 
 5799      496C6F45 
 5799      6E61626C 
 5799      656400
 5800              	.LASF90:
 5801 076a 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 5801      73576474 
 5801      47657449 
 5801      6E746572 
 5801      72757074 
 5802              	.LASF121:
 5803 0785 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 5803      72617465 
 5803      645F536F 
 5803      75726365 
 5803      5C50536F 
 5804              	.LASF42:
 5805 07a6 696C6F41 		.ascii	"iloAccuracyInPPT\000"
 5805      63637572 
 5805      61637949 
 5805      6E505054 
 5805      00
 5806              	.LASF57:
 5807 07b7 43795379 		.ascii	"CySysClkWcoStop\000"
 5807      73436C6B 
 5807      57636F53 
 5807      746F7000 
 5808              	.LASF58:
 5809 07c7 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 5809      73436C6B 
 5809      57636F53 
 5809      6574506F 
 5809      7765724D 
 5810              	.LASF101:
 5811 07df 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 5811      73576474 
 5811      44697361 
 5811      626C6543 
 5811      6F756E74 
 5812              	.LASF15:
 5813 07f9 63686172 		.ascii	"char\000"
 5813      00
 5814              	.LASF17:
 5815 07fe 72656733 		.ascii	"reg32\000"
 5815      3200
 5816              	.LASF89:
 5817 0804 43795379 		.ascii	"CySysWdtGetCount\000"
 5817      73576474 
 5817      47657443 
 5817      6F756E74 
 5817      00
 5818              	.LASF62:
 5819 0815 43795379 		.ascii	"CySysWdtLock\000"
 5819      73576474 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 179


 5819      4C6F636B 
 5819      00
 5820              	.LASF116:
 5821 0822 64697361 		.ascii	"disableServicedIsr\000"
 5821      626C6553 
 5821      65727669 
 5821      63656449 
 5821      737200
 5822              	.LASF71:
 5823 0835 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 5823      73576474 
 5823      53657443 
 5823      6C656172 
 5823      4F6E4D61 
 5824              	.LASF77:
 5825 084d 43795379 		.ascii	"CySysWdtSetCascade\000"
 5825      73576474 
 5825      53657443 
 5825      61736361 
 5825      646500
 5826              	.LASF43:
 5827 0860 74696D65 		.ascii	"timeOutClocks\000"
 5827      4F757443 
 5827      6C6F636B 
 5827      7300
 5828              	.LASF45:
 5829 086e 7472696D 		.ascii	"trimRunningStatus\000"
 5829      52756E6E 
 5829      696E6753 
 5829      74617475 
 5829      7300
 5830              	.LASF70:
 5831 0880 43795379 		.ascii	"CySysWdtGetMode\000"
 5831      73576474 
 5831      4765744D 
 5831      6F646500 
 5832              	.LASF35:
 5833 0890 64657369 		.ascii	"desiredDelayInCounts\000"
 5833      72656444 
 5833      656C6179 
 5833      496E436F 
 5833      756E7473 
 5834              	.LASF56:
 5835 08a5 43795379 		.ascii	"CySysClkWcoStart\000"
 5835      73436C6B 
 5835      57636F53 
 5835      74617274 
 5835      00
 5836              	.LASF92:
 5837 08b6 7764744C 		.ascii	"wdtLockState\000"
 5837      6F636B53 
 5837      74617465 
 5837      00
 5838              	.LASF69:
 5839 08c3 636F6E66 		.ascii	"configRegValue\000"
 5839      69675265 
 5839      6756616C 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccaDApYQ.s 			page 180


 5839      756500
 5840              	.LASF115:
 5841 08d2 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 5841      6B506F73 
 5841      65646765 
 5841      57647443 
 5841      6F756E74 
 5842              	.LASF78:
 5843 08ee 63617363 		.ascii	"cascadeMask\000"
 5843      6164654D 
 5843      61736B00 
 5844              	.LASF16:
 5845 08fa 63797374 		.ascii	"cystatus\000"
 5845      61747573 
 5845      00
 5846              	.LASF102:
 5847 0903 43795379 		.ascii	"CySysWdtIsr\000"
 5847      73576474 
 5847      49737200 
 5848              	.LASF87:
 5849 090f 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 5849      73576474 
 5849      47657454 
 5849      6F67676C 
 5849      65426974 
 5850              	.LASF39:
 5851 0924 43795379 		.ascii	"CySysClkIloCompensate\000"
 5851      73436C6B 
 5851      496C6F43 
 5851      6F6D7065 
 5851      6E736174 
 5852              	.LASF19:
 5853 093a 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 5853      59535F54 
 5853      494D4552 
 5853      5F494E54 
 5853      45525255 
 5854              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
