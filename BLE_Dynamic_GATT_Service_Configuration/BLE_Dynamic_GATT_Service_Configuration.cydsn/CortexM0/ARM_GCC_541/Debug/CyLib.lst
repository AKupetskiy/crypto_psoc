ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB2:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 5


 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 108 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 126              		.loc 1 109 0
 127 0000 044B     		ldr	r3, .L2
 128 0002 044A     		ldr	r2, .L2
 129 0004 1268     		ldr	r2, [r2]
 130 0006 8021     		movs	r1, #128
 131 0008 0906     		lsls	r1, r1, #24
 132 000a 0A43     		orrs	r2, r1
 133 000c 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 134              		.loc 1 124 0
 135 000e C046     		nop
 136              		@ sp needed
 137 0010 7047     		bx	lr
 138              	.L3:
 139 0012 C046     		.align	2
 140              	.L2:
 141 0014 08010B40 		.word	1074462984
 142              		.cfi_endproc
 143              	.LFE2:
 144              		.size	CySysClkImoStart, .-CySysClkImoStart
 145              		.section	.text.CySysClkImoStop,"ax",%progbits
 146              		.align	2
 147              		.global	CySysClkImoStop
 148              		.code	16
 149              		.thumb_func
 150              		.type	CySysClkImoStop, %function
 151              	CySysClkImoStop:
 152              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 6


 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 153              		.loc 1 140 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 158              		.loc 1 149 0
 159 0000 034B     		ldr	r3, .L5
 160 0002 034A     		ldr	r2, .L5
 161 0004 1268     		ldr	r2, [r2]
 162 0006 5200     		lsls	r2, r2, #1
 163 0008 5208     		lsrs	r2, r2, #1
 164 000a 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 165              		.loc 1 150 0
 166 000c C046     		nop
 167              		@ sp needed
 168 000e 7047     		bx	lr
 169              	.L6:
 170              		.align	2
 171              	.L5:
 172 0010 08010B40 		.word	1074462984
 173              		.cfi_endproc
 174              	.LFE3:
 175              		.size	CySysClkImoStop, .-CySysClkImoStop
 176              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 177              		.align	2
 178              		.global	CySysClkWriteHfclkDirect
 179              		.code	16
 180              		.thumb_func
 181              		.type	CySysClkWriteHfclkDirect, %function
 182              	CySysClkWriteHfclkDirect:
 183              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 7


 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 8


 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 9


 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 10


 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 11


 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 184              		.loc 1 430 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 16
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 192 0002 84B0     		sub	sp, sp, #16
 193              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 12


 194 0004 0190     		str	r0, [sp, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 195              		.loc 1 434 0
 196 0006 0F24     		movs	r4, #15
 197 0008 6C44     		add	r4, r4, sp
 198 000a FFF7FEFF 		bl	CyEnterCriticalSection
 199 000e 0300     		movs	r3, r0
 200 0010 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 201              		.loc 1 437 0
 202 0012 0B4B     		ldr	r3, .L8
 203 0014 1B68     		ldr	r3, [r3]
 204 0016 0722     		movs	r2, #7
 205 0018 9343     		bics	r3, r2
 206 001a 0293     		str	r3, [sp, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 207              		.loc 1 448 0
 208 001c 019B     		ldr	r3, [sp, #4]
 209 001e 0722     		movs	r2, #7
 210 0020 1340     		ands	r3, r2
 211 0022 029A     		ldr	r2, [sp, #8]
 212 0024 1343     		orrs	r3, r2
 213 0026 0293     		str	r3, [sp, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 214              		.loc 1 451 0
 215 0028 054B     		ldr	r3, .L8
 216 002a 029A     		ldr	r2, [sp, #8]
 217 002c 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 218              		.loc 1 453 0
 219 002e 0F23     		movs	r3, #15
 220 0030 6B44     		add	r3, r3, sp
 221 0032 1B78     		ldrb	r3, [r3]
 222 0034 1800     		movs	r0, r3
 223 0036 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 224              		.loc 1 454 0
 225 003a C046     		nop
 226 003c 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 13


 227              		@ sp needed
 228 003e 10BD     		pop	{r4, pc}
 229              	.L9:
 230              		.align	2
 231              	.L8:
 232 0040 00010B40 		.word	1074462976
 233              		.cfi_endproc
 234              	.LFE4:
 235              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 236              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 237              		.align	2
 238              		.global	CySysEnablePumpClock
 239              		.code	16
 240              		.thumb_func
 241              		.type	CySysEnablePumpClock, %function
 242              	CySysEnablePumpClock:
 243              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 244              		.loc 1 474 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 82B0     		sub	sp, sp, #8
 250              		.cfi_def_cfa_offset 8
 251 0002 0190     		str	r0, [sp, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 252              		.loc 1 476 0
 253 0004 019B     		ldr	r3, [sp, #4]
 254 0006 0122     		movs	r2, #1
 255 0008 1340     		ands	r3, r2
 256 000a 08D0     		beq	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 257              		.loc 1 478 0
 258 000c 0C4A     		ldr	r2, .L14
 259 000e 0C4B     		ldr	r3, .L14
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 14


 260 0010 1968     		ldr	r1, [r3]
 261 0012 0C4B     		ldr	r3, .L14+4
 262 0014 1B68     		ldr	r3, [r3]
 263 0016 5B06     		lsls	r3, r3, #25
 264 0018 0B43     		orrs	r3, r1
 265 001a 1360     		str	r3, [r2]
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 266              		.loc 1 498 0
 267 001c 0CE0     		b	.L13
 268              	.L11:
 482:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 269              		.loc 1 482 0
 270 001e 084B     		ldr	r3, .L14
 271 0020 1B68     		ldr	r3, [r3]
 272 0022 5B0E     		lsrs	r3, r3, #25
 273 0024 0722     		movs	r2, #7
 274 0026 1A40     		ands	r2, r3
 275 0028 064B     		ldr	r3, .L14+4
 276 002a 1A60     		str	r2, [r3]
 484:Generated_Source\PSoC4/CyLib.c ****         }
 277              		.loc 1 484 0
 278 002c 044B     		ldr	r3, .L14
 279 002e 044A     		ldr	r2, .L14
 280 0030 1268     		ldr	r2, [r2]
 281 0032 0549     		ldr	r1, .L14+8
 282 0034 0A40     		ands	r2, r1
 283 0036 1A60     		str	r2, [r3]
 284              	.L13:
 285              		.loc 1 498 0
 286 0038 C046     		nop
 287 003a 02B0     		add	sp, sp, #8
 288              		@ sp needed
 289 003c 7047     		bx	lr
 290              	.L15:
 291 003e C046     		.align	2
 292              	.L14:
 293 0040 08010B40 		.word	1074462984
 294 0044 00000000 		.word	CySysClkPumpConfig
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 15


 295 0048 FFFFFFF1 		.word	-234881025
 296              		.cfi_endproc
 297              	.LFE5:
 298              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 299              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 300              		.align	2
 301              		.global	CySysClkGetSysclkSource
 302              		.code	16
 303              		.thumb_func
 304              		.type	CySysClkGetSysclkSource, %function
 305              	CySysClkGetSysclkSource:
 306              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 307              		.loc 1 511 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 10B5     		push	{r4, lr}
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 4, -8
 314              		.cfi_offset 14, -4
 315 0002 82B0     		sub	sp, sp, #8
 316              		.cfi_def_cfa_offset 16
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 317              		.loc 1 515 0
 318 0004 6B46     		mov	r3, sp
 319 0006 DC1D     		adds	r4, r3, #7
 320 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 321 000c 0300     		movs	r3, r0
 322 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 323              		.loc 1 525 0
 324 0010 074B     		ldr	r3, .L18
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 16


 325 0012 1B68     		ldr	r3, [r3]
 326 0014 0722     		movs	r2, #7
 327 0016 1340     		ands	r3, r2
 328 0018 0093     		str	r3, [sp]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 329              		.loc 1 528 0
 330 001a 6B46     		mov	r3, sp
 331 001c 0733     		adds	r3, r3, #7
 332 001e 1B78     		ldrb	r3, [r3]
 333 0020 1800     		movs	r0, r3
 334 0022 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 335              		.loc 1 530 0
 336 0026 009B     		ldr	r3, [sp]
 531:Generated_Source\PSoC4/CyLib.c **** }
 337              		.loc 1 531 0
 338 0028 1800     		movs	r0, r3
 339 002a 02B0     		add	sp, sp, #8
 340              		@ sp needed
 341 002c 10BD     		pop	{r4, pc}
 342              	.L19:
 343 002e C046     		.align	2
 344              	.L18:
 345 0030 00010B40 		.word	1074462976
 346              		.cfi_endproc
 347              	.LFE6:
 348              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 349              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 350              		.align	2
 351              		.global	CySysClkWriteSysclkDiv
 352              		.code	16
 353              		.thumb_func
 354              		.type	CySysClkWriteSysclkDiv, %function
 355              	CySysClkWriteSysclkDiv:
 356              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 17


 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 357              		.loc 1 566 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 16
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 365 0002 84B0     		sub	sp, sp, #16
 366              		.cfi_def_cfa_offset 24
 367 0004 0190     		str	r0, [sp, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 368              		.loc 1 569 0
 369 0006 0F24     		movs	r4, #15
 370 0008 6C44     		add	r4, r4, sp
 371 000a FFF7FEFF 		bl	CyEnterCriticalSection
 372 000e 0300     		movs	r3, r0
 373 0010 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 374              		.loc 1 571 0
 375 0012 0A4B     		ldr	r3, .L21
 376 0014 019A     		ldr	r2, [sp, #4]
 377 0016 D104     		lsls	r1, r2, #19
 378 0018 E022     		movs	r2, #224
 379 001a 9203     		lsls	r2, r2, #14
 380 001c 1140     		ands	r1, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 381              		.loc 1 573 0
 382 001e 074A     		ldr	r2, .L21
 383 0020 1268     		ldr	r2, [r2]
 384 0022 0748     		ldr	r0, .L21+4
 385 0024 0240     		ands	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 386              		.loc 1 572 0
 387 0026 0A43     		orrs	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 388              		.loc 1 571 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 18


 389 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 390              		.loc 1 576 0
 391 002a 0F23     		movs	r3, #15
 392 002c 6B44     		add	r3, r3, sp
 393 002e 1B78     		ldrb	r3, [r3]
 394 0030 1800     		movs	r0, r3
 395 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 396              		.loc 1 577 0
 397 0036 C046     		nop
 398 0038 04B0     		add	sp, sp, #16
 399              		@ sp needed
 400 003a 10BD     		pop	{r4, pc}
 401              	.L22:
 402              		.align	2
 403              	.L21:
 404 003c 00010B40 		.word	1074462976
 405 0040 FFFFC7FF 		.word	-3670017
 406              		.cfi_endproc
 407              	.LFE7:
 408              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 409              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 410              		.align	2
 411              		.global	CySysClkWriteImoFreq
 412              		.code	16
 413              		.thumb_func
 414              		.type	CySysClkWriteImoFreq, %function
 415              	CySysClkWriteImoFreq:
 416              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 19


 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 417              		.loc 1 624 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 16
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 10B5     		push	{r4, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 425 0002 84B0     		sub	sp, sp, #16
 426              		.cfi_def_cfa_offset 24
 427 0004 0190     		str	r0, [sp, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 428              		.loc 1 647 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 20


 429 0006 03AC     		add	r4, sp, #12
 430 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 431 000c 0300     		movs	r3, r0
 432 000e 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 433              		.loc 1 697 0
 434 0010 019B     		ldr	r3, [sp, #4]
 435 0012 022B     		cmp	r3, #2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 21


 436 0014 00D8     		bhi	.LCB261
 437 0016 B3E0     		b	.L24	@long jump
 438              	.LCB261:
 439              		.loc 1 697 0 is_stmt 0 discriminator 1
 440 0018 019B     		ldr	r3, [sp, #4]
 441 001a 302B     		cmp	r3, #48
 442 001c 00D9     		bls	.LCB264
 443 001e AFE0     		b	.L24	@long jump
 444              	.LCB264:
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 445              		.loc 1 699 0 is_stmt 1
 446 0020 5D4B     		ldr	r3, .L35
 447 0022 1B78     		ldrb	r3, [r3]
 448 0024 DBB2     		uxtb	r3, r3
 449 0026 1A00     		movs	r2, r3
 450 0028 019B     		ldr	r3, [sp, #4]
 451 002a 9A42     		cmp	r2, r3
 452 002c 0AD3     		bcc	.L25
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 453              		.loc 1 701 0
 454 002e 5B4A     		ldr	r2, .L35+4
 455 0030 0F23     		movs	r3, #15
 456 0032 6B44     		add	r3, r3, sp
 457 0034 1278     		ldrb	r2, [r2]
 458 0036 1A70     		strb	r2, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 459              		.loc 1 702 0
 460 0038 594A     		ldr	r2, .L35+8
 461 003a 0E23     		movs	r3, #14
 462 003c 6B44     		add	r3, r3, sp
 463 003e 1278     		ldrb	r2, [r2]
 464 0040 1A70     		strb	r2, [r3]
 465 0042 3FE0     		b	.L26
 466              	.L25:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 467              		.loc 1 704 0
 468 0044 574B     		ldr	r3, .L35+12
 469 0046 1B78     		ldrb	r3, [r3]
 470 0048 DBB2     		uxtb	r3, r3
 471 004a 1A00     		movs	r2, r3
 472 004c 019B     		ldr	r3, [sp, #4]
 473 004e 9A42     		cmp	r2, r3
 474 0050 0AD3     		bcc	.L27
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 475              		.loc 1 706 0
 476 0052 554A     		ldr	r2, .L35+16
 477 0054 0F23     		movs	r3, #15
 478 0056 6B44     		add	r3, r3, sp
 479 0058 1278     		ldrb	r2, [r2]
 480 005a 1A70     		strb	r2, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 481              		.loc 1 707 0
 482 005c 534A     		ldr	r2, .L35+20
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 22


 483 005e 0E23     		movs	r3, #14
 484 0060 6B44     		add	r3, r3, sp
 485 0062 1278     		ldrb	r2, [r2]
 486 0064 1A70     		strb	r2, [r3]
 487 0066 2DE0     		b	.L26
 488              	.L27:
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 489              		.loc 1 709 0
 490 0068 514B     		ldr	r3, .L35+24
 491 006a 1B78     		ldrb	r3, [r3]
 492 006c DBB2     		uxtb	r3, r3
 493 006e 1A00     		movs	r2, r3
 494 0070 019B     		ldr	r3, [sp, #4]
 495 0072 9A42     		cmp	r2, r3
 496 0074 0AD3     		bcc	.L28
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 497              		.loc 1 711 0
 498 0076 4F4A     		ldr	r2, .L35+28
 499 0078 0F23     		movs	r3, #15
 500 007a 6B44     		add	r3, r3, sp
 501 007c 1278     		ldrb	r2, [r2]
 502 007e 1A70     		strb	r2, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 503              		.loc 1 712 0
 504 0080 4D4A     		ldr	r2, .L35+32
 505 0082 0E23     		movs	r3, #14
 506 0084 6B44     		add	r3, r3, sp
 507 0086 1278     		ldrb	r2, [r2]
 508 0088 1A70     		strb	r2, [r3]
 509 008a 1BE0     		b	.L26
 510              	.L28:
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 511              		.loc 1 714 0
 512 008c 4B4B     		ldr	r3, .L35+36
 513 008e 1B78     		ldrb	r3, [r3]
 514 0090 DBB2     		uxtb	r3, r3
 515 0092 1A00     		movs	r2, r3
 516 0094 019B     		ldr	r3, [sp, #4]
 517 0096 9A42     		cmp	r2, r3
 518 0098 0AD3     		bcc	.L29
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 519              		.loc 1 716 0
 520 009a 494A     		ldr	r2, .L35+40
 521 009c 0F23     		movs	r3, #15
 522 009e 6B44     		add	r3, r3, sp
 523 00a0 1278     		ldrb	r2, [r2]
 524 00a2 1A70     		strb	r2, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 525              		.loc 1 717 0
 526 00a4 474A     		ldr	r2, .L35+44
 527 00a6 0E23     		movs	r3, #14
 528 00a8 6B44     		add	r3, r3, sp
 529 00aa 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 23


 530 00ac 1A70     		strb	r2, [r3]
 531 00ae 09E0     		b	.L26
 532              	.L29:
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 533              		.loc 1 721 0
 534 00b0 454A     		ldr	r2, .L35+48
 535 00b2 0F23     		movs	r3, #15
 536 00b4 6B44     		add	r3, r3, sp
 537 00b6 1278     		ldrb	r2, [r2]
 538 00b8 1A70     		strb	r2, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 539              		.loc 1 722 0
 540 00ba 444A     		ldr	r2, .L35+52
 541 00bc 0E23     		movs	r3, #14
 542 00be 6B44     		add	r3, r3, sp
 543 00c0 1278     		ldrb	r2, [r2]
 544 00c2 1A70     		strb	r2, [r3]
 545              	.L26:
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 546              		.loc 1 726 0
 547 00c4 019B     		ldr	r3, [sp, #4]
 548 00c6 DA1E     		subs	r2, r3, #3
 549 00c8 0B23     		movs	r3, #11
 550 00ca 6B44     		add	r3, r3, sp
 551 00cc 4049     		ldr	r1, .L35+56
 552 00ce 8A5C     		ldrb	r2, [r1, r2]
 553 00d0 1A70     		strb	r2, [r3]
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 554              		.loc 1 738 0
 555 00d2 0B23     		movs	r3, #11
 556 00d4 6B44     		add	r3, r3, sp
 557 00d6 1B78     		ldrb	r3, [r3]
 558 00d8 2F2B     		cmp	r3, #47
 559 00da 0DD9     		bls	.L30
 560              		.loc 1 738 0 is_stmt 0 discriminator 1
 561 00dc 019B     		ldr	r3, [sp, #4]
 562 00de 2A2B     		cmp	r3, #42
 563 00e0 0AD9     		bls	.L30
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 24


 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 564              		.loc 1 741 0 is_stmt 1
 565 00e2 3C4B     		ldr	r3, .L35+60
 566 00e4 1922     		movs	r2, #25
 567 00e6 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 568              		.loc 1 744 0
 569 00e8 0520     		movs	r0, #5
 570 00ea FFF7FEFF 		bl	CyDelayCycles
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 571              		.loc 1 746 0
 572 00ee 0D23     		movs	r3, #13
 573 00f0 6B44     		add	r3, r3, sp
 574 00f2 1922     		movs	r2, #25
 575 00f4 1A70     		strb	r2, [r3]
 576 00f6 07E0     		b	.L31
 577              	.L30:
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 578              		.loc 1 750 0
 579 00f8 364B     		ldr	r3, .L35+60
 580 00fa 1B68     		ldr	r3, [r3]
 581 00fc DAB2     		uxtb	r2, r3
 582 00fe 0D23     		movs	r3, #13
 583 0100 6B44     		add	r3, r3, sp
 584 0102 3F21     		movs	r1, #63
 585 0104 0A40     		ands	r2, r1
 586 0106 1A70     		strb	r2, [r3]
 587              	.L31:
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 588              		.loc 1 762 0
 589 0108 0B22     		movs	r2, #11
 590 010a 6A44     		add	r2, r2, sp
 591 010c 0D23     		movs	r3, #13
 592 010e 6B44     		add	r3, r3, sp
 593 0110 1278     		ldrb	r2, [r2]
 594 0112 1B78     		ldrb	r3, [r3]
 595 0114 9A42     		cmp	r2, r3
 596 0116 08D2     		bcs	.L32
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 25


 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 597              		.loc 1 765 0
 598 0118 2E4B     		ldr	r3, .L35+60
 599 011a 019A     		ldr	r2, [sp, #4]
 600 011c 033A     		subs	r2, r2, #3
 601 011e 2C49     		ldr	r1, .L35+56
 602 0120 8A5C     		ldrb	r2, [r1, r2]
 603 0122 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 604              		.loc 1 766 0
 605 0124 0520     		movs	r0, #5
 606 0126 FFF7FEFF 		bl	CyDelayCycles
 607              	.L32:
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 608              		.loc 1 785 0
 609 012a 019B     		ldr	r3, [sp, #4]
 610 012c 274A     		ldr	r2, .L35+52
 611 012e 9A18     		adds	r2, r3, r2
 612 0130 0A23     		movs	r3, #10
 613 0132 6B44     		add	r3, r3, sp
 614 0134 1278     		ldrb	r2, [r2]
 615 0136 1A70     		strb	r2, [r3]
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 616              		.loc 1 789 0
 617 0138 274B     		ldr	r3, .L35+64
 618 013a 0A22     		movs	r2, #10
 619 013c 6A44     		add	r2, r2, sp
 620 013e 1278     		ldrb	r2, [r2]
 621 0140 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 622              		.loc 1 790 0
 623 0142 264B     		ldr	r3, .L35+68
 624 0144 0F22     		movs	r2, #15
 625 0146 6A44     		add	r2, r2, sp
 626 0148 1278     		ldrb	r2, [r2]
 627 014a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 26


 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 628              		.loc 1 791 0
 629 014c 244B     		ldr	r3, .L35+72
 630 014e 0E22     		movs	r2, #14
 631 0150 6A44     		add	r2, r2, sp
 632 0152 1278     		ldrb	r2, [r2]
 633 0154 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 634              		.loc 1 792 0
 635 0156 0520     		movs	r0, #5
 636 0158 FFF7FEFF 		bl	CyDelayUs
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 637              		.loc 1 794 0
 638 015c 0B22     		movs	r2, #11
 639 015e 6A44     		add	r2, r2, sp
 640 0160 0D23     		movs	r3, #13
 641 0162 6B44     		add	r3, r3, sp
 642 0164 1278     		ldrb	r2, [r2]
 643 0166 1B78     		ldrb	r3, [r3]
 644 0168 9A42     		cmp	r2, r3
 645 016a 0CD9     		bls	.L34
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 646              		.loc 1 797 0
 647 016c 194B     		ldr	r3, .L35+60
 648 016e 019A     		ldr	r2, [sp, #4]
 649 0170 033A     		subs	r2, r2, #3
 650 0172 1749     		ldr	r1, .L35+56
 651 0174 8A5C     		ldrb	r2, [r1, r2]
 652 0176 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 653              		.loc 1 798 0
 654 0178 0520     		movs	r0, #5
 655 017a FFF7FEFF 		bl	CyDelayCycles
 794:Generated_Source\PSoC4/CyLib.c ****             {
 656              		.loc 1 794 0
 657 017e 02E0     		b	.L34
 658              	.L24:
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 659              		.loc 1 804 0 discriminator 1
 660 0180 0020     		movs	r0, #0
 661 0182 FFF7FEFF 		bl	CyHalt
 662              	.L34:
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 27


 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 663              		.loc 1 823 0
 664 0186 03AB     		add	r3, sp, #12
 665 0188 1B78     		ldrb	r3, [r3]
 666 018a 1800     		movs	r0, r3
 667 018c FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 668              		.loc 1 824 0
 669 0190 C046     		nop
 670 0192 04B0     		add	sp, sp, #16
 671              		@ sp needed
 672 0194 10BD     		pop	{r4, pc}
 673              	.L36:
 674 0196 C046     		.align	2
 675              	.L35:
 676 0198 40F3FF0F 		.word	268432192
 677 019c 41F3FF0F 		.word	268432193
 678 01a0 42F3FF0F 		.word	268432194
 679 01a4 43F3FF0F 		.word	268432195
 680 01a8 44F3FF0F 		.word	268432196
 681 01ac 45F3FF0F 		.word	268432197
 682 01b0 46F3FF0F 		.word	268432198
 683 01b4 47F3FF0F 		.word	268432199
 684 01b8 48F3FF0F 		.word	268432200
 685 01bc 49F3FF0F 		.word	268432201
 686 01c0 4AF3FF0F 		.word	268432202
 687 01c4 4BF3FF0F 		.word	268432203
 688 01c8 4CF3FF0F 		.word	268432204
 689 01cc 4DF3FF0F 		.word	268432205
 690 01d0 00000000 		.word	cyImoFreqMhz2Reg
 691 01d4 2CFF0B40 		.word	1074528044
 692 01d8 28FF0B40 		.word	1074528040
 693 01dc 1CFF0B40 		.word	1074528028
 694 01e0 20FF0B40 		.word	1074528032
 695              		.cfi_endproc
 696              	.LFE8:
 697              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 698              		.section	.text.CySysClkEcoStart,"ax",%progbits
 699              		.align	2
 700              		.global	CySysClkEcoStart
 701              		.code	16
 702              		.thumb_func
 703              		.type	CySysClkEcoStart, %function
 704              	CySysClkEcoStart:
 705              	.LFB9:
 825:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 28


 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 29


 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 30


 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 31


 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
 706              		.loc 1 1028 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 16
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710 0000 00B5     		push	{lr}
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 14, -4
 713 0002 85B0     		sub	sp, sp, #20
 714              		.cfi_def_cfa_offset 24
 715 0004 0190     		str	r0, [sp, #4]
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 716              		.loc 1 1029 0
 717 0006 0023     		movs	r3, #0
 718 0008 0393     		str	r3, [sp, #12]
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 719              		.loc 1 1033 0
 720 000a 154B     		ldr	r3, .L43
 721 000c 144A     		ldr	r2, .L43
 722 000e 1268     		ldr	r2, [r2]
 723 0010 0121     		movs	r1, #1
 724 0012 0A43     		orrs	r2, r1
 725 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 32


1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 726              		.loc 1 1036 0
 727 0016 134B     		ldr	r3, .L43+4
 728 0018 134A     		ldr	r2, .L43+8
 729 001a 1A60     		str	r2, [r3]
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 730              		.loc 1 1039 0
 731 001c 134B     		ldr	r3, .L43+12
 732 001e 134A     		ldr	r2, .L43+12
 733 0020 1268     		ldr	r2, [r2]
 734 0022 8021     		movs	r1, #128
 735 0024 0902     		lsls	r1, r1, #8
 736 0026 0A43     		orrs	r2, r1
 737 0028 1A60     		str	r2, [r3]
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 33


1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 34


1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 738              		.loc 1 1137 0
 739 002a 019B     		ldr	r3, [sp, #4]
 740 002c 002B     		cmp	r3, #0
 741 002e 12D0     		beq	.L38
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 742              		.loc 1 1139 0
 743 0030 1023     		movs	r3, #16
 744 0032 0393     		str	r3, [sp, #12]
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 745              		.loc 1 1141 0
 746 0034 0CE0     		b	.L39
 747              	.L41:
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 748              		.loc 1 1143 0
 749 0036 0120     		movs	r0, #1
 750 0038 FFF7FEFF 		bl	CyDelayUs
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 751              		.loc 1 1145 0
 752 003c FFF7FEFF 		bl	CySysClkEcoReadStatus
 753 0040 031E     		subs	r3, r0, #0
 754 0042 02D0     		beq	.L40
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 755              		.loc 1 1147 0
 756 0044 0023     		movs	r3, #0
 757 0046 0393     		str	r3, [sp, #12]
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
 758              		.loc 1 1148 0
 759 0048 05E0     		b	.L38
 760              	.L40:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 761              		.loc 1 1141 0
 762 004a 019B     		ldr	r3, [sp, #4]
 763 004c 013B     		subs	r3, r3, #1
 764 004e 0193     		str	r3, [sp, #4]
 765              	.L39:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 766              		.loc 1 1141 0 is_stmt 0 discriminator 1
 767 0050 019B     		ldr	r3, [sp, #4]
 768 0052 002B     		cmp	r3, #0
 769 0054 EFD1     		bne	.L41
 770              	.L38:
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 771              		.loc 1 1154 0 is_stmt 1
 772 0056 039B     		ldr	r3, [sp, #12]
1155:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 35


 773              		.loc 1 1155 0
 774 0058 1800     		movs	r0, r3
 775 005a 05B0     		add	sp, sp, #20
 776              		@ sp needed
 777 005c 00BD     		pop	{pc}
 778              	.L44:
 779 005e C046     		.align	2
 780              	.L43:
 781 0060 60F02E40 		.word	1076818016
 782 0064 78002E40 		.word	1076756600
 783 0068 02200000 		.word	8194
 784 006c 10002E40 		.word	1076756496
 785              		.cfi_endproc
 786              	.LFE9:
 787              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 788              		.section	.text.CySysClkEcoStop,"ax",%progbits
 789              		.align	2
 790              		.global	CySysClkEcoStop
 791              		.code	16
 792              		.thumb_func
 793              		.type	CySysClkEcoStop, %function
 794              	CySysClkEcoStop:
 795              	.LFB10:
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 796              		.loc 1 1170 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 801              		.loc 1 1173 0
 802 0000 064B     		ldr	r3, .L46
 803 0002 064A     		ldr	r2, .L46
 804 0004 1268     		ldr	r2, [r2]
 805 0006 0121     		movs	r1, #1
 806 0008 8A43     		bics	r2, r1
 807 000a 1A60     		str	r2, [r3]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 808              		.loc 1 1176 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 36


 809 000c 044B     		ldr	r3, .L46+4
 810 000e 044A     		ldr	r2, .L46+4
 811 0010 1268     		ldr	r2, [r2]
 812 0012 0449     		ldr	r1, .L46+8
 813 0014 0A40     		ands	r2, r1
 814 0016 1A60     		str	r2, [r3]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 815              		.loc 1 1182 0
 816 0018 C046     		nop
 817              		@ sp needed
 818 001a 7047     		bx	lr
 819              	.L47:
 820              		.align	2
 821              	.L46:
 822 001c 60F02E40 		.word	1076818016
 823 0020 10002E40 		.word	1076756496
 824 0024 FF7FFFFF 		.word	-32769
 825              		.cfi_endproc
 826              	.LFE10:
 827              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 828              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 829              		.align	2
 830              		.global	CySysClkEcoReadStatus
 831              		.code	16
 832              		.thumb_func
 833              		.type	CySysClkEcoReadStatus, %function
 834              	CySysClkEcoReadStatus:
 835              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 836              		.loc 1 1204 0
 837              		.cfi_startproc
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 37


 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 82B0     		sub	sp, sp, #8
 842              		.cfi_def_cfa_offset 8
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 843              		.loc 1 1208 0
 844 0002 044B     		ldr	r3, .L50
 845 0004 1B68     		ldr	r3, [r3]
 846 0006 0122     		movs	r2, #1
 847 0008 1340     		ands	r3, r2
 848 000a 0193     		str	r3, [sp, #4]
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 849              		.loc 1 1220 0
 850 000c 019B     		ldr	r3, [sp, #4]
1221:Generated_Source\PSoC4/CyLib.c ****     }
 851              		.loc 1 1221 0
 852 000e 1800     		movs	r0, r3
 853 0010 02B0     		add	sp, sp, #8
 854              		@ sp needed
 855 0012 7047     		bx	lr
 856              	.L51:
 857              		.align	2
 858              	.L50:
 859 0014 0C002E40 		.word	1076756492
 860              		.cfi_endproc
 861              	.LFE11:
 862              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 863              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 864              		.align	2
 865              		.global	CySysClkWriteEcoDiv
 866              		.code	16
 867              		.thumb_func
 868              		.type	CySysClkWriteEcoDiv, %function
 869              	CySysClkWriteEcoDiv:
 870              	.LFB12:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 38


1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
 871              		.loc 1 1251 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 16
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875 0000 10B5     		push	{r4, lr}
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 4, -8
 878              		.cfi_offset 14, -4
 879 0002 84B0     		sub	sp, sp, #16
 880              		.cfi_def_cfa_offset 24
 881 0004 0190     		str	r0, [sp, #4]
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 882              		.loc 1 1254 0
 883 0006 114B     		ldr	r3, .L56
 884 0008 1B68     		ldr	r3, [r3]
 885 000a 0722     		movs	r2, #7
 886 000c 1340     		ands	r3, r2
 887 000e 022B     		cmp	r3, #2
 888 0010 16D0     		beq	.L53
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 889              		.loc 1 1256 0
 890 0012 0F24     		movs	r4, #15
 891 0014 6C44     		add	r4, r4, sp
 892 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 893 001a 0300     		movs	r3, r0
 894 001c 2370     		strb	r3, [r4]
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 895              		.loc 1 1258 0
 896 001e 0C4B     		ldr	r3, .L56+4
 897 0020 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 39


 898 0022 0321     		movs	r1, #3
 899 0024 1140     		ands	r1, r2
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 900              		.loc 1 1259 0
 901 0026 0A4A     		ldr	r2, .L56+4
 902 0028 1268     		ldr	r2, [r2]
 903 002a 0320     		movs	r0, #3
 904 002c 8243     		bics	r2, r0
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 905              		.loc 1 1258 0
 906 002e 0A43     		orrs	r2, r1
 907 0030 1A60     		str	r2, [r3]
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 908              		.loc 1 1261 0
 909 0032 0F23     		movs	r3, #15
 910 0034 6B44     		add	r3, r3, sp
 911 0036 1B78     		ldrb	r3, [r3]
 912 0038 1800     		movs	r0, r3
 913 003a FFF7FEFF 		bl	CyExitCriticalSection
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
 914              		.loc 1 1268 0
 915 003e 02E0     		b	.L55
 916              	.L53:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 917              		.loc 1 1266 0 discriminator 1
 918 0040 0020     		movs	r0, #0
 919 0042 FFF7FEFF 		bl	CyHalt
 920              	.L55:
 921              		.loc 1 1268 0
 922 0046 C046     		nop
 923 0048 04B0     		add	sp, sp, #16
 924              		@ sp needed
 925 004a 10BD     		pop	{r4, pc}
 926              	.L57:
 927              		.align	2
 928              	.L56:
 929 004c 00010B40 		.word	1074462976
 930 0050 64F02E40 		.word	1076818020
 931              		.cfi_endproc
 932              	.LFE12:
 933              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 934              		.section	.text.CySysLvdEnable,"ax",%progbits
 935              		.align	2
 936              		.global	CySysLvdEnable
 937              		.code	16
 938              		.thumb_func
 939              		.type	CySysLvdEnable, %function
 940              	CySysLvdEnable:
 941              	.LFB13:
1269:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 40


1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 41


1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 42


1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 43


1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 44


1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 45


1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 46


1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 47


1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 48


1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 49


1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 50


1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 51


1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 52


1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 53


2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 54


2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 942              		.loc 1 2119 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946 0000 00B5     		push	{lr}
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 55


 947              		.cfi_def_cfa_offset 4
 948              		.cfi_offset 14, -4
 949 0002 83B0     		sub	sp, sp, #12
 950              		.cfi_def_cfa_offset 16
 951 0004 0190     		str	r0, [sp, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 952              		.loc 1 2121 0
 953 0006 144B     		ldr	r3, .L59
 954 0008 134A     		ldr	r2, .L59
 955 000a 1268     		ldr	r2, [r2]
 956 000c 0221     		movs	r1, #2
 957 000e 8A43     		bics	r2, r1
 958 0010 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 959              		.loc 1 2124 0
 960 0012 124B     		ldr	r3, .L59+4
 961 0014 114A     		ldr	r2, .L59+4
 962 0016 1268     		ldr	r2, [r2]
 963 0018 1E21     		movs	r1, #30
 964 001a 8A43     		bics	r2, r1
 965 001c 1100     		movs	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 966              		.loc 1 2125 0
 967 001e 019A     		ldr	r2, [sp, #4]
 968 0020 5200     		lsls	r2, r2, #1
 969 0022 1E20     		movs	r0, #30
 970 0024 0240     		ands	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 971              		.loc 1 2124 0
 972 0026 0A43     		orrs	r2, r1
 973 0028 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 974              		.loc 1 2128 0
 975 002a 0C4B     		ldr	r3, .L59+4
 976 002c 0B4A     		ldr	r2, .L59+4
 977 002e 1268     		ldr	r2, [r2]
 978 0030 0121     		movs	r1, #1
 979 0032 0A43     		orrs	r2, r1
 980 0034 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 981              		.loc 1 2131 0
 982 0036 FA23     		movs	r3, #250
 983 0038 9B00     		lsls	r3, r3, #2
 984 003a 1800     		movs	r0, r3
 985 003c FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 986              		.loc 1 2134 0
 987 0040 FFF7FEFF 		bl	CySysLvdClearInterrupt
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 56


2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 988              		.loc 1 2137 0
 989 0044 044B     		ldr	r3, .L59
 990 0046 044A     		ldr	r2, .L59
 991 0048 1268     		ldr	r2, [r2]
 992 004a 0221     		movs	r1, #2
 993 004c 0A43     		orrs	r2, r1
 994 004e 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 995              		.loc 1 2138 0
 996 0050 C046     		nop
 997 0052 03B0     		add	sp, sp, #12
 998              		@ sp needed
 999 0054 00BD     		pop	{pc}
 1000              	.L60:
 1001 0056 C046     		.align	2
 1002              	.L59:
 1003 0058 08000B40 		.word	1074462728
 1004 005c 18000B40 		.word	1074462744
 1005              		.cfi_endproc
 1006              	.LFE13:
 1007              		.size	CySysLvdEnable, .-CySysLvdEnable
 1008              		.section	.text.CySysLvdDisable,"ax",%progbits
 1009              		.align	2
 1010              		.global	CySysLvdDisable
 1011              		.code	16
 1012              		.thumb_func
 1013              		.type	CySysLvdDisable, %function
 1014              	CySysLvdDisable:
 1015              	.LFB14:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 1016              		.loc 1 2149 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1021              		.loc 1 2150 0
 1022 0000 064B     		ldr	r3, .L62
 1023 0002 064A     		ldr	r2, .L62
 1024 0004 1268     		ldr	r2, [r2]
 1025 0006 0221     		movs	r1, #2
 1026 0008 8A43     		bics	r2, r1
 1027 000a 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 57


 1028              		.loc 1 2151 0
 1029 000c 044B     		ldr	r3, .L62+4
 1030 000e 044A     		ldr	r2, .L62+4
 1031 0010 1268     		ldr	r2, [r2]
 1032 0012 0121     		movs	r1, #1
 1033 0014 8A43     		bics	r2, r1
 1034 0016 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 1035              		.loc 1 2152 0
 1036 0018 C046     		nop
 1037              		@ sp needed
 1038 001a 7047     		bx	lr
 1039              	.L63:
 1040              		.align	2
 1041              	.L62:
 1042 001c 08000B40 		.word	1074462728
 1043 0020 18000B40 		.word	1074462744
 1044              		.cfi_endproc
 1045              	.LFE14:
 1046              		.size	CySysLvdDisable, .-CySysLvdDisable
 1047              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1048              		.align	2
 1049              		.global	CySysLvdGetInterruptSource
 1050              		.code	16
 1051              		.thumb_func
 1052              		.type	CySysLvdGetInterruptSource, %function
 1053              	CySysLvdGetInterruptSource:
 1054              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 1055              		.loc 1 2167 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1060              		.loc 1 2168 0
 1061 0000 024B     		ldr	r3, .L66
 1062 0002 1B68     		ldr	r3, [r3]
 1063 0004 0222     		movs	r2, #2
 1064 0006 1340     		ands	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 1065              		.loc 1 2169 0
 1066 0008 1800     		movs	r0, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 58


 1067              		@ sp needed
 1068 000a 7047     		bx	lr
 1069              	.L67:
 1070              		.align	2
 1071              	.L66:
 1072 000c 04000B40 		.word	1074462724
 1073              		.cfi_endproc
 1074              	.LFE15:
 1075              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1076              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1077              		.align	2
 1078              		.global	CySysLvdClearInterrupt
 1079              		.code	16
 1080              		.thumb_func
 1081              		.type	CySysLvdClearInterrupt, %function
 1082              	CySysLvdClearInterrupt:
 1083              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 1084              		.loc 1 2183 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1089              		.loc 1 2184 0
 1090 0000 024B     		ldr	r3, .L69
 1091 0002 0222     		movs	r2, #2
 1092 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 1093              		.loc 1 2185 0
 1094 0006 C046     		nop
 1095              		@ sp needed
 1096 0008 7047     		bx	lr
 1097              	.L70:
 1098 000a C046     		.align	2
 1099              	.L69:
 1100 000c 04000B40 		.word	1074462724
 1101              		.cfi_endproc
 1102              	.LFE16:
 1103              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1104              		.section	.text.CySysGetResetReason,"ax",%progbits
 1105              		.align	2
 1106              		.global	CySysGetResetReason
 1107              		.code	16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 59


 1108              		.thumb_func
 1109              		.type	CySysGetResetReason, %function
 1110              	CySysGetResetReason:
 1111              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 1112              		.loc 1 2209 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 16
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117 0000 84B0     		sub	sp, sp, #16
 1118              		.cfi_def_cfa_offset 16
 1119 0002 0190     		str	r0, [sp, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1120              		.loc 1 2212 0
 1121 0004 019B     		ldr	r3, [sp, #4]
 1122 0006 1922     		movs	r2, #25
 1123 0008 1340     		ands	r3, r2
 1124 000a 0193     		str	r3, [sp, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1125              		.loc 1 2213 0
 1126 000c 054B     		ldr	r3, .L73
 1127 000e 1B68     		ldr	r3, [r3]
 1128 0010 1922     		movs	r2, #25
 1129 0012 1340     		ands	r3, r2
 1130 0014 0393     		str	r3, [sp, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1131              		.loc 1 2215 0
 1132 0016 034B     		ldr	r3, .L73
 1133 0018 019A     		ldr	r2, [sp, #4]
 1134 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 60


2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1135              		.loc 1 2217 0
 1136 001c 039B     		ldr	r3, [sp, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 1137              		.loc 1 2218 0
 1138 001e 1800     		movs	r0, r3
 1139 0020 04B0     		add	sp, sp, #16
 1140              		@ sp needed
 1141 0022 7047     		bx	lr
 1142              	.L74:
 1143              		.align	2
 1144              	.L73:
 1145 0024 00030B40 		.word	1074463488
 1146              		.cfi_endproc
 1147              	.LFE17:
 1148              		.size	CySysGetResetReason, .-CySysGetResetReason
 1149              		.section	.text.CyDisableInts,"ax",%progbits
 1150              		.align	2
 1151              		.global	CyDisableInts
 1152              		.code	16
 1153              		.thumb_func
 1154              		.type	CyDisableInts, %function
 1155              	CyDisableInts:
 1156              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 1157              		.loc 1 2232 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 8
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 0000 82B0     		sub	sp, sp, #8
 1163              		.cfi_def_cfa_offset 8
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1164              		.loc 1 2236 0
 1165 0002 054B     		ldr	r3, .L77
 1166 0004 1B68     		ldr	r3, [r3]
 1167 0006 0193     		str	r3, [sp, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 61


 1168              		.loc 1 2239 0
 1169 0008 034B     		ldr	r3, .L77
 1170 000a 0122     		movs	r2, #1
 1171 000c 5242     		rsbs	r2, r2, #0
 1172 000e 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1173              		.loc 1 2241 0
 1174 0010 019B     		ldr	r3, [sp, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 1175              		.loc 1 2242 0
 1176 0012 1800     		movs	r0, r3
 1177 0014 02B0     		add	sp, sp, #8
 1178              		@ sp needed
 1179 0016 7047     		bx	lr
 1180              	.L78:
 1181              		.align	2
 1182              	.L77:
 1183 0018 80E100E0 		.word	-536813184
 1184              		.cfi_endproc
 1185              	.LFE18:
 1186              		.size	CyDisableInts, .-CyDisableInts
 1187              		.section	.text.CyEnableInts,"ax",%progbits
 1188              		.align	2
 1189              		.global	CyEnableInts
 1190              		.code	16
 1191              		.thumb_func
 1192              		.type	CyEnableInts, %function
 1193              	CyEnableInts:
 1194              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 1195              		.loc 1 2255 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 8
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200 0000 82B0     		sub	sp, sp, #8
 1201              		.cfi_def_cfa_offset 8
 1202 0002 0190     		str	r0, [sp, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1203              		.loc 1 2256 0
 1204 0004 024B     		ldr	r3, .L80
 1205 0006 019A     		ldr	r2, [sp, #4]
 1206 0008 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 62


 1207              		.loc 1 2257 0
 1208 000a C046     		nop
 1209 000c 02B0     		add	sp, sp, #8
 1210              		@ sp needed
 1211 000e 7047     		bx	lr
 1212              	.L81:
 1213              		.align	2
 1214              	.L80:
 1215 0010 00E100E0 		.word	-536813312
 1216              		.cfi_endproc
 1217              	.LFE19:
 1218              		.size	CyEnableInts, .-CyEnableInts
 1219              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1220              		.align	2
 1221              		.global	CyIntSetSysVector
 1222              		.code	16
 1223              		.thumb_func
 1224              		.type	CyIntSetSysVector, %function
 1225              	CyIntSetSysVector:
 1226              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1227              		.loc 1 2280 0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 16
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
 1231 0000 00B5     		push	{lr}
 1232              		.cfi_def_cfa_offset 4
 1233              		.cfi_offset 14, -4
 1234 0002 85B0     		sub	sp, sp, #20
 1235              		.cfi_def_cfa_offset 24
 1236 0004 0200     		movs	r2, r0
 1237 0006 0091     		str	r1, [sp]
 1238 0008 6B46     		mov	r3, sp
 1239 000a 0733     		adds	r3, r3, #7
 1240 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 63


2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1241              		.loc 1 2282 0
 1242 000e 8023     		movs	r3, #128
 1243 0010 9B05     		lsls	r3, r3, #22
 1244 0012 0393     		str	r3, [sp, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1245              		.loc 1 2284 0
 1246 0014 6B46     		mov	r3, sp
 1247 0016 0733     		adds	r3, r3, #7
 1248 0018 1B78     		ldrb	r3, [r3]
 1249 001a 0F2B     		cmp	r3, #15
 1250 001c 02D9     		bls	.L83
 1251              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1252 001e 0020     		movs	r0, #0
 1253 0020 FFF7FEFF 		bl	CyHalt
 1254              	.L83:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1255              		.loc 1 2287 0 is_stmt 1
 1256 0024 6B46     		mov	r3, sp
 1257 0026 0733     		adds	r3, r3, #7
 1258 0028 1B78     		ldrb	r3, [r3]
 1259 002a 9B00     		lsls	r3, r3, #2
 1260 002c 039A     		ldr	r2, [sp, #12]
 1261 002e D318     		adds	r3, r2, r3
 1262 0030 1B68     		ldr	r3, [r3]
 1263 0032 0293     		str	r3, [sp, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1264              		.loc 1 2290 0
 1265 0034 6B46     		mov	r3, sp
 1266 0036 0733     		adds	r3, r3, #7
 1267 0038 1B78     		ldrb	r3, [r3]
 1268 003a 9B00     		lsls	r3, r3, #2
 1269 003c 039A     		ldr	r2, [sp, #12]
 1270 003e D318     		adds	r3, r2, r3
 1271 0040 009A     		ldr	r2, [sp]
 1272 0042 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1273              		.loc 1 2292 0
 1274 0044 029B     		ldr	r3, [sp, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1275              		.loc 1 2293 0
 1276 0046 1800     		movs	r0, r3
 1277 0048 05B0     		add	sp, sp, #20
 1278              		@ sp needed
 1279 004a 00BD     		pop	{pc}
 1280              		.cfi_endproc
 1281              	.LFE20:
 1282              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1283              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1284              		.align	2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 64


 1285              		.global	CyIntGetSysVector
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	CyIntGetSysVector, %function
 1289              	CyIntGetSysVector:
 1290              	.LFB21:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1291              		.loc 1 2314 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 16
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295 0000 00B5     		push	{lr}
 1296              		.cfi_def_cfa_offset 4
 1297              		.cfi_offset 14, -4
 1298 0002 85B0     		sub	sp, sp, #20
 1299              		.cfi_def_cfa_offset 24
 1300 0004 0200     		movs	r2, r0
 1301 0006 6B46     		mov	r3, sp
 1302 0008 0733     		adds	r3, r3, #7
 1303 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1304              		.loc 1 2315 0
 1305 000c 8023     		movs	r3, #128
 1306 000e 9B05     		lsls	r3, r3, #22
 1307 0010 0393     		str	r3, [sp, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1308              		.loc 1 2317 0
 1309 0012 6B46     		mov	r3, sp
 1310 0014 0733     		adds	r3, r3, #7
 1311 0016 1B78     		ldrb	r3, [r3]
 1312 0018 0F2B     		cmp	r3, #15
 1313 001a 02D9     		bls	.L86
 1314              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1315 001c 0020     		movs	r0, #0
 1316 001e FFF7FEFF 		bl	CyHalt
 1317              	.L86:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 65


2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1318              		.loc 1 2319 0 is_stmt 1
 1319 0022 6B46     		mov	r3, sp
 1320 0024 0733     		adds	r3, r3, #7
 1321 0026 1B78     		ldrb	r3, [r3]
 1322 0028 9B00     		lsls	r3, r3, #2
 1323 002a 039A     		ldr	r2, [sp, #12]
 1324 002c D318     		adds	r3, r2, r3
 1325 002e 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1326              		.loc 1 2320 0
 1327 0030 1800     		movs	r0, r3
 1328 0032 05B0     		add	sp, sp, #20
 1329              		@ sp needed
 1330 0034 00BD     		pop	{pc}
 1331              		.cfi_endproc
 1332              	.LFE21:
 1333              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1334              		.section	.text.CyIntSetVector,"ax",%progbits
 1335              		.align	2
 1336              		.global	CyIntSetVector
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	CyIntSetVector, %function
 1340              	CyIntSetVector:
 1341              	.LFB22:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1342              		.loc 1 2336 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 16
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346 0000 00B5     		push	{lr}
 1347              		.cfi_def_cfa_offset 4
 1348              		.cfi_offset 14, -4
 1349 0002 85B0     		sub	sp, sp, #20
 1350              		.cfi_def_cfa_offset 24
 1351 0004 0200     		movs	r2, r0
 1352 0006 0091     		str	r1, [sp]
 1353 0008 6B46     		mov	r3, sp
 1354 000a 0733     		adds	r3, r3, #7
 1355 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 66


2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1356              		.loc 1 2338 0
 1357 000e 8023     		movs	r3, #128
 1358 0010 9B05     		lsls	r3, r3, #22
 1359 0012 0393     		str	r3, [sp, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1360              		.loc 1 2340 0
 1361 0014 6B46     		mov	r3, sp
 1362 0016 0733     		adds	r3, r3, #7
 1363 0018 1B78     		ldrb	r3, [r3]
 1364 001a 1F2B     		cmp	r3, #31
 1365 001c 02D9     		bls	.L89
 1366              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1367 001e 0020     		movs	r0, #0
 1368 0020 FFF7FEFF 		bl	CyHalt
 1369              	.L89:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1370              		.loc 1 2343 0 is_stmt 1
 1371 0024 6B46     		mov	r3, sp
 1372 0026 0733     		adds	r3, r3, #7
 1373 0028 1B78     		ldrb	r3, [r3]
 1374 002a 1033     		adds	r3, r3, #16
 1375 002c 9B00     		lsls	r3, r3, #2
 1376 002e 039A     		ldr	r2, [sp, #12]
 1377 0030 D318     		adds	r3, r2, r3
 1378 0032 1B68     		ldr	r3, [r3]
 1379 0034 0293     		str	r3, [sp, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1380              		.loc 1 2346 0
 1381 0036 6B46     		mov	r3, sp
 1382 0038 0733     		adds	r3, r3, #7
 1383 003a 1B78     		ldrb	r3, [r3]
 1384 003c 1033     		adds	r3, r3, #16
 1385 003e 9B00     		lsls	r3, r3, #2
 1386 0040 039A     		ldr	r2, [sp, #12]
 1387 0042 D318     		adds	r3, r2, r3
 1388 0044 009A     		ldr	r2, [sp]
 1389 0046 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1390              		.loc 1 2348 0
 1391 0048 029B     		ldr	r3, [sp, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1392              		.loc 1 2349 0
 1393 004a 1800     		movs	r0, r3
 1394 004c 05B0     		add	sp, sp, #20
 1395              		@ sp needed
 1396 004e 00BD     		pop	{pc}
 1397              		.cfi_endproc
 1398              	.LFE22:
 1399              		.size	CyIntSetVector, .-CyIntSetVector
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 67


 1400              		.section	.text.CyIntGetVector,"ax",%progbits
 1401              		.align	2
 1402              		.global	CyIntGetVector
 1403              		.code	16
 1404              		.thumb_func
 1405              		.type	CyIntGetVector, %function
 1406              	CyIntGetVector:
 1407              	.LFB23:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1408              		.loc 1 2364 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 16
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412 0000 00B5     		push	{lr}
 1413              		.cfi_def_cfa_offset 4
 1414              		.cfi_offset 14, -4
 1415 0002 85B0     		sub	sp, sp, #20
 1416              		.cfi_def_cfa_offset 24
 1417 0004 0200     		movs	r2, r0
 1418 0006 6B46     		mov	r3, sp
 1419 0008 0733     		adds	r3, r3, #7
 1420 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1421              		.loc 1 2365 0
 1422 000c 8023     		movs	r3, #128
 1423 000e 9B05     		lsls	r3, r3, #22
 1424 0010 0393     		str	r3, [sp, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1425              		.loc 1 2367 0
 1426 0012 6B46     		mov	r3, sp
 1427 0014 0733     		adds	r3, r3, #7
 1428 0016 1B78     		ldrb	r3, [r3]
 1429 0018 1F2B     		cmp	r3, #31
 1430 001a 02D9     		bls	.L92
 1431              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1432 001c 0020     		movs	r0, #0
 1433 001e FFF7FEFF 		bl	CyHalt
 1434              	.L92:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1435              		.loc 1 2369 0 is_stmt 1
 1436 0022 6B46     		mov	r3, sp
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 68


 1437 0024 0733     		adds	r3, r3, #7
 1438 0026 1B78     		ldrb	r3, [r3]
 1439 0028 1033     		adds	r3, r3, #16
 1440 002a 9B00     		lsls	r3, r3, #2
 1441 002c 039A     		ldr	r2, [sp, #12]
 1442 002e D318     		adds	r3, r2, r3
 1443 0030 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1444              		.loc 1 2370 0
 1445 0032 1800     		movs	r0, r3
 1446 0034 05B0     		add	sp, sp, #20
 1447              		@ sp needed
 1448 0036 00BD     		pop	{pc}
 1449              		.cfi_endproc
 1450              	.LFE23:
 1451              		.size	CyIntGetVector, .-CyIntGetVector
 1452              		.section	.text.CyIntSetPriority,"ax",%progbits
 1453              		.align	2
 1454              		.global	CyIntSetPriority
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CyIntSetPriority, %function
 1458              	CyIntSetPriority:
 1459              	.LFB24:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 2383 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 24
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464 0000 10B5     		push	{r4, lr}
 1465              		.cfi_def_cfa_offset 8
 1466              		.cfi_offset 4, -8
 1467              		.cfi_offset 14, -4
 1468 0002 86B0     		sub	sp, sp, #24
 1469              		.cfi_def_cfa_offset 32
 1470 0004 0200     		movs	r2, r0
 1471 0006 6B46     		mov	r3, sp
 1472 0008 0733     		adds	r3, r3, #7
 1473 000a 1A70     		strb	r2, [r3]
 1474 000c 6B46     		mov	r3, sp
 1475 000e 0633     		adds	r3, r3, #6
 1476 0010 0A1C     		adds	r2, r1, #0
 1477 0012 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 69


2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1478              		.loc 1 2388 0
 1479 0014 6B46     		mov	r3, sp
 1480 0016 0633     		adds	r3, r3, #6
 1481 0018 1B78     		ldrb	r3, [r3]
 1482 001a 032B     		cmp	r3, #3
 1483 001c 02D9     		bls	.L95
 1484              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1485 001e 0020     		movs	r0, #0
 1486 0020 FFF7FEFF 		bl	CyHalt
 1487              	.L95:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1488              		.loc 1 2389 0 is_stmt 1
 1489 0024 6B46     		mov	r3, sp
 1490 0026 0733     		adds	r3, r3, #7
 1491 0028 1B78     		ldrb	r3, [r3]
 1492 002a 1F2B     		cmp	r3, #31
 1493 002c 02D9     		bls	.L96
 1494              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1495 002e 0020     		movs	r0, #0
 1496 0030 FFF7FEFF 		bl	CyHalt
 1497              	.L96:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1498              		.loc 1 2391 0 is_stmt 1
 1499 0034 6B46     		mov	r3, sp
 1500 0036 0733     		adds	r3, r3, #7
 1501 0038 1B78     		ldrb	r3, [r3]
 1502 003a 0322     		movs	r2, #3
 1503 003c 1340     		ands	r3, r2
 1504 003e DB00     		lsls	r3, r3, #3
 1505 0040 0633     		adds	r3, r3, #6
 1506 0042 0593     		str	r3, [sp, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1507              		.loc 1 2393 0
 1508 0044 1324     		movs	r4, #19
 1509 0046 6C44     		add	r4, r4, sp
 1510 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 1511 004c 0300     		movs	r3, r0
 1512 004e 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1513              		.loc 1 2395 0
 1514 0050 6B46     		mov	r3, sp
 1515 0052 0733     		adds	r3, r3, #7
 1516 0054 1B78     		ldrb	r3, [r3]
 1517 0056 9B08     		lsrs	r3, r3, #2
 1518 0058 DBB2     		uxtb	r3, r3
 1519 005a 9B00     		lsls	r3, r3, #2
 1520 005c 144A     		ldr	r2, .L97
 1521 005e 9446     		mov	ip, r2
 1522 0060 6344     		add	r3, r3, ip
 1523 0062 1B68     		ldr	r3, [r3]
 1524 0064 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 70


2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1525              		.loc 1 2396 0
 1526 0066 0322     		movs	r2, #3
 1527 0068 059B     		ldr	r3, [sp, #20]
 1528 006a 9A40     		lsls	r2, r2, r3
 1529 006c 1300     		movs	r3, r2
 1530 006e DA43     		mvns	r2, r3
 1531 0070 039B     		ldr	r3, [sp, #12]
 1532 0072 1340     		ands	r3, r2
 1533 0074 0393     		str	r3, [sp, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1534              		.loc 1 2397 0
 1535 0076 6B46     		mov	r3, sp
 1536 0078 0633     		adds	r3, r3, #6
 1537 007a 1A78     		ldrb	r2, [r3]
 1538 007c 059B     		ldr	r3, [sp, #20]
 1539 007e 9A40     		lsls	r2, r2, r3
 1540 0080 1300     		movs	r3, r2
 1541 0082 039A     		ldr	r2, [sp, #12]
 1542 0084 1343     		orrs	r3, r2
 1543 0086 0393     		str	r3, [sp, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1544              		.loc 1 2398 0
 1545 0088 6B46     		mov	r3, sp
 1546 008a 0733     		adds	r3, r3, #7
 1547 008c 1B78     		ldrb	r3, [r3]
 1548 008e 9B08     		lsrs	r3, r3, #2
 1549 0090 DBB2     		uxtb	r3, r3
 1550 0092 9B00     		lsls	r3, r3, #2
 1551 0094 064A     		ldr	r2, .L97
 1552 0096 9446     		mov	ip, r2
 1553 0098 6344     		add	r3, r3, ip
 1554 009a 039A     		ldr	r2, [sp, #12]
 1555 009c 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1556              		.loc 1 2400 0
 1557 009e 1323     		movs	r3, #19
 1558 00a0 6B44     		add	r3, r3, sp
 1559 00a2 1B78     		ldrb	r3, [r3]
 1560 00a4 1800     		movs	r0, r3
 1561 00a6 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1562              		.loc 1 2401 0
 1563 00aa C046     		nop
 1564 00ac 06B0     		add	sp, sp, #24
 1565              		@ sp needed
 1566 00ae 10BD     		pop	{r4, pc}
 1567              	.L98:
 1568              		.align	2
 1569              	.L97:
 1570 00b0 00E400E0 		.word	-536812544
 1571              		.cfi_endproc
 1572              	.LFE24:
 1573              		.size	CyIntSetPriority, .-CyIntSetPriority
 1574              		.section	.text.CyIntGetPriority,"ax",%progbits
 1575              		.align	2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 71


 1576              		.global	CyIntGetPriority
 1577              		.code	16
 1578              		.thumb_func
 1579              		.type	CyIntGetPriority, %function
 1580              	CyIntGetPriority:
 1581              	.LFB25:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1582              		.loc 1 2417 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 16
 1585              		@ frame_needed = 0, uses_anonymous_args = 0
 1586 0000 00B5     		push	{lr}
 1587              		.cfi_def_cfa_offset 4
 1588              		.cfi_offset 14, -4
 1589 0002 85B0     		sub	sp, sp, #20
 1590              		.cfi_def_cfa_offset 24
 1591 0004 0200     		movs	r2, r0
 1592 0006 6B46     		mov	r3, sp
 1593 0008 0733     		adds	r3, r3, #7
 1594 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1595              		.loc 1 2420 0
 1596 000c 6B46     		mov	r3, sp
 1597 000e 0733     		adds	r3, r3, #7
 1598 0010 1B78     		ldrb	r3, [r3]
 1599 0012 1F2B     		cmp	r3, #31
 1600 0014 02D9     		bls	.L100
 1601              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1602 0016 0020     		movs	r0, #0
 1603 0018 FFF7FEFF 		bl	CyHalt
 1604              	.L100:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1605              		.loc 1 2422 0 is_stmt 1
 1606 001c 6B46     		mov	r3, sp
 1607 001e 0733     		adds	r3, r3, #7
 1608 0020 1B78     		ldrb	r3, [r3]
 1609 0022 9B08     		lsrs	r3, r3, #2
 1610 0024 DBB2     		uxtb	r3, r3
 1611 0026 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 72


 1612 0028 0B4A     		ldr	r2, .L102
 1613 002a 9446     		mov	ip, r2
 1614 002c 6344     		add	r3, r3, ip
 1615 002e 1A68     		ldr	r2, [r3]
 1616 0030 6B46     		mov	r3, sp
 1617 0032 0733     		adds	r3, r3, #7
 1618 0034 1B78     		ldrb	r3, [r3]
 1619 0036 0321     		movs	r1, #3
 1620 0038 0B40     		ands	r3, r1
 1621 003a DB00     		lsls	r3, r3, #3
 1622 003c 0633     		adds	r3, r3, #6
 1623 003e DA40     		lsrs	r2, r2, r3
 1624 0040 0F23     		movs	r3, #15
 1625 0042 6B44     		add	r3, r3, sp
 1626 0044 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1627              		.loc 1 2424 0
 1628 0046 0F23     		movs	r3, #15
 1629 0048 6B44     		add	r3, r3, sp
 1630 004a 1B78     		ldrb	r3, [r3]
 1631 004c 0322     		movs	r2, #3
 1632 004e 1340     		ands	r3, r2
 1633 0050 DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1634              		.loc 1 2425 0
 1635 0052 1800     		movs	r0, r3
 1636 0054 05B0     		add	sp, sp, #20
 1637              		@ sp needed
 1638 0056 00BD     		pop	{pc}
 1639              	.L103:
 1640              		.align	2
 1641              	.L102:
 1642 0058 00E400E0 		.word	-536812544
 1643              		.cfi_endproc
 1644              	.LFE25:
 1645              		.size	CyIntGetPriority, .-CyIntGetPriority
 1646              		.section	.text.CyIntEnable,"ax",%progbits
 1647              		.align	2
 1648              		.global	CyIntEnable
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	CyIntEnable, %function
 1652              	CyIntEnable:
 1653              	.LFB26:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 73


2438:Generated_Source\PSoC4/CyLib.c **** {
 1654              		.loc 1 2438 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 8
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659 0000 82B0     		sub	sp, sp, #8
 1660              		.cfi_def_cfa_offset 8
 1661 0002 0200     		movs	r2, r0
 1662 0004 6B46     		mov	r3, sp
 1663 0006 0733     		adds	r3, r3, #7
 1664 0008 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1665              		.loc 1 2439 0
 1666 000a 064B     		ldr	r3, .L105
 1667 000c 6A46     		mov	r2, sp
 1668 000e 0732     		adds	r2, r2, #7
 1669 0010 1278     		ldrb	r2, [r2]
 1670 0012 1F21     		movs	r1, #31
 1671 0014 0A40     		ands	r2, r1
 1672 0016 0121     		movs	r1, #1
 1673 0018 9140     		lsls	r1, r1, r2
 1674 001a 0A00     		movs	r2, r1
 1675 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1676              		.loc 1 2440 0
 1677 001e C046     		nop
 1678 0020 02B0     		add	sp, sp, #8
 1679              		@ sp needed
 1680 0022 7047     		bx	lr
 1681              	.L106:
 1682              		.align	2
 1683              	.L105:
 1684 0024 00E100E0 		.word	-536813312
 1685              		.cfi_endproc
 1686              	.LFE26:
 1687              		.size	CyIntEnable, .-CyIntEnable
 1688              		.section	.text.CyIntGetState,"ax",%progbits
 1689              		.align	2
 1690              		.global	CyIntGetState
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CyIntGetState, %function
 1694              	CyIntGetState:
 1695              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 74


2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 2456 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 8
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
 1701 0000 82B0     		sub	sp, sp, #8
 1702              		.cfi_def_cfa_offset 8
 1703 0002 0200     		movs	r2, r0
 1704 0004 6B46     		mov	r3, sp
 1705 0006 0733     		adds	r3, r3, #7
 1706 0008 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1707              		.loc 1 2458 0
 1708 000a 084B     		ldr	r3, .L109
 1709 000c 1A68     		ldr	r2, [r3]
 1710 000e 6B46     		mov	r3, sp
 1711 0010 0733     		adds	r3, r3, #7
 1712 0012 1B78     		ldrb	r3, [r3]
 1713 0014 1F21     		movs	r1, #31
 1714 0016 0B40     		ands	r3, r1
 1715 0018 DA40     		lsrs	r2, r2, r3
 1716 001a 1300     		movs	r3, r2
 1717 001c DBB2     		uxtb	r3, r3
 1718 001e 0122     		movs	r2, #1
 1719 0020 1340     		ands	r3, r2
 1720 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1721              		.loc 1 2459 0
 1722 0024 1800     		movs	r0, r3
 1723 0026 02B0     		add	sp, sp, #8
 1724              		@ sp needed
 1725 0028 7047     		bx	lr
 1726              	.L110:
 1727 002a C046     		.align	2
 1728              	.L109:
 1729 002c 00E100E0 		.word	-536813312
 1730              		.cfi_endproc
 1731              	.LFE27:
 1732              		.size	CyIntGetState, .-CyIntGetState
 1733              		.section	.text.CyIntDisable,"ax",%progbits
 1734              		.align	2
 1735              		.global	CyIntDisable
 1736              		.code	16
 1737              		.thumb_func
 1738              		.type	CyIntDisable, %function
 1739              	CyIntDisable:
 1740              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 75


2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1741              		.loc 1 2472 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 8
 1744              		@ frame_needed = 0, uses_anonymous_args = 0
 1745              		@ link register save eliminated.
 1746 0000 82B0     		sub	sp, sp, #8
 1747              		.cfi_def_cfa_offset 8
 1748 0002 0200     		movs	r2, r0
 1749 0004 6B46     		mov	r3, sp
 1750 0006 0733     		adds	r3, r3, #7
 1751 0008 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1752              		.loc 1 2473 0
 1753 000a 064B     		ldr	r3, .L112
 1754 000c 6A46     		mov	r2, sp
 1755 000e 0732     		adds	r2, r2, #7
 1756 0010 1278     		ldrb	r2, [r2]
 1757 0012 1F21     		movs	r1, #31
 1758 0014 0A40     		ands	r2, r1
 1759 0016 0121     		movs	r1, #1
 1760 0018 9140     		lsls	r1, r1, r2
 1761 001a 0A00     		movs	r2, r1
 1762 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 1763              		.loc 1 2474 0
 1764 001e C046     		nop
 1765 0020 02B0     		add	sp, sp, #8
 1766              		@ sp needed
 1767 0022 7047     		bx	lr
 1768              	.L113:
 1769              		.align	2
 1770              	.L112:
 1771 0024 80E100E0 		.word	-536813184
 1772              		.cfi_endproc
 1773              	.LFE28:
 1774              		.size	CyIntDisable, .-CyIntDisable
 1775              		.section	.text.CyIntSetPending,"ax",%progbits
 1776              		.align	2
 1777              		.global	CyIntSetPending
 1778              		.code	16
 1779              		.thumb_func
 1780              		.type	CyIntSetPending, %function
 1781              	CyIntSetPending:
 1782              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 76


2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1783              		.loc 1 2486 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 8
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              		@ link register save eliminated.
 1788 0000 82B0     		sub	sp, sp, #8
 1789              		.cfi_def_cfa_offset 8
 1790 0002 0200     		movs	r2, r0
 1791 0004 6B46     		mov	r3, sp
 1792 0006 0733     		adds	r3, r3, #7
 1793 0008 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1794              		.loc 1 2487 0
 1795 000a 064B     		ldr	r3, .L115
 1796 000c 6A46     		mov	r2, sp
 1797 000e 0732     		adds	r2, r2, #7
 1798 0010 1278     		ldrb	r2, [r2]
 1799 0012 1F21     		movs	r1, #31
 1800 0014 0A40     		ands	r2, r1
 1801 0016 0121     		movs	r1, #1
 1802 0018 9140     		lsls	r1, r1, r2
 1803 001a 0A00     		movs	r2, r1
 1804 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1805              		.loc 1 2488 0
 1806 001e C046     		nop
 1807 0020 02B0     		add	sp, sp, #8
 1808              		@ sp needed
 1809 0022 7047     		bx	lr
 1810              	.L116:
 1811              		.align	2
 1812              	.L115:
 1813 0024 00E200E0 		.word	-536813056
 1814              		.cfi_endproc
 1815              	.LFE29:
 1816              		.size	CyIntSetPending, .-CyIntSetPending
 1817              		.section	.text.CyIntClearPending,"ax",%progbits
 1818              		.align	2
 1819              		.global	CyIntClearPending
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	CyIntClearPending, %function
 1823              	CyIntClearPending:
 1824              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 77


2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1825              		.loc 1 2501 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 8
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830 0000 82B0     		sub	sp, sp, #8
 1831              		.cfi_def_cfa_offset 8
 1832 0002 0200     		movs	r2, r0
 1833 0004 6B46     		mov	r3, sp
 1834 0006 0733     		adds	r3, r3, #7
 1835 0008 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1836              		.loc 1 2502 0
 1837 000a 064B     		ldr	r3, .L118
 1838 000c 6A46     		mov	r2, sp
 1839 000e 0732     		adds	r2, r2, #7
 1840 0010 1278     		ldrb	r2, [r2]
 1841 0012 1F21     		movs	r1, #31
 1842 0014 0A40     		ands	r2, r1
 1843 0016 0121     		movs	r1, #1
 1844 0018 9140     		lsls	r1, r1, r2
 1845 001a 0A00     		movs	r2, r1
 1846 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1847              		.loc 1 2503 0
 1848 001e C046     		nop
 1849 0020 02B0     		add	sp, sp, #8
 1850              		@ sp needed
 1851 0022 7047     		bx	lr
 1852              	.L119:
 1853              		.align	2
 1854              	.L118:
 1855 0024 80E200E0 		.word	-536812928
 1856              		.cfi_endproc
 1857              	.LFE30:
 1858              		.size	CyIntClearPending, .-CyIntClearPending
 1859              		.section	.text.CyHalt,"ax",%progbits
 1860              		.align	2
 1861              		.global	CyHalt
 1862              		.code	16
 1863              		.thumb_func
 1864              		.type	CyHalt, %function
 1865              	CyHalt:
 1866              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 78


2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1867              		.loc 1 2516 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 8
 1870              		@ frame_needed = 0, uses_anonymous_args = 0
 1871              		@ link register save eliminated.
 1872 0000 82B0     		sub	sp, sp, #8
 1873              		.cfi_def_cfa_offset 8
 1874 0002 0200     		movs	r2, r0
 1875 0004 6B46     		mov	r3, sp
 1876 0006 0733     		adds	r3, r3, #7
 1877 0008 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1878              		.loc 1 2525 0
 1879              		.syntax divided
 1880              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1881 000a 01BE     		    bkpt    1
 1882              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1883              		.loc 1 2529 0
 1884              		.thumb
 1885              		.syntax unified
 1886 000c C046     		nop
 1887 000e 02B0     		add	sp, sp, #8
 1888              		@ sp needed
 1889 0010 7047     		bx	lr
 1890              		.cfi_endproc
 1891              	.LFE31:
 1892              		.size	CyHalt, .-CyHalt
 1893 0012 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1894              		.align	2
 1895              		.global	CySoftwareReset
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	CySoftwareReset, %function
 1899              	CySoftwareReset:
 1900              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 79


2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1901              		.loc 1 2540 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1906              		.loc 1 2545 0
 1907 0000 044B     		ldr	r3, .L122
 1908 0002 044A     		ldr	r2, .L122
 1909 0004 1268     		ldr	r2, [r2]
 1910 0006 1204     		lsls	r2, r2, #16
 1911 0008 120C     		lsrs	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1912              		.loc 1 2546 0
 1913 000a 0349     		ldr	r1, .L122+4
 1914 000c 0A43     		orrs	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1915              		.loc 1 2545 0
 1916 000e 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1917              		.loc 1 2547 0
 1918 0010 C046     		nop
 1919              		@ sp needed
 1920 0012 7047     		bx	lr
 1921              	.L123:
 1922              		.align	2
 1923              	.L122:
 1924 0014 0CED00E0 		.word	-536810228
 1925 0018 0400FA05 		.word	100270084
 1926              		.cfi_endproc
 1927              	.LFE32:
 1928              		.size	CySoftwareReset, .-CySoftwareReset
 1929              		.section	.text.CyDelay,"ax",%progbits
 1930              		.align	2
 1931              		.global	CyDelay
 1932              		.code	16
 1933              		.thumb_func
 1934              		.type	CyDelay, %function
 1935              	CyDelay:
 1936              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 80


2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1937              		.loc 1 2560 0
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 8
 1940              		@ frame_needed = 0, uses_anonymous_args = 0
 1941 0000 00B5     		push	{lr}
 1942              		.cfi_def_cfa_offset 4
 1943              		.cfi_offset 14, -4
 1944 0002 83B0     		sub	sp, sp, #12
 1945              		.cfi_def_cfa_offset 16
 1946 0004 0190     		str	r0, [sp, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1947              		.loc 1 2561 0
 1948 0006 09E0     		b	.L125
 1949              	.L126:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1950              		.loc 1 2566 0
 1951 0008 0C4B     		ldr	r3, .L127
 1952 000a 1B68     		ldr	r3, [r3]
 1953 000c 1800     		movs	r0, r3
 1954 000e FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1955              		.loc 1 2567 0
 1956 0012 019B     		ldr	r3, [sp, #4]
 1957 0014 0A4A     		ldr	r2, .L127+4
 1958 0016 9446     		mov	ip, r2
 1959 0018 6344     		add	r3, r3, ip
 1960 001a 0193     		str	r3, [sp, #4]
 1961              	.L125:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1962              		.loc 1 2561 0
 1963 001c 019A     		ldr	r2, [sp, #4]
 1964 001e 8023     		movs	r3, #128
 1965 0020 1B02     		lsls	r3, r3, #8
 1966 0022 9A42     		cmp	r2, r3
 1967 0024 F0D8     		bhi	.L126
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1968              		.loc 1 2570 0
 1969 0026 074B     		ldr	r3, .L127+8
 1970 0028 1B68     		ldr	r3, [r3]
 1971 002a 019A     		ldr	r2, [sp, #4]
 1972 002c 5343     		muls	r3, r2
 1973 002e 1800     		movs	r0, r3
 1974 0030 FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 81


2571:Generated_Source\PSoC4/CyLib.c **** }
 1975              		.loc 1 2571 0
 1976 0034 C046     		nop
 1977 0036 03B0     		add	sp, sp, #12
 1978              		@ sp needed
 1979 0038 00BD     		pop	{pc}
 1980              	.L128:
 1981 003a C046     		.align	2
 1982              	.L127:
 1983 003c 00000000 		.word	cydelay32kMs
 1984 0040 0080FFFF 		.word	-32768
 1985 0044 00000000 		.word	cydelayFreqKhz
 1986              		.cfi_endproc
 1987              	.LFE33:
 1988              		.size	CyDelay, .-CyDelay
 1989              		.section	.text.CyDelayUs,"ax",%progbits
 1990              		.align	2
 1991              		.global	CyDelayUs
 1992              		.code	16
 1993              		.thumb_func
 1994              		.type	CyDelayUs, %function
 1995              	CyDelayUs:
 1996              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1997              		.loc 1 2583 0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 8
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001 0000 00B5     		push	{lr}
 2002              		.cfi_def_cfa_offset 4
 2003              		.cfi_offset 14, -4
 2004 0002 83B0     		sub	sp, sp, #12
 2005              		.cfi_def_cfa_offset 16
 2006 0004 0200     		movs	r2, r0
 2007 0006 6B46     		mov	r3, sp
 2008 0008 0633     		adds	r3, r3, #6
 2009 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2010              		.loc 1 2584 0
 2011 000c 6B46     		mov	r3, sp
 2012 000e 0633     		adds	r3, r3, #6
 2013 0010 1B88     		ldrh	r3, [r3]
 2014 0012 044A     		ldr	r2, .L130
 2015 0014 1278     		ldrb	r2, [r2]
 2016 0016 5343     		muls	r3, r2
 2017 0018 1800     		movs	r0, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 82


 2018 001a FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 2019              		.loc 1 2585 0
 2020 001e C046     		nop
 2021 0020 03B0     		add	sp, sp, #12
 2022              		@ sp needed
 2023 0022 00BD     		pop	{pc}
 2024              	.L131:
 2025              		.align	2
 2026              	.L130:
 2027 0024 00000000 		.word	cydelayFreqMhz
 2028              		.cfi_endproc
 2029              	.LFE34:
 2030              		.size	CyDelayUs, .-CyDelayUs
 2031              		.global	__aeabi_uidiv
 2032              		.section	.text.CyDelayFreq,"ax",%progbits
 2033              		.align	2
 2034              		.global	CyDelayFreq
 2035              		.code	16
 2036              		.thumb_func
 2037              		.type	CyDelayFreq, %function
 2038              	CyDelayFreq:
 2039              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 2040              		.loc 1 2597 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 8
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044 0000 00B5     		push	{lr}
 2045              		.cfi_def_cfa_offset 4
 2046              		.cfi_offset 14, -4
 2047 0002 83B0     		sub	sp, sp, #12
 2048              		.cfi_def_cfa_offset 16
 2049 0004 0190     		str	r0, [sp, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2050              		.loc 1 2598 0
 2051 0006 019B     		ldr	r3, [sp, #4]
 2052 0008 002B     		cmp	r3, #0
 2053 000a 03D0     		beq	.L133
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2054              		.loc 1 2600 0
 2055 000c 144B     		ldr	r3, .L135
 2056 000e 019A     		ldr	r2, [sp, #4]
 2057 0010 1A60     		str	r2, [r3]
 2058 0012 02E0     		b	.L134
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 83


 2059              	.L133:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2060              		.loc 1 2604 0
 2061 0014 124B     		ldr	r3, .L135
 2062 0016 134A     		ldr	r2, .L135+4
 2063 0018 1A60     		str	r2, [r3]
 2064              	.L134:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2065              		.loc 1 2607 0
 2066 001a 114B     		ldr	r3, .L135
 2067 001c 1B68     		ldr	r3, [r3]
 2068 001e 124A     		ldr	r2, .L135+8
 2069 0020 9446     		mov	ip, r2
 2070 0022 6344     		add	r3, r3, ip
 2071 0024 1149     		ldr	r1, .L135+12
 2072 0026 1800     		movs	r0, r3
 2073 0028 FFF7FEFF 		bl	__aeabi_uidiv
 2074 002c 0300     		movs	r3, r0
 2075 002e DAB2     		uxtb	r2, r3
 2076 0030 0F4B     		ldr	r3, .L135+16
 2077 0032 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2078              		.loc 1 2608 0
 2079 0034 0A4B     		ldr	r3, .L135
 2080 0036 1B68     		ldr	r3, [r3]
 2081 0038 0E4A     		ldr	r2, .L135+20
 2082 003a 9A18     		adds	r2, r3, r2
 2083 003c FA23     		movs	r3, #250
 2084 003e 9900     		lsls	r1, r3, #2
 2085 0040 1000     		movs	r0, r2
 2086 0042 FFF7FEFF 		bl	__aeabi_uidiv
 2087 0046 0300     		movs	r3, r0
 2088 0048 1A00     		movs	r2, r3
 2089 004a 0B4B     		ldr	r3, .L135+24
 2090 004c 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2091              		.loc 1 2609 0
 2092 004e 0A4B     		ldr	r3, .L135+24
 2093 0050 1B68     		ldr	r3, [r3]
 2094 0052 DA03     		lsls	r2, r3, #15
 2095 0054 094B     		ldr	r3, .L135+28
 2096 0056 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 2097              		.loc 1 2610 0
 2098 0058 C046     		nop
 2099 005a 03B0     		add	sp, sp, #12
 2100              		@ sp needed
 2101 005c 00BD     		pop	{pc}
 2102              	.L136:
 2103 005e C046     		.align	2
 2104              	.L135:
 2105 0060 00000000 		.word	cydelayFreqHz
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 84


 2106 0064 00366E01 		.word	24000000
 2107 0068 3F420F00 		.word	999999
 2108 006c 40420F00 		.word	1000000
 2109 0070 00000000 		.word	cydelayFreqMhz
 2110 0074 E7030000 		.word	999
 2111 0078 00000000 		.word	cydelayFreqKhz
 2112 007c 00000000 		.word	cydelay32kMs
 2113              		.cfi_endproc
 2114              	.LFE35:
 2115              		.size	CyDelayFreq, .-CyDelayFreq
 2116              		.section	.text.CySysTickStart,"ax",%progbits
 2117              		.align	2
 2118              		.global	CySysTickStart
 2119              		.code	16
 2120              		.thumb_func
 2121              		.type	CySysTickStart, %function
 2122              	CySysTickStart:
 2123              	.LFB36:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 2124              		.loc 1 2629 0
 2125              		.cfi_startproc
 2126              		@ args = 0, pretend = 0, frame = 0
 2127              		@ frame_needed = 0, uses_anonymous_args = 0
 2128 0000 10B5     		push	{r4, lr}
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 4, -8
 2131              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2132              		.loc 1 2630 0
 2133 0002 064B     		ldr	r3, .L139
 2134 0004 1B68     		ldr	r3, [r3]
 2135 0006 002B     		cmp	r3, #0
 2136 0008 04D1     		bne	.L138
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2137              		.loc 1 2632 0
 2138 000a FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2139              		.loc 1 2633 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 85


 2140 000e 034B     		ldr	r3, .L139
 2141 0010 0122     		movs	r2, #1
 2142 0012 1A60     		str	r2, [r3]
 2143              	.L138:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2144              		.loc 1 2636 0
 2145 0014 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 2146              		.loc 1 2637 0
 2147 0018 C046     		nop
 2148              		@ sp needed
 2149 001a 10BD     		pop	{r4, pc}
 2150              	.L140:
 2151              		.align	2
 2152              	.L139:
 2153 001c 00000000 		.word	CySysTickInitVar
 2154              		.cfi_endproc
 2155              	.LFE36:
 2156              		.size	CySysTickStart, .-CySysTickStart
 2157              		.section	.text.CySysTickInit,"ax",%progbits
 2158              		.align	2
 2159              		.global	CySysTickInit
 2160              		.code	16
 2161              		.thumb_func
 2162              		.type	CySysTickInit, %function
 2163              	CySysTickInit:
 2164              	.LFB37:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 2165              		.loc 1 2658 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 8
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169 0000 00B5     		push	{lr}
 2170              		.cfi_def_cfa_offset 4
 2171              		.cfi_offset 14, -4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 86


 2172 0002 83B0     		sub	sp, sp, #12
 2173              		.cfi_def_cfa_offset 16
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2174              		.loc 1 2661 0
 2175 0004 0023     		movs	r3, #0
 2176 0006 0193     		str	r3, [sp, #4]
 2177 0008 07E0     		b	.L142
 2178              	.L143:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2179              		.loc 1 2663 0 discriminator 3
 2180 000a 114B     		ldr	r3, .L144
 2181 000c 019A     		ldr	r2, [sp, #4]
 2182 000e 9200     		lsls	r2, r2, #2
 2183 0010 0021     		movs	r1, #0
 2184 0012 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2185              		.loc 1 2661 0 discriminator 3
 2186 0014 019B     		ldr	r3, [sp, #4]
 2187 0016 0133     		adds	r3, r3, #1
 2188 0018 0193     		str	r3, [sp, #4]
 2189              	.L142:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2190              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2191 001a 019B     		ldr	r3, [sp, #4]
 2192 001c 042B     		cmp	r3, #4
 2193 001e F4D9     		bls	.L143
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2194              		.loc 1 2666 0 is_stmt 1
 2195 0020 0C4B     		ldr	r3, .L144+4
 2196 0022 1900     		movs	r1, r3
 2197 0024 0F20     		movs	r0, #15
 2198 0026 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2199              		.loc 1 2669 0
 2200 002a 0120     		movs	r0, #1
 2201 002c FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2202              		.loc 1 2672 0
 2203 0030 094B     		ldr	r3, .L144+8
 2204 0032 1A68     		ldr	r2, [r3]
 2205 0034 FA23     		movs	r3, #250
 2206 0036 9900     		lsls	r1, r3, #2
 2207 0038 1000     		movs	r0, r2
 2208 003a FFF7FEFF 		bl	__aeabi_uidiv
 2209 003e 0300     		movs	r3, r0
 2210 0040 1800     		movs	r0, r3
 2211 0042 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 87


 2212              		.loc 1 2673 0
 2213 0046 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c **** }
 2214              		.loc 1 2674 0
 2215 004a C046     		nop
 2216 004c 03B0     		add	sp, sp, #12
 2217              		@ sp needed
 2218 004e 00BD     		pop	{pc}
 2219              	.L145:
 2220              		.align	2
 2221              	.L144:
 2222 0050 00000000 		.word	CySysTickCallbacks
 2223 0054 00000000 		.word	CySysTickServiceCallbacks
 2224 0058 00000000 		.word	cydelayFreqHz
 2225              		.cfi_endproc
 2226              	.LFE37:
 2227              		.size	CySysTickInit, .-CySysTickInit
 2228              		.section	.text.CySysTickEnable,"ax",%progbits
 2229              		.align	2
 2230              		.global	CySysTickEnable
 2231              		.code	16
 2232              		.thumb_func
 2233              		.type	CySysTickEnable, %function
 2234              	CySysTickEnable:
 2235              	.LFB38:
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 2236              		.loc 1 2688 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240 0000 10B5     		push	{r4, lr}
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 4, -8
 2243              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2244              		.loc 1 2689 0
 2245 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2246              		.loc 1 2690 0
 2247 0006 044B     		ldr	r3, .L147
 2248 0008 034A     		ldr	r2, .L147
 2249 000a 1268     		ldr	r2, [r2]
 2250 000c 0121     		movs	r1, #1
 2251 000e 0A43     		orrs	r2, r1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 88


 2252 0010 1A60     		str	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c **** }
 2253              		.loc 1 2691 0
 2254 0012 C046     		nop
 2255              		@ sp needed
 2256 0014 10BD     		pop	{r4, pc}
 2257              	.L148:
 2258 0016 C046     		.align	2
 2259              	.L147:
 2260 0018 10E000E0 		.word	-536813552
 2261              		.cfi_endproc
 2262              	.LFE38:
 2263              		.size	CySysTickEnable, .-CySysTickEnable
 2264              		.section	.text.CySysTickStop,"ax",%progbits
 2265              		.align	2
 2266              		.global	CySysTickStop
 2267              		.code	16
 2268              		.thumb_func
 2269              		.type	CySysTickStop, %function
 2270              	CySysTickStop:
 2271              	.LFB39:
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 2272              		.loc 1 2705 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 0
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2277              		.loc 1 2706 0
 2278 0000 034B     		ldr	r3, .L150
 2279 0002 034A     		ldr	r2, .L150
 2280 0004 1268     		ldr	r2, [r2]
 2281 0006 0121     		movs	r1, #1
 2282 0008 8A43     		bics	r2, r1
 2283 000a 1A60     		str	r2, [r3]
2707:Generated_Source\PSoC4/CyLib.c **** }
 2284              		.loc 1 2707 0
 2285 000c C046     		nop
 2286              		@ sp needed
 2287 000e 7047     		bx	lr
 2288              	.L151:
 2289              		.align	2
 2290              	.L150:
 2291 0010 10E000E0 		.word	-536813552
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 89


 2292              		.cfi_endproc
 2293              	.LFE39:
 2294              		.size	CySysTickStop, .-CySysTickStop
 2295              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2296              		.align	2
 2297              		.global	CySysTickEnableInterrupt
 2298              		.code	16
 2299              		.thumb_func
 2300              		.type	CySysTickEnableInterrupt, %function
 2301              	CySysTickEnableInterrupt:
 2302              	.LFB40:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 2303              		.loc 1 2721 0
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 0
 2306              		@ frame_needed = 0, uses_anonymous_args = 0
 2307              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2308              		.loc 1 2722 0
 2309 0000 034B     		ldr	r3, .L153
 2310 0002 034A     		ldr	r2, .L153
 2311 0004 1268     		ldr	r2, [r2]
 2312 0006 0221     		movs	r1, #2
 2313 0008 0A43     		orrs	r2, r1
 2314 000a 1A60     		str	r2, [r3]
2723:Generated_Source\PSoC4/CyLib.c **** }
 2315              		.loc 1 2723 0
 2316 000c C046     		nop
 2317              		@ sp needed
 2318 000e 7047     		bx	lr
 2319              	.L154:
 2320              		.align	2
 2321              	.L153:
 2322 0010 10E000E0 		.word	-536813552
 2323              		.cfi_endproc
 2324              	.LFE40:
 2325              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2326              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2327              		.align	2
 2328              		.global	CySysTickDisableInterrupt
 2329              		.code	16
 2330              		.thumb_func
 2331              		.type	CySysTickDisableInterrupt, %function
 2332              	CySysTickDisableInterrupt:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 90


 2333              	.LFB41:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 2334              		.loc 1 2737 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 0
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2339              		.loc 1 2738 0
 2340 0000 034B     		ldr	r3, .L156
 2341 0002 034A     		ldr	r2, .L156
 2342 0004 1268     		ldr	r2, [r2]
 2343 0006 0221     		movs	r1, #2
 2344 0008 8A43     		bics	r2, r1
 2345 000a 1A60     		str	r2, [r3]
2739:Generated_Source\PSoC4/CyLib.c **** }
 2346              		.loc 1 2739 0
 2347 000c C046     		nop
 2348              		@ sp needed
 2349 000e 7047     		bx	lr
 2350              	.L157:
 2351              		.align	2
 2352              	.L156:
 2353 0010 10E000E0 		.word	-536813552
 2354              		.cfi_endproc
 2355              	.LFE41:
 2356              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2357              		.section	.text.CySysTickSetReload,"ax",%progbits
 2358              		.align	2
 2359              		.global	CySysTickSetReload
 2360              		.code	16
 2361              		.thumb_func
 2362              		.type	CySysTickSetReload, %function
 2363              	CySysTickSetReload:
 2364              	.LFB42:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 91


2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 2365              		.loc 1 2754 0
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 8
 2368              		@ frame_needed = 0, uses_anonymous_args = 0
 2369              		@ link register save eliminated.
 2370 0000 82B0     		sub	sp, sp, #8
 2371              		.cfi_def_cfa_offset 8
 2372 0002 0190     		str	r0, [sp, #4]
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2373              		.loc 1 2755 0
 2374 0004 034B     		ldr	r3, .L159
 2375 0006 019A     		ldr	r2, [sp, #4]
 2376 0008 1202     		lsls	r2, r2, #8
 2377 000a 120A     		lsrs	r2, r2, #8
 2378 000c 1A60     		str	r2, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 2379              		.loc 1 2756 0
 2380 000e C046     		nop
 2381 0010 02B0     		add	sp, sp, #8
 2382              		@ sp needed
 2383 0012 7047     		bx	lr
 2384              	.L160:
 2385              		.align	2
 2386              	.L159:
 2387 0014 14E000E0 		.word	-536813548
 2388              		.cfi_endproc
 2389              	.LFE42:
 2390              		.size	CySysTickSetReload, .-CySysTickSetReload
 2391              		.section	.text.CySysTickGetReload,"ax",%progbits
 2392              		.align	2
 2393              		.global	CySysTickGetReload
 2394              		.code	16
 2395              		.thumb_func
 2396              		.type	CySysTickGetReload, %function
 2397              	CySysTickGetReload:
 2398              	.LFB43:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 2399              		.loc 1 2770 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 92


 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2404              		.loc 1 2771 0
 2405 0000 024B     		ldr	r3, .L163
 2406 0002 1B68     		ldr	r3, [r3]
 2407 0004 1B02     		lsls	r3, r3, #8
 2408 0006 1B0A     		lsrs	r3, r3, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 2409              		.loc 1 2772 0
 2410 0008 1800     		movs	r0, r3
 2411              		@ sp needed
 2412 000a 7047     		bx	lr
 2413              	.L164:
 2414              		.align	2
 2415              	.L163:
 2416 000c 14E000E0 		.word	-536813548
 2417              		.cfi_endproc
 2418              	.LFE43:
 2419              		.size	CySysTickGetReload, .-CySysTickGetReload
 2420              		.section	.text.CySysTickGetValue,"ax",%progbits
 2421              		.align	2
 2422              		.global	CySysTickGetValue
 2423              		.code	16
 2424              		.thumb_func
 2425              		.type	CySysTickGetValue, %function
 2426              	CySysTickGetValue:
 2427              	.LFB44:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
 2428              		.loc 1 2786 0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 0
 2431              		@ frame_needed = 0, uses_anonymous_args = 0
 2432              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2433              		.loc 1 2787 0
 2434 0000 024B     		ldr	r3, .L167
 2435 0002 1B68     		ldr	r3, [r3]
 2436 0004 1B02     		lsls	r3, r3, #8
 2437 0006 1B0A     		lsrs	r3, r3, #8
2788:Generated_Source\PSoC4/CyLib.c **** }
 2438              		.loc 1 2788 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 93


 2439 0008 1800     		movs	r0, r3
 2440              		@ sp needed
 2441 000a 7047     		bx	lr
 2442              	.L168:
 2443              		.align	2
 2444              	.L167:
 2445 000c 18E000E0 		.word	-536813544
 2446              		.cfi_endproc
 2447              	.LFE44:
 2448              		.size	CySysTickGetValue, .-CySysTickGetValue
 2449              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2450              		.align	2
 2451              		.global	CySysTickSetClockSource
 2452              		.code	16
 2453              		.thumb_func
 2454              		.type	CySysTickSetClockSource, %function
 2455              	CySysTickSetClockSource:
 2456              	.LFB45:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
 2457              		.loc 1 2818 0
 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 8
 2460              		@ frame_needed = 0, uses_anonymous_args = 0
 2461              		@ link register save eliminated.
 2462 0000 82B0     		sub	sp, sp, #8
 2463              		.cfi_def_cfa_offset 8
 2464 0002 0190     		str	r0, [sp, #4]
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 94


 2465              		.loc 1 2819 0
 2466 0004 019B     		ldr	r3, [sp, #4]
 2467 0006 012B     		cmp	r3, #1
 2468 0008 06D1     		bne	.L170
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2469              		.loc 1 2821 0
 2470 000a 084B     		ldr	r3, .L173
 2471 000c 074A     		ldr	r2, .L173
 2472 000e 1268     		ldr	r2, [r2]
 2473 0010 0421     		movs	r1, #4
 2474 0012 0A43     		orrs	r2, r1
 2475 0014 1A60     		str	r2, [r3]
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
 2476              		.loc 1 2827 0
 2477 0016 05E0     		b	.L172
 2478              	.L170:
2825:Generated_Source\PSoC4/CyLib.c ****         }
 2479              		.loc 1 2825 0
 2480 0018 044B     		ldr	r3, .L173
 2481 001a 044A     		ldr	r2, .L173
 2482 001c 1268     		ldr	r2, [r2]
 2483 001e 0421     		movs	r1, #4
 2484 0020 8A43     		bics	r2, r1
 2485 0022 1A60     		str	r2, [r3]
 2486              	.L172:
 2487              		.loc 1 2827 0
 2488 0024 C046     		nop
 2489 0026 02B0     		add	sp, sp, #8
 2490              		@ sp needed
 2491 0028 7047     		bx	lr
 2492              	.L174:
 2493 002a C046     		.align	2
 2494              	.L173:
 2495 002c 10E000E0 		.word	-536813552
 2496              		.cfi_endproc
 2497              	.LFE45:
 2498              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2499              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2500              		.align	2
 2501              		.global	CySysTickGetClockSource
 2502              		.code	16
 2503              		.thumb_func
 2504              		.type	CySysTickGetClockSource, %function
 2505              	CySysTickGetClockSource:
 2506              	.LFB46:
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 95


2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
 2507              		.loc 1 2843 0
 2508              		.cfi_startproc
 2509              		@ args = 0, pretend = 0, frame = 0
 2510              		@ frame_needed = 0, uses_anonymous_args = 0
 2511              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2512              		.loc 1 2844 0
 2513 0000 034B     		ldr	r3, .L177
 2514 0002 1B68     		ldr	r3, [r3]
 2515 0004 9B08     		lsrs	r3, r3, #2
 2516 0006 0122     		movs	r2, #1
 2517 0008 1340     		ands	r3, r2
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2518              		.loc 1 2845 0
 2519 000a 1800     		movs	r0, r3
 2520              		@ sp needed
 2521 000c 7047     		bx	lr
 2522              	.L178:
 2523 000e C046     		.align	2
 2524              	.L177:
 2525 0010 10E000E0 		.word	-536813552
 2526              		.cfi_endproc
 2527              	.LFE46:
 2528              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2529              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2530              		.align	2
 2531              		.global	CySysTickGetCountFlag
 2532              		.code	16
 2533              		.thumb_func
 2534              		.type	CySysTickGetCountFlag, %function
 2535              	CySysTickGetCountFlag:
 2536              	.LFB47:
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 96


2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 2537              		.loc 1 2866 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2542              		.loc 1 2867 0
 2543 0000 034B     		ldr	r3, .L181
 2544 0002 1B68     		ldr	r3, [r3]
 2545 0004 1B0C     		lsrs	r3, r3, #16
 2546 0006 0122     		movs	r2, #1
 2547 0008 1340     		ands	r3, r2
2868:Generated_Source\PSoC4/CyLib.c **** }
 2548              		.loc 1 2868 0
 2549 000a 1800     		movs	r0, r3
 2550              		@ sp needed
 2551 000c 7047     		bx	lr
 2552              	.L182:
 2553 000e C046     		.align	2
 2554              	.L181:
 2555 0010 10E000E0 		.word	-536813552
 2556              		.cfi_endproc
 2557              	.LFE47:
 2558              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2559              		.section	.text.CySysTickClear,"ax",%progbits
 2560              		.align	2
 2561              		.global	CySysTickClear
 2562              		.code	16
 2563              		.thumb_func
 2564              		.type	CySysTickClear, %function
 2565              	CySysTickClear:
 2566              	.LFB48:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
 2567              		.loc 1 2879 0
 2568              		.cfi_startproc
 2569              		@ args = 0, pretend = 0, frame = 0
 2570              		@ frame_needed = 0, uses_anonymous_args = 0
 2571              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2572              		.loc 1 2880 0
 2573 0000 024B     		ldr	r3, .L184
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 97


 2574 0002 0022     		movs	r2, #0
 2575 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** }
 2576              		.loc 1 2881 0
 2577 0006 C046     		nop
 2578              		@ sp needed
 2579 0008 7047     		bx	lr
 2580              	.L185:
 2581 000a C046     		.align	2
 2582              	.L184:
 2583 000c 18E000E0 		.word	-536813544
 2584              		.cfi_endproc
 2585              	.LFE48:
 2586              		.size	CySysTickClear, .-CySysTickClear
 2587              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2588              		.align	2
 2589              		.global	CySysTickSetCallback
 2590              		.code	16
 2591              		.thumb_func
 2592              		.type	CySysTickSetCallback, %function
 2593              	CySysTickSetCallback:
 2594              	.LFB49:
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
 2595              		.loc 1 2914 0
 2596              		.cfi_startproc
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 98


 2597              		@ args = 0, pretend = 0, frame = 16
 2598              		@ frame_needed = 0, uses_anonymous_args = 0
 2599              		@ link register save eliminated.
 2600 0000 84B0     		sub	sp, sp, #16
 2601              		.cfi_def_cfa_offset 16
 2602 0002 0190     		str	r0, [sp, #4]
 2603 0004 0091     		str	r1, [sp]
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2604              		.loc 1 2917 0
 2605 0006 074B     		ldr	r3, .L188
 2606 0008 019A     		ldr	r2, [sp, #4]
 2607 000a 9200     		lsls	r2, r2, #2
 2608 000c D358     		ldr	r3, [r2, r3]
 2609 000e 0393     		str	r3, [sp, #12]
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2610              		.loc 1 2918 0
 2611 0010 044B     		ldr	r3, .L188
 2612 0012 019A     		ldr	r2, [sp, #4]
 2613 0014 9200     		lsls	r2, r2, #2
 2614 0016 0099     		ldr	r1, [sp]
 2615 0018 D150     		str	r1, [r2, r3]
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2616              		.loc 1 2919 0
 2617 001a 039B     		ldr	r3, [sp, #12]
2920:Generated_Source\PSoC4/CyLib.c **** }
 2618              		.loc 1 2920 0
 2619 001c 1800     		movs	r0, r3
 2620 001e 04B0     		add	sp, sp, #16
 2621              		@ sp needed
 2622 0020 7047     		bx	lr
 2623              	.L189:
 2624 0022 C046     		.align	2
 2625              	.L188:
 2626 0024 00000000 		.word	CySysTickCallbacks
 2627              		.cfi_endproc
 2628              	.LFE49:
 2629              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2630              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2631              		.align	2
 2632              		.global	CySysTickGetCallback
 2633              		.code	16
 2634              		.thumb_func
 2635              		.type	CySysTickGetCallback, %function
 2636              	CySysTickGetCallback:
 2637              	.LFB50:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 99


2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
 2638              		.loc 1 2938 0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 8
 2641              		@ frame_needed = 0, uses_anonymous_args = 0
 2642              		@ link register save eliminated.
 2643 0000 82B0     		sub	sp, sp, #8
 2644              		.cfi_def_cfa_offset 8
 2645 0002 0190     		str	r0, [sp, #4]
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2646              		.loc 1 2939 0
 2647 0004 034B     		ldr	r3, .L192
 2648 0006 019A     		ldr	r2, [sp, #4]
 2649 0008 9200     		lsls	r2, r2, #2
 2650 000a D358     		ldr	r3, [r2, r3]
2940:Generated_Source\PSoC4/CyLib.c **** }
 2651              		.loc 1 2940 0
 2652 000c 1800     		movs	r0, r3
 2653 000e 02B0     		add	sp, sp, #8
 2654              		@ sp needed
 2655 0010 7047     		bx	lr
 2656              	.L193:
 2657 0012 C046     		.align	2
 2658              	.L192:
 2659 0014 00000000 		.word	CySysTickCallbacks
 2660              		.cfi_endproc
 2661              	.LFE50:
 2662              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2663              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2664              		.align	2
 2665              		.code	16
 2666              		.thumb_func
 2667              		.type	CySysTickServiceCallbacks, %function
 2668              	CySysTickServiceCallbacks:
 2669              	.LFB51:
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 2670              		.loc 1 2951 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
 2673              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 100


 2674 0000 00B5     		push	{lr}
 2675              		.cfi_def_cfa_offset 4
 2676              		.cfi_offset 14, -4
 2677 0002 83B0     		sub	sp, sp, #12
 2678              		.cfi_def_cfa_offset 16
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2679              		.loc 1 2955 0
 2680 0004 FFF7FEFF 		bl	CySysTickGetCountFlag
 2681 0008 0300     		movs	r3, r0
 2682 000a 012B     		cmp	r3, #1
 2683 000c 13D1     		bne	.L199
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2684              		.loc 1 2957 0
 2685 000e 0023     		movs	r3, #0
 2686 0010 0193     		str	r3, [sp, #4]
 2687 0012 0DE0     		b	.L196
 2688              	.L198:
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2689              		.loc 1 2959 0
 2690 0014 094B     		ldr	r3, .L200
 2691 0016 019A     		ldr	r2, [sp, #4]
 2692 0018 9200     		lsls	r2, r2, #2
 2693 001a D358     		ldr	r3, [r2, r3]
 2694 001c 002B     		cmp	r3, #0
 2695 001e 04D0     		beq	.L197
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2696              		.loc 1 2961 0
 2697 0020 064B     		ldr	r3, .L200
 2698 0022 019A     		ldr	r2, [sp, #4]
 2699 0024 9200     		lsls	r2, r2, #2
 2700 0026 D358     		ldr	r3, [r2, r3]
 2701 0028 9847     		blx	r3
 2702              	.L197:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2703              		.loc 1 2957 0 discriminator 2
 2704 002a 019B     		ldr	r3, [sp, #4]
 2705 002c 0133     		adds	r3, r3, #1
 2706 002e 0193     		str	r3, [sp, #4]
 2707              	.L196:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2708              		.loc 1 2957 0 is_stmt 0 discriminator 1
 2709 0030 019B     		ldr	r3, [sp, #4]
 2710 0032 042B     		cmp	r3, #4
 2711 0034 EED9     		bls	.L198
 2712              	.L199:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 2713              		.loc 1 2965 0 is_stmt 1
 2714 0036 C046     		nop
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 101


 2715 0038 03B0     		add	sp, sp, #12
 2716              		@ sp needed
 2717 003a 00BD     		pop	{pc}
 2718              	.L201:
 2719              		.align	2
 2720              	.L200:
 2721 003c 00000000 		.word	CySysTickCallbacks
 2722              		.cfi_endproc
 2723              	.LFE51:
 2724              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2725              		.section	.text.CyGetUniqueId,"ax",%progbits
 2726              		.align	2
 2727              		.global	CyGetUniqueId
 2728              		.code	16
 2729              		.thumb_func
 2730              		.type	CyGetUniqueId, %function
 2731              	CyGetUniqueId:
 2732              	.LFB52:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2733              		.loc 1 2983 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 8
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737              		@ link register save eliminated.
 2738 0000 82B0     		sub	sp, sp, #8
 2739              		.cfi_def_cfa_offset 8
 2740 0002 0190     		str	r0, [sp, #4]
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2741              		.loc 1 2985 0
 2742 0004 254B     		ldr	r3, .L203
 2743 0006 1B78     		ldrb	r3, [r3]
 2744 0008 DBB2     		uxtb	r3, r3
 2745 000a 1A00     		movs	r2, r3
 2746 000c 019B     		ldr	r3, [sp, #4]
 2747 000e 1A60     		str	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2748              		.loc 1 2986 0
 2749 0010 234B     		ldr	r3, .L203+4
 2750 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 102


 2751 0014 DBB2     		uxtb	r3, r3
 2752 0016 1A02     		lsls	r2, r3, #8
 2753 0018 019B     		ldr	r3, [sp, #4]
 2754 001a 1B68     		ldr	r3, [r3]
 2755 001c 1A43     		orrs	r2, r3
 2756 001e 019B     		ldr	r3, [sp, #4]
 2757 0020 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2758              		.loc 1 2987 0
 2759 0022 204B     		ldr	r3, .L203+8
 2760 0024 1B78     		ldrb	r3, [r3]
 2761 0026 DBB2     		uxtb	r3, r3
 2762 0028 1A04     		lsls	r2, r3, #16
 2763 002a 019B     		ldr	r3, [sp, #4]
 2764 002c 1B68     		ldr	r3, [r3]
 2765 002e 1A43     		orrs	r2, r3
 2766 0030 019B     		ldr	r3, [sp, #4]
 2767 0032 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2768              		.loc 1 2988 0
 2769 0034 1C4B     		ldr	r3, .L203+12
 2770 0036 1B78     		ldrb	r3, [r3]
 2771 0038 DBB2     		uxtb	r3, r3
 2772 003a 1A06     		lsls	r2, r3, #24
 2773 003c 019B     		ldr	r3, [sp, #4]
 2774 003e 1B68     		ldr	r3, [r3]
 2775 0040 1A43     		orrs	r2, r3
 2776 0042 019B     		ldr	r3, [sp, #4]
 2777 0044 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2778              		.loc 1 2990 0
 2779 0046 019B     		ldr	r3, [sp, #4]
 2780 0048 0433     		adds	r3, r3, #4
 2781 004a 184A     		ldr	r2, .L203+16
 2782 004c 1278     		ldrb	r2, [r2]
 2783 004e D2B2     		uxtb	r2, r2
 2784 0050 1A60     		str	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2785              		.loc 1 2991 0
 2786 0052 174B     		ldr	r3, .L203+20
 2787 0054 1B78     		ldrb	r3, [r3]
 2788 0056 DBB2     		uxtb	r3, r3
 2789 0058 1902     		lsls	r1, r3, #8
 2790 005a 019B     		ldr	r3, [sp, #4]
 2791 005c 0433     		adds	r3, r3, #4
 2792 005e 019A     		ldr	r2, [sp, #4]
 2793 0060 0432     		adds	r2, r2, #4
 2794 0062 1268     		ldr	r2, [r2]
 2795 0064 0A43     		orrs	r2, r1
 2796 0066 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2797              		.loc 1 2992 0
 2798 0068 124B     		ldr	r3, .L203+24
 2799 006a 1B78     		ldrb	r3, [r3]
 2800 006c DBB2     		uxtb	r3, r3
 2801 006e 1904     		lsls	r1, r3, #16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 103


 2802 0070 019B     		ldr	r3, [sp, #4]
 2803 0072 0433     		adds	r3, r3, #4
 2804 0074 019A     		ldr	r2, [sp, #4]
 2805 0076 0432     		adds	r2, r2, #4
 2806 0078 1268     		ldr	r2, [r2]
 2807 007a 0A43     		orrs	r2, r1
 2808 007c 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2809              		.loc 1 2993 0
 2810 007e 0E4B     		ldr	r3, .L203+28
 2811 0080 1B78     		ldrb	r3, [r3]
 2812 0082 DBB2     		uxtb	r3, r3
 2813 0084 1906     		lsls	r1, r3, #24
 2814 0086 019B     		ldr	r3, [sp, #4]
 2815 0088 0433     		adds	r3, r3, #4
 2816 008a 019A     		ldr	r2, [sp, #4]
 2817 008c 0432     		adds	r2, r2, #4
 2818 008e 1268     		ldr	r2, [r2]
 2819 0090 0A43     		orrs	r2, r1
 2820 0092 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2821              		.loc 1 3005 0
 2822 0094 C046     		nop
 2823 0096 02B0     		add	sp, sp, #8
 2824              		@ sp needed
 2825 0098 7047     		bx	lr
 2826              	.L204:
 2827 009a C046     		.align	2
 2828              	.L203:
 2829 009c 78F2FF0F 		.word	268431992
 2830 00a0 79F2FF0F 		.word	268431993
 2831 00a4 7AF2FF0F 		.word	268431994
 2832 00a8 7BF2FF0F 		.word	268431995
 2833 00ac 7CF2FF0F 		.word	268431996
 2834 00b0 7DF2FF0F 		.word	268431997
 2835 00b4 7EF2FF0F 		.word	268431998
 2836 00b8 7FF2FF0F 		.word	268431999
 2837              		.cfi_endproc
 2838              	.LFE52:
 2839              		.size	CyGetUniqueId, .-CyGetUniqueId
 2840              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2841              		.align	2
 2842              		.global	CySysSetRamAccessArbPriority
 2843              		.code	16
 2844              		.thumb_func
 2845              		.type	CySysSetRamAccessArbPriority, %function
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 104


 2846              	CySysSetRamAccessArbPriority:
 2847              	.LFB53:
3006:Generated_Source\PSoC4/CyLib.c **** 
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3014:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3015:Generated_Source\PSoC4/CyLib.c ****     *  details.
3016:Generated_Source\PSoC4/CyLib.c ****     *
3017:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3020:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3024:Generated_Source\PSoC4/CyLib.c ****     *
3025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3027:Generated_Source\PSoC4/CyLib.c ****     {
 2848              		.loc 1 3027 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 16
 2851              		@ frame_needed = 0, uses_anonymous_args = 0
 2852              		@ link register save eliminated.
 2853 0000 84B0     		sub	sp, sp, #16
 2854              		.cfi_def_cfa_offset 16
 2855 0002 0190     		str	r0, [sp, #4]
3028:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3029:Generated_Source\PSoC4/CyLib.c **** 
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2856              		.loc 1 3030 0
 2857 0004 094B     		ldr	r3, .L206
 2858 0006 1B68     		ldr	r3, [r3]
 2859 0008 094A     		ldr	r2, .L206+4
 2860 000a 1340     		ands	r3, r2
 2861 000c 0393     		str	r3, [sp, #12]
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2862              		.loc 1 3031 0
 2863 000e 019B     		ldr	r3, [sp, #4]
 2864 0010 5A04     		lsls	r2, r3, #17
 2865 0012 C023     		movs	r3, #192
 2866 0014 DB02     		lsls	r3, r3, #11
 2867 0016 1340     		ands	r3, r2
 2868 0018 039A     		ldr	r2, [sp, #12]
 2869 001a 1343     		orrs	r3, r2
 2870 001c 0393     		str	r3, [sp, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2871              		.loc 1 3032 0
 2872 001e 034B     		ldr	r3, .L206
 2873 0020 039A     		ldr	r2, [sp, #12]
 2874 0022 1A60     		str	r2, [r3]
3033:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 105


 2875              		.loc 1 3033 0
 2876 0024 C046     		nop
 2877 0026 04B0     		add	sp, sp, #16
 2878              		@ sp needed
 2879 0028 7047     		bx	lr
 2880              	.L207:
 2881 002a C046     		.align	2
 2882              	.L206:
 2883 002c 38001040 		.word	1074790456
 2884 0030 FFFFF9FF 		.word	-393217
 2885              		.cfi_endproc
 2886              	.LFE53:
 2887              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2888              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2889              		.align	2
 2890              		.global	CySysSetFlashAccessArbPriority
 2891              		.code	16
 2892              		.thumb_func
 2893              		.type	CySysSetFlashAccessArbPriority, %function
 2894              	CySysSetFlashAccessArbPriority:
 2895              	.LFB54:
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3037:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3038:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3039:Generated_Source\PSoC4/CyLib.c ****     *
3040:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3041:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3042:Generated_Source\PSoC4/CyLib.c ****     *  details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3045:Generated_Source\PSoC4/CyLib.c ****     *
3046:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3047:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3051:Generated_Source\PSoC4/CyLib.c ****     *
3052:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3053:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3054:Generated_Source\PSoC4/CyLib.c ****     {
 2896              		.loc 1 3054 0
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 16
 2899              		@ frame_needed = 0, uses_anonymous_args = 0
 2900              		@ link register save eliminated.
 2901 0000 84B0     		sub	sp, sp, #16
 2902              		.cfi_def_cfa_offset 16
 2903 0002 0190     		str	r0, [sp, #4]
3055:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3056:Generated_Source\PSoC4/CyLib.c **** 
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2904              		.loc 1 3057 0
 2905 0004 094B     		ldr	r3, .L209
 2906 0006 1B68     		ldr	r3, [r3]
 2907 0008 094A     		ldr	r2, .L209+4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 106


 2908 000a 1340     		ands	r3, r2
 2909 000c 0393     		str	r3, [sp, #12]
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2910              		.loc 1 3058 0
 2911 000e 019B     		ldr	r3, [sp, #4]
 2912 0010 5A04     		lsls	r2, r3, #17
 2913 0012 C023     		movs	r3, #192
 2914 0014 DB02     		lsls	r3, r3, #11
 2915 0016 1340     		ands	r3, r2
 2916 0018 039A     		ldr	r2, [sp, #12]
 2917 001a 1343     		orrs	r3, r2
 2918 001c 0393     		str	r3, [sp, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2919              		.loc 1 3059 0
 2920 001e 034B     		ldr	r3, .L209
 2921 0020 039A     		ldr	r2, [sp, #12]
 2922 0022 1A60     		str	r2, [r3]
3060:Generated_Source\PSoC4/CyLib.c ****     }
 2923              		.loc 1 3060 0
 2924 0024 C046     		nop
 2925 0026 04B0     		add	sp, sp, #16
 2926              		@ sp needed
 2927 0028 7047     		bx	lr
 2928              	.L210:
 2929 002a C046     		.align	2
 2930              	.L209:
 2931 002c 30001040 		.word	1074790448
 2932 0030 FFFFF9FF 		.word	-393217
 2933              		.cfi_endproc
 2934              	.LFE54:
 2935              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2936              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2937              		.align	2
 2938              		.global	CySysSetDmacAccessArbPriority
 2939              		.code	16
 2940              		.thumb_func
 2941              		.type	CySysSetDmacAccessArbPriority, %function
 2942              	CySysSetDmacAccessArbPriority:
 2943              	.LFB55:
3061:Generated_Source\PSoC4/CyLib.c **** 
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3065:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3066:Generated_Source\PSoC4/CyLib.c ****     *
3067:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3068:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3069:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3070:Generated_Source\PSoC4/CyLib.c ****     *
3071:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3072:Generated_Source\PSoC4/CyLib.c ****     *
3073:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3074:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3078:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 107


3079:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3080:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3081:Generated_Source\PSoC4/CyLib.c ****     {
 2944              		.loc 1 3081 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 16
 2947              		@ frame_needed = 0, uses_anonymous_args = 0
 2948              		@ link register save eliminated.
 2949 0000 84B0     		sub	sp, sp, #16
 2950              		.cfi_def_cfa_offset 16
 2951 0002 0190     		str	r0, [sp, #4]
3082:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3083:Generated_Source\PSoC4/CyLib.c **** 
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2952              		.loc 1 3084 0
 2953 0004 094B     		ldr	r3, .L212
 2954 0006 1B68     		ldr	r3, [r3]
 2955 0008 094A     		ldr	r2, .L212+4
 2956 000a 1340     		ands	r3, r2
 2957 000c 0393     		str	r3, [sp, #12]
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2958              		.loc 1 3085 0
 2959 000e 019B     		ldr	r3, [sp, #4]
 2960 0010 5A04     		lsls	r2, r3, #17
 2961 0012 C023     		movs	r3, #192
 2962 0014 DB02     		lsls	r3, r3, #11
 2963 0016 1340     		ands	r3, r2
 2964 0018 039A     		ldr	r2, [sp, #12]
 2965 001a 1343     		orrs	r3, r2
 2966 001c 0393     		str	r3, [sp, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2967              		.loc 1 3086 0
 2968 001e 034B     		ldr	r3, .L212
 2969 0020 039A     		ldr	r2, [sp, #12]
 2970 0022 1A60     		str	r2, [r3]
3087:Generated_Source\PSoC4/CyLib.c ****     }
 2971              		.loc 1 3087 0
 2972 0024 C046     		nop
 2973 0026 04B0     		add	sp, sp, #16
 2974              		@ sp needed
 2975 0028 7047     		bx	lr
 2976              	.L213:
 2977 002a C046     		.align	2
 2978              	.L212:
 2979 002c 3C001040 		.word	1074790460
 2980 0030 FFFFF9FF 		.word	-393217
 2981              		.cfi_endproc
 2982              	.LFE55:
 2983              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2984              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2985              		.align	2
 2986              		.global	CySysSetPeripheralAccessArbPriority
 2987              		.code	16
 2988              		.thumb_func
 2989              		.type	CySysSetPeripheralAccessArbPriority, %function
 2990              	CySysSetPeripheralAccessArbPriority:
 2991              	.LFB56:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 108


3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3092:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c ****     *
3094:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3095:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3096:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3097:Generated_Source\PSoC4/CyLib.c ****     *
3098:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3101:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3102:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3103:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3107:Generated_Source\PSoC4/CyLib.c ****     *
3108:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3109:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3110:Generated_Source\PSoC4/CyLib.c ****     {
 2992              		.loc 1 3110 0
 2993              		.cfi_startproc
 2994              		@ args = 0, pretend = 0, frame = 16
 2995              		@ frame_needed = 0, uses_anonymous_args = 0
 2996 0000 00B5     		push	{lr}
 2997              		.cfi_def_cfa_offset 4
 2998              		.cfi_offset 14, -4
 2999 0002 85B0     		sub	sp, sp, #20
 3000              		.cfi_def_cfa_offset 24
 3001 0004 0190     		str	r0, [sp, #4]
 3002 0006 0091     		str	r1, [sp]
3111:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3112:Generated_Source\PSoC4/CyLib.c **** 
3113:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 3003              		.loc 1 3113 0
 3004 0008 019B     		ldr	r3, [sp, #4]
 3005 000a 002B     		cmp	r3, #0
 3006 000c 10D1     		bne	.L215
3114:Generated_Source\PSoC4/CyLib.c ****         {
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3007              		.loc 1 3115 0
 3008 000e 1F4B     		ldr	r3, .L220
 3009 0010 1B68     		ldr	r3, [r3]
 3010 0012 1F4A     		ldr	r2, .L220+4
 3011 0014 1340     		ands	r3, r2
 3012 0016 0393     		str	r3, [sp, #12]
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3013              		.loc 1 3116 0
 3014 0018 009B     		ldr	r3, [sp]
 3015 001a 5A04     		lsls	r2, r3, #17
 3016 001c C023     		movs	r3, #192
 3017 001e DB02     		lsls	r3, r3, #11
 3018 0020 1340     		ands	r3, r2
 3019 0022 039A     		ldr	r2, [sp, #12]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 109


 3020 0024 1343     		orrs	r3, r2
 3021 0026 0393     		str	r3, [sp, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3022              		.loc 1 3117 0
 3023 0028 184B     		ldr	r3, .L220
 3024 002a 039A     		ldr	r2, [sp, #12]
 3025 002c 1A60     		str	r2, [r3]
3118:Generated_Source\PSoC4/CyLib.c ****         } else
3119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3120:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3121:Generated_Source\PSoC4/CyLib.c ****         {
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3124:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3125:Generated_Source\PSoC4/CyLib.c ****         } else
3126:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3127:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3128:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3129:Generated_Source\PSoC4/CyLib.c ****         {
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3133:Generated_Source\PSoC4/CyLib.c ****         } else
3134:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3135:Generated_Source\PSoC4/CyLib.c ****         {
3136:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3137:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3138:Generated_Source\PSoC4/CyLib.c ****         }
3139:Generated_Source\PSoC4/CyLib.c ****     }
 3026              		.loc 1 3139 0
 3027 002e 2AE0     		b	.L219
 3028              	.L215:
3120:Generated_Source\PSoC4/CyLib.c ****         {
 3029              		.loc 1 3120 0
 3030 0030 019B     		ldr	r3, [sp, #4]
 3031 0032 012B     		cmp	r3, #1
 3032 0034 10D1     		bne	.L217
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3033              		.loc 1 3122 0
 3034 0036 174B     		ldr	r3, .L220+8
 3035 0038 1B68     		ldr	r3, [r3]
 3036 003a 154A     		ldr	r2, .L220+4
 3037 003c 1340     		ands	r3, r2
 3038 003e 0393     		str	r3, [sp, #12]
3123:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3039              		.loc 1 3123 0
 3040 0040 009B     		ldr	r3, [sp]
 3041 0042 5A04     		lsls	r2, r3, #17
 3042 0044 C023     		movs	r3, #192
 3043 0046 DB02     		lsls	r3, r3, #11
 3044 0048 1340     		ands	r3, r2
 3045 004a 039A     		ldr	r2, [sp, #12]
 3046 004c 1343     		orrs	r3, r2
 3047 004e 0393     		str	r3, [sp, #12]
3124:Generated_Source\PSoC4/CyLib.c ****         } else
 3048              		.loc 1 3124 0
 3049 0050 104B     		ldr	r3, .L220+8
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 110


 3050 0052 039A     		ldr	r2, [sp, #12]
 3051 0054 1A60     		str	r2, [r3]
 3052              		.loc 1 3139 0
 3053 0056 16E0     		b	.L219
 3054              	.L217:
3128:Generated_Source\PSoC4/CyLib.c ****         {
 3055              		.loc 1 3128 0
 3056 0058 019B     		ldr	r3, [sp, #4]
 3057 005a 022B     		cmp	r3, #2
 3058 005c 10D1     		bne	.L218
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3059              		.loc 1 3130 0
 3060 005e 0E4B     		ldr	r3, .L220+12
 3061 0060 1B68     		ldr	r3, [r3]
 3062 0062 0B4A     		ldr	r2, .L220+4
 3063 0064 1340     		ands	r3, r2
 3064 0066 0393     		str	r3, [sp, #12]
3131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3065              		.loc 1 3131 0
 3066 0068 009B     		ldr	r3, [sp]
 3067 006a 5A04     		lsls	r2, r3, #17
 3068 006c C023     		movs	r3, #192
 3069 006e DB02     		lsls	r3, r3, #11
 3070 0070 1340     		ands	r3, r2
 3071 0072 039A     		ldr	r2, [sp, #12]
 3072 0074 1343     		orrs	r3, r2
 3073 0076 0393     		str	r3, [sp, #12]
3132:Generated_Source\PSoC4/CyLib.c ****         } else
 3074              		.loc 1 3132 0
 3075 0078 074B     		ldr	r3, .L220+12
 3076 007a 039A     		ldr	r2, [sp, #12]
 3077 007c 1A60     		str	r2, [r3]
 3078              		.loc 1 3139 0
 3079 007e 02E0     		b	.L219
 3080              	.L218:
3137:Generated_Source\PSoC4/CyLib.c ****         }
 3081              		.loc 1 3137 0 discriminator 1
 3082 0080 0020     		movs	r0, #0
 3083 0082 FFF7FEFF 		bl	CyHalt
 3084              	.L219:
 3085              		.loc 1 3139 0
 3086 0086 C046     		nop
 3087 0088 05B0     		add	sp, sp, #20
 3088              		@ sp needed
 3089 008a 00BD     		pop	{pc}
 3090              	.L221:
 3091              		.align	2
 3092              	.L220:
 3093 008c 00011040 		.word	1074790656
 3094 0090 FFFFF9FF 		.word	-393217
 3095 0094 04011040 		.word	1074790660
 3096 0098 08011040 		.word	1074790664
 3097              		.cfi_endproc
 3098              	.LFE56:
 3099              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3100              		.text
 3101              	.Letext0:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 111


 3102              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3103              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3104              		.section	.debug_info,"",%progbits
 3105              	.Ldebug_info0:
 3106 0000 C00A0000 		.4byte	0xac0
 3107 0004 0400     		.2byte	0x4
 3108 0006 00000000 		.4byte	.Ldebug_abbrev0
 3109 000a 04       		.byte	0x4
 3110 000b 01       		.uleb128 0x1
 3111 000c B2040000 		.4byte	.LASF119
 3112 0010 0C       		.byte	0xc
 3113 0011 32070000 		.4byte	.LASF120
 3114 0015 92070000 		.4byte	.LASF121
 3115 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3116 001d 00000000 		.4byte	0
 3117 0021 00000000 		.4byte	.Ldebug_line0
 3118 0025 02       		.uleb128 0x2
 3119 0026 01       		.byte	0x1
 3120 0027 06       		.byte	0x6
 3121 0028 0E010000 		.4byte	.LASF0
 3122 002c 02       		.uleb128 0x2
 3123 002d 01       		.byte	0x1
 3124 002e 08       		.byte	0x8
 3125 002f 72050000 		.4byte	.LASF1
 3126 0033 02       		.uleb128 0x2
 3127 0034 02       		.byte	0x2
 3128 0035 05       		.byte	0x5
 3129 0036 80050000 		.4byte	.LASF2
 3130 003a 02       		.uleb128 0x2
 3131 003b 02       		.byte	0x2
 3132 003c 07       		.byte	0x7
 3133 003d C2020000 		.4byte	.LASF3
 3134 0041 02       		.uleb128 0x2
 3135 0042 04       		.byte	0x4
 3136 0043 05       		.byte	0x5
 3137 0044 4D010000 		.4byte	.LASF4
 3138 0048 02       		.uleb128 0x2
 3139 0049 04       		.byte	0x4
 3140 004a 07       		.byte	0x7
 3141 004b 61020000 		.4byte	.LASF5
 3142 004f 02       		.uleb128 0x2
 3143 0050 08       		.byte	0x8
 3144 0051 05       		.byte	0x5
 3145 0052 00010000 		.4byte	.LASF6
 3146 0056 02       		.uleb128 0x2
 3147 0057 08       		.byte	0x8
 3148 0058 07       		.byte	0x7
 3149 0059 84000000 		.4byte	.LASF7
 3150 005d 03       		.uleb128 0x3
 3151 005e 04       		.byte	0x4
 3152 005f 05       		.byte	0x5
 3153 0060 696E7400 		.ascii	"int\000"
 3154 0064 02       		.uleb128 0x2
 3155 0065 04       		.byte	0x4
 3156 0066 07       		.byte	0x7
 3157 0067 45020000 		.4byte	.LASF8
 3158 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 112


 3159 006c 78010000 		.4byte	.LASF9
 3160 0070 02       		.byte	0x2
 3161 0071 D201     		.2byte	0x1d2
 3162 0073 2C000000 		.4byte	0x2c
 3163 0077 04       		.uleb128 0x4
 3164 0078 17000000 		.4byte	.LASF10
 3165 007c 02       		.byte	0x2
 3166 007d D301     		.2byte	0x1d3
 3167 007f 3A000000 		.4byte	0x3a
 3168 0083 04       		.uleb128 0x4
 3169 0084 B8010000 		.4byte	.LASF11
 3170 0088 02       		.byte	0x2
 3171 0089 D401     		.2byte	0x1d4
 3172 008b 48000000 		.4byte	0x48
 3173 008f 02       		.uleb128 0x2
 3174 0090 04       		.byte	0x4
 3175 0091 04       		.byte	0x4
 3176 0092 4A040000 		.4byte	.LASF12
 3177 0096 02       		.uleb128 0x2
 3178 0097 08       		.byte	0x8
 3179 0098 04       		.byte	0x4
 3180 0099 94010000 		.4byte	.LASF13
 3181 009d 02       		.uleb128 0x2
 3182 009e 01       		.byte	0x1
 3183 009f 08       		.byte	0x8
 3184 00a0 D4050000 		.4byte	.LASF14
 3185 00a4 04       		.uleb128 0x4
 3186 00a5 07070000 		.4byte	.LASF15
 3187 00a9 02       		.byte	0x2
 3188 00aa 7402     		.2byte	0x274
 3189 00ac 48000000 		.4byte	0x48
 3190 00b0 04       		.uleb128 0x4
 3191 00b1 A3040000 		.4byte	.LASF16
 3192 00b5 02       		.byte	0x2
 3193 00b6 7C02     		.2byte	0x27c
 3194 00b8 BC000000 		.4byte	0xbc
 3195 00bc 05       		.uleb128 0x5
 3196 00bd 6B000000 		.4byte	0x6b
 3197 00c1 04       		.uleb128 0x4
 3198 00c2 6E030000 		.4byte	.LASF17
 3199 00c6 02       		.byte	0x2
 3200 00c7 7E02     		.2byte	0x27e
 3201 00c9 CD000000 		.4byte	0xcd
 3202 00cd 05       		.uleb128 0x5
 3203 00ce 83000000 		.4byte	0x83
 3204 00d2 04       		.uleb128 0x4
 3205 00d3 D9050000 		.4byte	.LASF18
 3206 00d7 02       		.byte	0x2
 3207 00d8 8E02     		.2byte	0x28e
 3208 00da DE000000 		.4byte	0xde
 3209 00de 06       		.uleb128 0x6
 3210 00df 04       		.byte	0x4
 3211 00e0 E4000000 		.4byte	0xe4
 3212 00e4 07       		.uleb128 0x7
 3213 00e5 02       		.uleb128 0x2
 3214 00e6 08       		.byte	0x8
 3215 00e7 04       		.byte	0x4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 113


 3216 00e8 D6030000 		.4byte	.LASF19
 3217 00ec 02       		.uleb128 0x2
 3218 00ed 04       		.byte	0x4
 3219 00ee 07       		.byte	0x7
 3220 00ef 97030000 		.4byte	.LASF20
 3221 00f3 08       		.uleb128 0x8
 3222 00f4 5F040000 		.4byte	.LASF21
 3223 00f8 03       		.byte	0x3
 3224 00f9 F5       		.byte	0xf5
 3225 00fa DE000000 		.4byte	0xde
 3226 00fe 09       		.uleb128 0x9
 3227 00ff 10070000 		.4byte	.LASF22
 3228 0103 01       		.byte	0x1
 3229 0104 6B       		.byte	0x6b
 3230 0105 00000000 		.4byte	.LFB2
 3231 0109 18000000 		.4byte	.LFE2-.LFB2
 3232 010d 01       		.uleb128 0x1
 3233 010e 9C       		.byte	0x9c
 3234 010f 09       		.uleb128 0x9
 3235 0110 8E020000 		.4byte	.LASF23
 3236 0114 01       		.byte	0x1
 3237 0115 8B       		.byte	0x8b
 3238 0116 00000000 		.4byte	.LFB3
 3239 011a 14000000 		.4byte	.LFE3-.LFB3
 3240 011e 01       		.uleb128 0x1
 3241 011f 9C       		.byte	0x9c
 3242 0120 0A       		.uleb128 0xa
 3243 0121 27000000 		.4byte	.LASF26
 3244 0125 01       		.byte	0x1
 3245 0126 AD01     		.2byte	0x1ad
 3246 0128 00000000 		.4byte	.LFB4
 3247 012c 44000000 		.4byte	.LFE4-.LFB4
 3248 0130 01       		.uleb128 0x1
 3249 0131 9C       		.byte	0x9c
 3250 0132 64010000 		.4byte	0x164
 3251 0136 0B       		.uleb128 0xb
 3252 0137 A8050000 		.4byte	.LASF28
 3253 013b 01       		.byte	0x1
 3254 013c AD01     		.2byte	0x1ad
 3255 013e 83000000 		.4byte	0x83
 3256 0142 02       		.uleb128 0x2
 3257 0143 91       		.byte	0x91
 3258 0144 6C       		.sleb128 -20
 3259 0145 0C       		.uleb128 0xc
 3260 0146 2B010000 		.4byte	.LASF24
 3261 014a 01       		.byte	0x1
 3262 014b AF01     		.2byte	0x1af
 3263 014d 6B000000 		.4byte	0x6b
 3264 0151 02       		.uleb128 0x2
 3265 0152 91       		.byte	0x91
 3266 0153 77       		.sleb128 -9
 3267 0154 0C       		.uleb128 0xc
 3268 0155 5E070000 		.4byte	.LASF25
 3269 0159 01       		.byte	0x1
 3270 015a B001     		.2byte	0x1b0
 3271 015c 83000000 		.4byte	0x83
 3272 0160 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 114


 3273 0161 91       		.byte	0x91
 3274 0162 70       		.sleb128 -16
 3275 0163 00       		.byte	0
 3276 0164 0D       		.uleb128 0xd
 3277 0165 59030000 		.4byte	.LASF27
 3278 0169 01       		.byte	0x1
 3279 016a D901     		.2byte	0x1d9
 3280 016c 00000000 		.4byte	.LFB5
 3281 0170 4C000000 		.4byte	.LFE5-.LFB5
 3282 0174 01       		.uleb128 0x1
 3283 0175 9C       		.byte	0x9c
 3284 0176 8A010000 		.4byte	0x18a
 3285 017a 0B       		.uleb128 0xb
 3286 017b 8D010000 		.4byte	.LASF29
 3287 017f 01       		.byte	0x1
 3288 0180 D901     		.2byte	0x1d9
 3289 0182 83000000 		.4byte	0x83
 3290 0186 02       		.uleb128 0x2
 3291 0187 91       		.byte	0x91
 3292 0188 7C       		.sleb128 -4
 3293 0189 00       		.byte	0
 3294 018a 0E       		.uleb128 0xe
 3295 018b DA010000 		.4byte	.LASF40
 3296 018f 01       		.byte	0x1
 3297 0190 FE01     		.2byte	0x1fe
 3298 0192 83000000 		.4byte	0x83
 3299 0196 00000000 		.4byte	.LFB6
 3300 019a 34000000 		.4byte	.LFE6-.LFB6
 3301 019e 01       		.uleb128 0x1
 3302 019f 9C       		.byte	0x9c
 3303 01a0 C3010000 		.4byte	0x1c3
 3304 01a4 0C       		.uleb128 0xc
 3305 01a5 2B010000 		.4byte	.LASF24
 3306 01a9 01       		.byte	0x1
 3307 01aa 0002     		.2byte	0x200
 3308 01ac 6B000000 		.4byte	0x6b
 3309 01b0 02       		.uleb128 0x2
 3310 01b1 91       		.byte	0x91
 3311 01b2 77       		.sleb128 -9
 3312 01b3 0C       		.uleb128 0xc
 3313 01b4 F2030000 		.4byte	.LASF30
 3314 01b8 01       		.byte	0x1
 3315 01b9 0102     		.2byte	0x201
 3316 01bb 83000000 		.4byte	0x83
 3317 01bf 02       		.uleb128 0x2
 3318 01c0 91       		.byte	0x91
 3319 01c1 70       		.sleb128 -16
 3320 01c2 00       		.byte	0
 3321 01c3 0A       		.uleb128 0xa
 3322 01c4 F6050000 		.4byte	.LASF31
 3323 01c8 01       		.byte	0x1
 3324 01c9 3502     		.2byte	0x235
 3325 01cb 00000000 		.4byte	.LFB7
 3326 01cf 44000000 		.4byte	.LFE7-.LFB7
 3327 01d3 01       		.uleb128 0x1
 3328 01d4 9C       		.byte	0x9c
 3329 01d5 F8010000 		.4byte	0x1f8
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 115


 3330 01d9 0B       		.uleb128 0xb
 3331 01da EB060000 		.4byte	.LASF32
 3332 01de 01       		.byte	0x1
 3333 01df 3502     		.2byte	0x235
 3334 01e1 83000000 		.4byte	0x83
 3335 01e5 02       		.uleb128 0x2
 3336 01e6 91       		.byte	0x91
 3337 01e7 6C       		.sleb128 -20
 3338 01e8 0C       		.uleb128 0xc
 3339 01e9 2B010000 		.4byte	.LASF24
 3340 01ed 01       		.byte	0x1
 3341 01ee 3702     		.2byte	0x237
 3342 01f0 6B000000 		.4byte	0x6b
 3343 01f4 02       		.uleb128 0x2
 3344 01f5 91       		.byte	0x91
 3345 01f6 77       		.sleb128 -9
 3346 01f7 00       		.byte	0
 3347 01f8 0A       		.uleb128 0xa
 3348 01f9 13030000 		.4byte	.LASF33
 3349 01fd 01       		.byte	0x1
 3350 01fe 6F02     		.2byte	0x26f
 3351 0200 00000000 		.4byte	.LFB8
 3352 0204 E4010000 		.4byte	.LFE8-.LFB8
 3353 0208 01       		.uleb128 0x1
 3354 0209 9C       		.byte	0x9c
 3355 020a 78020000 		.4byte	0x278
 3356 020e 0B       		.uleb128 0xb
 3357 020f 1A010000 		.4byte	.LASF34
 3358 0213 01       		.byte	0x1
 3359 0214 6F02     		.2byte	0x26f
 3360 0216 83000000 		.4byte	0x83
 3361 021a 02       		.uleb128 0x2
 3362 021b 91       		.byte	0x91
 3363 021c 6C       		.sleb128 -20
 3364 021d 0C       		.uleb128 0xc
 3365 021e 0F000000 		.4byte	.LASF35
 3366 0222 01       		.byte	0x1
 3367 0223 7502     		.2byte	0x275
 3368 0225 6B000000 		.4byte	0x6b
 3369 0229 02       		.uleb128 0x2
 3370 022a 91       		.byte	0x91
 3371 022b 77       		.sleb128 -9
 3372 022c 0C       		.uleb128 0xc
 3373 022d EA030000 		.4byte	.LASF36
 3374 0231 01       		.byte	0x1
 3375 0232 7602     		.2byte	0x276
 3376 0234 6B000000 		.4byte	0x6b
 3377 0238 02       		.uleb128 0x2
 3378 0239 91       		.byte	0x91
 3379 023a 76       		.sleb128 -10
 3380 023b 0C       		.uleb128 0xc
 3381 023c 21070000 		.4byte	.LASF37
 3382 0240 01       		.byte	0x1
 3383 0241 7702     		.2byte	0x277
 3384 0243 6B000000 		.4byte	0x6b
 3385 0247 02       		.uleb128 0x2
 3386 0248 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 116


 3387 0249 73       		.sleb128 -13
 3388 024a 0C       		.uleb128 0xc
 3389 024b 6F000000 		.4byte	.LASF38
 3390 024f 01       		.byte	0x1
 3391 0250 7802     		.2byte	0x278
 3392 0252 6B000000 		.4byte	0x6b
 3393 0256 02       		.uleb128 0x2
 3394 0257 91       		.byte	0x91
 3395 0258 75       		.sleb128 -11
 3396 0259 0C       		.uleb128 0xc
 3397 025a 35060000 		.4byte	.LASF39
 3398 025e 01       		.byte	0x1
 3399 025f 7902     		.2byte	0x279
 3400 0261 6B000000 		.4byte	0x6b
 3401 0265 02       		.uleb128 0x2
 3402 0266 91       		.byte	0x91
 3403 0267 72       		.sleb128 -14
 3404 0268 0C       		.uleb128 0xc
 3405 0269 2B010000 		.4byte	.LASF24
 3406 026d 01       		.byte	0x1
 3407 026e 8402     		.2byte	0x284
 3408 0270 6B000000 		.4byte	0x6b
 3409 0274 02       		.uleb128 0x2
 3410 0275 91       		.byte	0x91
 3411 0276 74       		.sleb128 -12
 3412 0277 00       		.byte	0
 3413 0278 0E       		.uleb128 0xe
 3414 0279 B2050000 		.4byte	.LASF41
 3415 027d 01       		.byte	0x1
 3416 027e 0304     		.2byte	0x403
 3417 0280 A4000000 		.4byte	0xa4
 3418 0284 00000000 		.4byte	.LFB9
 3419 0288 70000000 		.4byte	.LFE9-.LFB9
 3420 028c 01       		.uleb128 0x1
 3421 028d 9C       		.byte	0x9c
 3422 028e B1020000 		.4byte	0x2b1
 3423 0292 0B       		.uleb128 0xb
 3424 0293 E1060000 		.4byte	.LASF42
 3425 0297 01       		.byte	0x1
 3426 0298 0304     		.2byte	0x403
 3427 029a 83000000 		.4byte	0x83
 3428 029e 02       		.uleb128 0x2
 3429 029f 91       		.byte	0x91
 3430 02a0 6C       		.sleb128 -20
 3431 02a1 0C       		.uleb128 0xc
 3432 02a2 83030000 		.4byte	.LASF43
 3433 02a6 01       		.byte	0x1
 3434 02a7 0504     		.2byte	0x405
 3435 02a9 A4000000 		.4byte	0xa4
 3436 02ad 02       		.uleb128 0x2
 3437 02ae 91       		.byte	0x91
 3438 02af 74       		.sleb128 -12
 3439 02b0 00       		.byte	0
 3440 02b1 0F       		.uleb128 0xf
 3441 02b2 A5060000 		.4byte	.LASF44
 3442 02b6 01       		.byte	0x1
 3443 02b7 9104     		.2byte	0x491
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 117


 3444 02b9 00000000 		.4byte	.LFB10
 3445 02bd 28000000 		.4byte	.LFE10-.LFB10
 3446 02c1 01       		.uleb128 0x1
 3447 02c2 9C       		.byte	0x9c
 3448 02c3 10       		.uleb128 0x10
 3449 02c4 BF010000 		.4byte	.LASF45
 3450 02c8 01       		.byte	0x1
 3451 02c9 B304     		.2byte	0x4b3
 3452 02cb 83000000 		.4byte	0x83
 3453 02cf 00000000 		.4byte	.LFB11
 3454 02d3 18000000 		.4byte	.LFE11-.LFB11
 3455 02d7 01       		.uleb128 0x1
 3456 02d8 9C       		.byte	0x9c
 3457 02d9 ED020000 		.4byte	0x2ed
 3458 02dd 0C       		.uleb128 0xc
 3459 02de 1E080000 		.4byte	.LASF46
 3460 02e2 01       		.byte	0x1
 3461 02e3 B504     		.2byte	0x4b5
 3462 02e5 83000000 		.4byte	0x83
 3463 02e9 02       		.uleb128 0x2
 3464 02ea 91       		.byte	0x91
 3465 02eb 7C       		.sleb128 -4
 3466 02ec 00       		.byte	0
 3467 02ed 0A       		.uleb128 0xa
 3468 02ee F3060000 		.4byte	.LASF47
 3469 02f2 01       		.byte	0x1
 3470 02f3 E204     		.2byte	0x4e2
 3471 02f5 00000000 		.4byte	.LFB12
 3472 02f9 54000000 		.4byte	.LFE12-.LFB12
 3473 02fd 01       		.uleb128 0x1
 3474 02fe 9C       		.byte	0x9c
 3475 02ff 22030000 		.4byte	0x322
 3476 0303 0B       		.uleb128 0xb
 3477 0304 EB060000 		.4byte	.LASF32
 3478 0308 01       		.byte	0x1
 3479 0309 E204     		.2byte	0x4e2
 3480 030b 83000000 		.4byte	0x83
 3481 030f 02       		.uleb128 0x2
 3482 0310 91       		.byte	0x91
 3483 0311 6C       		.sleb128 -20
 3484 0312 0C       		.uleb128 0xc
 3485 0313 2B010000 		.4byte	.LASF24
 3486 0317 01       		.byte	0x1
 3487 0318 E404     		.2byte	0x4e4
 3488 031a 6B000000 		.4byte	0x6b
 3489 031e 02       		.uleb128 0x2
 3490 031f 91       		.byte	0x91
 3491 0320 77       		.sleb128 -9
 3492 0321 00       		.byte	0
 3493 0322 0A       		.uleb128 0xa
 3494 0323 50040000 		.4byte	.LASF48
 3495 0327 01       		.byte	0x1
 3496 0328 4608     		.2byte	0x846
 3497 032a 00000000 		.4byte	.LFB13
 3498 032e 60000000 		.4byte	.LFE13-.LFB13
 3499 0332 01       		.uleb128 0x1
 3500 0333 9C       		.byte	0x9c
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 118


 3501 0334 48030000 		.4byte	0x348
 3502 0338 0B       		.uleb128 0xb
 3503 0339 A8040000 		.4byte	.LASF49
 3504 033d 01       		.byte	0x1
 3505 033e 4608     		.2byte	0x846
 3506 0340 83000000 		.4byte	0x83
 3507 0344 02       		.uleb128 0x2
 3508 0345 91       		.byte	0x91
 3509 0346 74       		.sleb128 -12
 3510 0347 00       		.byte	0
 3511 0348 0F       		.uleb128 0xf
 3512 0349 86060000 		.4byte	.LASF50
 3513 034d 01       		.byte	0x1
 3514 034e 6408     		.2byte	0x864
 3515 0350 00000000 		.4byte	.LFB14
 3516 0354 24000000 		.4byte	.LFE14-.LFB14
 3517 0358 01       		.uleb128 0x1
 3518 0359 9C       		.byte	0x9c
 3519 035a 11       		.uleb128 0x11
 3520 035b 73020000 		.4byte	.LASF90
 3521 035f 01       		.byte	0x1
 3522 0360 7608     		.2byte	0x876
 3523 0362 83000000 		.4byte	0x83
 3524 0366 00000000 		.4byte	.LFB15
 3525 036a 10000000 		.4byte	.LFE15-.LFB15
 3526 036e 01       		.uleb128 0x1
 3527 036f 9C       		.byte	0x9c
 3528 0370 0F       		.uleb128 0xf
 3529 0371 A1010000 		.4byte	.LASF51
 3530 0375 01       		.byte	0x1
 3531 0376 8608     		.2byte	0x886
 3532 0378 00000000 		.4byte	.LFB16
 3533 037c 10000000 		.4byte	.LFE16-.LFB16
 3534 0380 01       		.uleb128 0x1
 3535 0381 9C       		.byte	0x9c
 3536 0382 10       		.uleb128 0x10
 3537 0383 AE020000 		.4byte	.LASF52
 3538 0387 01       		.byte	0x1
 3539 0388 A008     		.2byte	0x8a0
 3540 038a 83000000 		.4byte	0x83
 3541 038e 00000000 		.4byte	.LFB17
 3542 0392 28000000 		.4byte	.LFE17-.LFB17
 3543 0396 01       		.uleb128 0x1
 3544 0397 9C       		.byte	0x9c
 3545 0398 BB030000 		.4byte	0x3bb
 3546 039c 0B       		.uleb128 0xb
 3547 039d CD050000 		.4byte	.LASF53
 3548 03a1 01       		.byte	0x1
 3549 03a2 A008     		.2byte	0x8a0
 3550 03a4 83000000 		.4byte	0x83
 3551 03a8 02       		.uleb128 0x2
 3552 03a9 91       		.byte	0x91
 3553 03aa 74       		.sleb128 -12
 3554 03ab 0C       		.uleb128 0xc
 3555 03ac 83030000 		.4byte	.LASF43
 3556 03b0 01       		.byte	0x1
 3557 03b1 A208     		.2byte	0x8a2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 119


 3558 03b3 83000000 		.4byte	0x83
 3559 03b7 02       		.uleb128 0x2
 3560 03b8 91       		.byte	0x91
 3561 03b9 7C       		.sleb128 -4
 3562 03ba 00       		.byte	0
 3563 03bb 10       		.uleb128 0x10
 3564 03bc 61000000 		.4byte	.LASF54
 3565 03c0 01       		.byte	0x1
 3566 03c1 B708     		.2byte	0x8b7
 3567 03c3 83000000 		.4byte	0x83
 3568 03c7 00000000 		.4byte	.LFB18
 3569 03cb 1C000000 		.4byte	.LFE18-.LFB18
 3570 03cf 01       		.uleb128 0x1
 3571 03d0 9C       		.byte	0x9c
 3572 03d1 E5030000 		.4byte	0x3e5
 3573 03d5 0C       		.uleb128 0xc
 3574 03d6 1E000000 		.4byte	.LASF55
 3575 03da 01       		.byte	0x1
 3576 03db B908     		.2byte	0x8b9
 3577 03dd 83000000 		.4byte	0x83
 3578 03e1 02       		.uleb128 0x2
 3579 03e2 91       		.byte	0x91
 3580 03e3 7C       		.sleb128 -4
 3581 03e4 00       		.byte	0
 3582 03e5 0D       		.uleb128 0xd
 3583 03e6 AC000000 		.4byte	.LASF56
 3584 03ea 01       		.byte	0x1
 3585 03eb CE08     		.2byte	0x8ce
 3586 03ed 00000000 		.4byte	.LFB19
 3587 03f1 14000000 		.4byte	.LFE19-.LFB19
 3588 03f5 01       		.uleb128 0x1
 3589 03f6 9C       		.byte	0x9c
 3590 03f7 0B040000 		.4byte	0x40b
 3591 03fb 0B       		.uleb128 0xb
 3592 03fc D5010000 		.4byte	.LASF57
 3593 0400 01       		.byte	0x1
 3594 0401 CE08     		.2byte	0x8ce
 3595 0403 83000000 		.4byte	0x83
 3596 0407 02       		.uleb128 0x2
 3597 0408 91       		.byte	0x91
 3598 0409 7C       		.sleb128 -4
 3599 040a 00       		.byte	0
 3600 040b 0E       		.uleb128 0xe
 3601 040c 47030000 		.4byte	.LASF58
 3602 0410 01       		.byte	0x1
 3603 0411 E708     		.2byte	0x8e7
 3604 0413 D2000000 		.4byte	0xd2
 3605 0417 00000000 		.4byte	.LFB20
 3606 041b 4C000000 		.4byte	.LFE20-.LFB20
 3607 041f 01       		.uleb128 0x1
 3608 0420 9C       		.byte	0x9c
 3609 0421 62040000 		.4byte	0x462
 3610 0425 0B       		.uleb128 0xb
 3611 0426 03030000 		.4byte	.LASF59
 3612 042a 01       		.byte	0x1
 3613 042b E708     		.2byte	0x8e7
 3614 042d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 120


 3615 0431 02       		.uleb128 0x2
 3616 0432 91       		.byte	0x91
 3617 0433 6F       		.sleb128 -17
 3618 0434 0B       		.uleb128 0xb
 3619 0435 E2030000 		.4byte	.LASF60
 3620 0439 01       		.byte	0x1
 3621 043a E708     		.2byte	0x8e7
 3622 043c D2000000 		.4byte	0xd2
 3623 0440 02       		.uleb128 0x2
 3624 0441 91       		.byte	0x91
 3625 0442 68       		.sleb128 -24
 3626 0443 0C       		.uleb128 0xc
 3627 0444 53000000 		.4byte	.LASF61
 3628 0448 01       		.byte	0x1
 3629 0449 E908     		.2byte	0x8e9
 3630 044b D2000000 		.4byte	0xd2
 3631 044f 02       		.uleb128 0x2
 3632 0450 91       		.byte	0x91
 3633 0451 70       		.sleb128 -16
 3634 0452 0C       		.uleb128 0xc
 3635 0453 00000000 		.4byte	.LASF62
 3636 0457 01       		.byte	0x1
 3637 0458 EA08     		.2byte	0x8ea
 3638 045a 62040000 		.4byte	0x462
 3639 045e 02       		.uleb128 0x2
 3640 045f 91       		.byte	0x91
 3641 0460 74       		.sleb128 -12
 3642 0461 00       		.byte	0
 3643 0462 06       		.uleb128 0x6
 3644 0463 04       		.byte	0x4
 3645 0464 D2000000 		.4byte	0xd2
 3646 0468 0E       		.uleb128 0xe
 3647 0469 96050000 		.4byte	.LASF63
 3648 046d 01       		.byte	0x1
 3649 046e 0909     		.2byte	0x909
 3650 0470 D2000000 		.4byte	0xd2
 3651 0474 00000000 		.4byte	.LFB21
 3652 0478 36000000 		.4byte	.LFE21-.LFB21
 3653 047c 01       		.uleb128 0x1
 3654 047d 9C       		.byte	0x9c
 3655 047e A1040000 		.4byte	0x4a1
 3656 0482 0B       		.uleb128 0xb
 3657 0483 03030000 		.4byte	.LASF59
 3658 0487 01       		.byte	0x1
 3659 0488 0909     		.2byte	0x909
 3660 048a 6B000000 		.4byte	0x6b
 3661 048e 02       		.uleb128 0x2
 3662 048f 91       		.byte	0x91
 3663 0490 6F       		.sleb128 -17
 3664 0491 0C       		.uleb128 0xc
 3665 0492 00000000 		.4byte	.LASF62
 3666 0496 01       		.byte	0x1
 3667 0497 0B09     		.2byte	0x90b
 3668 0499 62040000 		.4byte	0x462
 3669 049d 02       		.uleb128 0x2
 3670 049e 91       		.byte	0x91
 3671 049f 74       		.sleb128 -12
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 121


 3672 04a0 00       		.byte	0
 3673 04a1 0E       		.uleb128 0xe
 3674 04a2 F4020000 		.4byte	.LASF64
 3675 04a6 01       		.byte	0x1
 3676 04a7 1F09     		.2byte	0x91f
 3677 04a9 D2000000 		.4byte	0xd2
 3678 04ad 00000000 		.4byte	.LFB22
 3679 04b1 50000000 		.4byte	.LFE22-.LFB22
 3680 04b5 01       		.uleb128 0x1
 3681 04b6 9C       		.byte	0x9c
 3682 04b7 F8040000 		.4byte	0x4f8
 3683 04bb 0B       		.uleb128 0xb
 3684 04bc 03030000 		.4byte	.LASF59
 3685 04c0 01       		.byte	0x1
 3686 04c1 1F09     		.2byte	0x91f
 3687 04c3 6B000000 		.4byte	0x6b
 3688 04c7 02       		.uleb128 0x2
 3689 04c8 91       		.byte	0x91
 3690 04c9 6F       		.sleb128 -17
 3691 04ca 0B       		.uleb128 0xb
 3692 04cb E2030000 		.4byte	.LASF60
 3693 04cf 01       		.byte	0x1
 3694 04d0 1F09     		.2byte	0x91f
 3695 04d2 D2000000 		.4byte	0xd2
 3696 04d6 02       		.uleb128 0x2
 3697 04d7 91       		.byte	0x91
 3698 04d8 68       		.sleb128 -24
 3699 04d9 0C       		.uleb128 0xc
 3700 04da 53000000 		.4byte	.LASF61
 3701 04de 01       		.byte	0x1
 3702 04df 2109     		.2byte	0x921
 3703 04e1 D2000000 		.4byte	0xd2
 3704 04e5 02       		.uleb128 0x2
 3705 04e6 91       		.byte	0x91
 3706 04e7 70       		.sleb128 -16
 3707 04e8 0C       		.uleb128 0xc
 3708 04e9 00000000 		.4byte	.LASF62
 3709 04ed 01       		.byte	0x1
 3710 04ee 2209     		.2byte	0x922
 3711 04f0 62040000 		.4byte	0x462
 3712 04f4 02       		.uleb128 0x2
 3713 04f5 91       		.byte	0x91
 3714 04f6 74       		.sleb128 -12
 3715 04f7 00       		.byte	0
 3716 04f8 0E       		.uleb128 0xe
 3717 04f9 87040000 		.4byte	.LASF65
 3718 04fd 01       		.byte	0x1
 3719 04fe 3B09     		.2byte	0x93b
 3720 0500 D2000000 		.4byte	0xd2
 3721 0504 00000000 		.4byte	.LFB23
 3722 0508 38000000 		.4byte	.LFE23-.LFB23
 3723 050c 01       		.uleb128 0x1
 3724 050d 9C       		.byte	0x9c
 3725 050e 31050000 		.4byte	0x531
 3726 0512 0B       		.uleb128 0xb
 3727 0513 03030000 		.4byte	.LASF59
 3728 0517 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 122


 3729 0518 3B09     		.2byte	0x93b
 3730 051a 6B000000 		.4byte	0x6b
 3731 051e 02       		.uleb128 0x2
 3732 051f 91       		.byte	0x91
 3733 0520 6F       		.sleb128 -17
 3734 0521 0C       		.uleb128 0xc
 3735 0522 00000000 		.4byte	.LASF62
 3736 0526 01       		.byte	0x1
 3737 0527 3D09     		.2byte	0x93d
 3738 0529 62040000 		.4byte	0x462
 3739 052d 02       		.uleb128 0x2
 3740 052e 91       		.byte	0x91
 3741 052f 74       		.sleb128 -12
 3742 0530 00       		.byte	0
 3743 0531 0A       		.uleb128 0xa
 3744 0532 39040000 		.4byte	.LASF66
 3745 0536 01       		.byte	0x1
 3746 0537 4E09     		.2byte	0x94e
 3747 0539 00000000 		.4byte	.LFB24
 3748 053d B4000000 		.4byte	.LFE24-.LFB24
 3749 0541 01       		.uleb128 0x1
 3750 0542 9C       		.byte	0x9c
 3751 0543 93050000 		.4byte	0x593
 3752 0547 0B       		.uleb128 0xb
 3753 0548 03030000 		.4byte	.LASF59
 3754 054c 01       		.byte	0x1
 3755 054d 4E09     		.2byte	0x94e
 3756 054f 6B000000 		.4byte	0x6b
 3757 0553 02       		.uleb128 0x2
 3758 0554 91       		.byte	0x91
 3759 0555 67       		.sleb128 -25
 3760 0556 0B       		.uleb128 0xb
 3761 0557 0A030000 		.4byte	.LASF67
 3762 055b 01       		.byte	0x1
 3763 055c 4E09     		.2byte	0x94e
 3764 055e 6B000000 		.4byte	0x6b
 3765 0562 02       		.uleb128 0x2
 3766 0563 91       		.byte	0x91
 3767 0564 66       		.sleb128 -26
 3768 0565 0C       		.uleb128 0xc
 3769 0566 2B010000 		.4byte	.LASF24
 3770 056a 01       		.byte	0x1
 3771 056b 5009     		.2byte	0x950
 3772 056d 6B000000 		.4byte	0x6b
 3773 0571 02       		.uleb128 0x2
 3774 0572 91       		.byte	0x91
 3775 0573 73       		.sleb128 -13
 3776 0574 0C       		.uleb128 0xc
 3777 0575 9B010000 		.4byte	.LASF68
 3778 0579 01       		.byte	0x1
 3779 057a 5109     		.2byte	0x951
 3780 057c 83000000 		.4byte	0x83
 3781 0580 02       		.uleb128 0x2
 3782 0581 91       		.byte	0x91
 3783 0582 74       		.sleb128 -12
 3784 0583 0C       		.uleb128 0xc
 3785 0584 1E020000 		.4byte	.LASF69
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 123


 3786 0588 01       		.byte	0x1
 3787 0589 5209     		.2byte	0x952
 3788 058b 83000000 		.4byte	0x83
 3789 058f 02       		.uleb128 0x2
 3790 0590 91       		.byte	0x91
 3791 0591 6C       		.sleb128 -20
 3792 0592 00       		.byte	0
 3793 0593 0E       		.uleb128 0xe
 3794 0594 F2010000 		.4byte	.LASF70
 3795 0598 01       		.byte	0x1
 3796 0599 7009     		.2byte	0x970
 3797 059b 6B000000 		.4byte	0x6b
 3798 059f 00000000 		.4byte	.LFB25
 3799 05a3 5C000000 		.4byte	.LFE25-.LFB25
 3800 05a7 01       		.uleb128 0x1
 3801 05a8 9C       		.byte	0x9c
 3802 05a9 CC050000 		.4byte	0x5cc
 3803 05ad 0B       		.uleb128 0xb
 3804 05ae 03030000 		.4byte	.LASF59
 3805 05b2 01       		.byte	0x1
 3806 05b3 7009     		.2byte	0x970
 3807 05b5 6B000000 		.4byte	0x6b
 3808 05b9 02       		.uleb128 0x2
 3809 05ba 91       		.byte	0x91
 3810 05bb 6F       		.sleb128 -17
 3811 05bc 0C       		.uleb128 0xc
 3812 05bd 0A030000 		.4byte	.LASF67
 3813 05c1 01       		.byte	0x1
 3814 05c2 7209     		.2byte	0x972
 3815 05c4 6B000000 		.4byte	0x6b
 3816 05c8 02       		.uleb128 0x2
 3817 05c9 91       		.byte	0x91
 3818 05ca 77       		.sleb128 -9
 3819 05cb 00       		.byte	0
 3820 05cc 0D       		.uleb128 0xd
 3821 05cd 8A050000 		.4byte	.LASF71
 3822 05d1 01       		.byte	0x1
 3823 05d2 8509     		.2byte	0x985
 3824 05d4 00000000 		.4byte	.LFB26
 3825 05d8 28000000 		.4byte	.LFE26-.LFB26
 3826 05dc 01       		.uleb128 0x1
 3827 05dd 9C       		.byte	0x9c
 3828 05de F2050000 		.4byte	0x5f2
 3829 05e2 0B       		.uleb128 0xb
 3830 05e3 03030000 		.4byte	.LASF59
 3831 05e7 01       		.byte	0x1
 3832 05e8 8509     		.2byte	0x985
 3833 05ea 6B000000 		.4byte	0x6b
 3834 05ee 02       		.uleb128 0x2
 3835 05ef 91       		.byte	0x91
 3836 05f0 7F       		.sleb128 -1
 3837 05f1 00       		.byte	0
 3838 05f2 10       		.uleb128 0x10
 3839 05f3 F2000000 		.4byte	.LASF72
 3840 05f7 01       		.byte	0x1
 3841 05f8 9709     		.2byte	0x997
 3842 05fa 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 124


 3843 05fe 00000000 		.4byte	.LFB27
 3844 0602 30000000 		.4byte	.LFE27-.LFB27
 3845 0606 01       		.uleb128 0x1
 3846 0607 9C       		.byte	0x9c
 3847 0608 1C060000 		.4byte	0x61c
 3848 060c 0B       		.uleb128 0xb
 3849 060d 03030000 		.4byte	.LASF59
 3850 0611 01       		.byte	0x1
 3851 0612 9709     		.2byte	0x997
 3852 0614 6B000000 		.4byte	0x6b
 3853 0618 02       		.uleb128 0x2
 3854 0619 91       		.byte	0x91
 3855 061a 7F       		.sleb128 -1
 3856 061b 00       		.byte	0
 3857 061c 0D       		.uleb128 0xd
 3858 061d 56010000 		.4byte	.LASF73
 3859 0621 01       		.byte	0x1
 3860 0622 A709     		.2byte	0x9a7
 3861 0624 00000000 		.4byte	.LFB28
 3862 0628 28000000 		.4byte	.LFE28-.LFB28
 3863 062c 01       		.uleb128 0x1
 3864 062d 9C       		.byte	0x9c
 3865 062e 42060000 		.4byte	0x642
 3866 0632 0B       		.uleb128 0xb
 3867 0633 03030000 		.4byte	.LASF59
 3868 0637 01       		.byte	0x1
 3869 0638 A709     		.2byte	0x9a7
 3870 063a 6B000000 		.4byte	0x6b
 3871 063e 02       		.uleb128 0x2
 3872 063f 91       		.byte	0x91
 3873 0640 7F       		.sleb128 -1
 3874 0641 00       		.byte	0
 3875 0642 0D       		.uleb128 0xd
 3876 0643 9E020000 		.4byte	.LASF74
 3877 0647 01       		.byte	0x1
 3878 0648 B509     		.2byte	0x9b5
 3879 064a 00000000 		.4byte	.LFB29
 3880 064e 28000000 		.4byte	.LFE29-.LFB29
 3881 0652 01       		.uleb128 0x1
 3882 0653 9C       		.byte	0x9c
 3883 0654 68060000 		.4byte	0x668
 3884 0658 0B       		.uleb128 0xb
 3885 0659 03030000 		.4byte	.LASF59
 3886 065d 01       		.byte	0x1
 3887 065e B509     		.2byte	0x9b5
 3888 0660 6B000000 		.4byte	0x6b
 3889 0664 02       		.uleb128 0x2
 3890 0665 91       		.byte	0x91
 3891 0666 7F       		.sleb128 -1
 3892 0667 00       		.byte	0
 3893 0668 0D       		.uleb128 0xd
 3894 0669 C4030000 		.4byte	.LASF75
 3895 066d 01       		.byte	0x1
 3896 066e C409     		.2byte	0x9c4
 3897 0670 00000000 		.4byte	.LFB30
 3898 0674 28000000 		.4byte	.LFE30-.LFB30
 3899 0678 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 125


 3900 0679 9C       		.byte	0x9c
 3901 067a 8E060000 		.4byte	0x68e
 3902 067e 0B       		.uleb128 0xb
 3903 067f 03030000 		.4byte	.LASF59
 3904 0683 01       		.byte	0x1
 3905 0684 C409     		.2byte	0x9c4
 3906 0686 6B000000 		.4byte	0x6b
 3907 068a 02       		.uleb128 0x2
 3908 068b 91       		.byte	0x91
 3909 068c 7F       		.sleb128 -1
 3910 068d 00       		.byte	0
 3911 068e 0D       		.uleb128 0xd
 3912 068f 3E020000 		.4byte	.LASF76
 3913 0693 01       		.byte	0x1
 3914 0694 D309     		.2byte	0x9d3
 3915 0696 00000000 		.4byte	.LFB31
 3916 069a 12000000 		.4byte	.LFE31-.LFB31
 3917 069e 01       		.uleb128 0x1
 3918 069f 9C       		.byte	0x9c
 3919 06a0 B4060000 		.4byte	0x6b4
 3920 06a4 0B       		.uleb128 0xb
 3921 06a5 CD050000 		.4byte	.LASF53
 3922 06a9 01       		.byte	0x1
 3923 06aa D309     		.2byte	0x9d3
 3924 06ac 6B000000 		.4byte	0x6b
 3925 06b0 02       		.uleb128 0x2
 3926 06b1 91       		.byte	0x91
 3927 06b2 7F       		.sleb128 -1
 3928 06b3 00       		.byte	0
 3929 06b4 0F       		.uleb128 0xf
 3930 06b5 C9000000 		.4byte	.LASF77
 3931 06b9 01       		.byte	0x1
 3932 06ba EB09     		.2byte	0x9eb
 3933 06bc 00000000 		.4byte	.LFB32
 3934 06c0 1C000000 		.4byte	.LFE32-.LFB32
 3935 06c4 01       		.uleb128 0x1
 3936 06c5 9C       		.byte	0x9c
 3937 06c6 0A       		.uleb128 0xa
 3938 06c7 4C060000 		.4byte	.LASF78
 3939 06cb 01       		.byte	0x1
 3940 06cc FF09     		.2byte	0x9ff
 3941 06ce 00000000 		.4byte	.LFB33
 3942 06d2 48000000 		.4byte	.LFE33-.LFB33
 3943 06d6 01       		.uleb128 0x1
 3944 06d7 9C       		.byte	0x9c
 3945 06d8 EC060000 		.4byte	0x6ec
 3946 06dc 0B       		.uleb128 0xb
 3947 06dd 96040000 		.4byte	.LASF79
 3948 06e1 01       		.byte	0x1
 3949 06e2 FF09     		.2byte	0x9ff
 3950 06e4 83000000 		.4byte	0x83
 3951 06e8 02       		.uleb128 0x2
 3952 06e9 91       		.byte	0x91
 3953 06ea 74       		.sleb128 -12
 3954 06eb 00       		.byte	0
 3955 06ec 0A       		.uleb128 0xa
 3956 06ed C3050000 		.4byte	.LASF80
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 126


 3957 06f1 01       		.byte	0x1
 3958 06f2 160A     		.2byte	0xa16
 3959 06f4 00000000 		.4byte	.LFB34
 3960 06f8 28000000 		.4byte	.LFE34-.LFB34
 3961 06fc 01       		.uleb128 0x1
 3962 06fd 9C       		.byte	0x9c
 3963 06fe 12070000 		.4byte	0x712
 3964 0702 0B       		.uleb128 0xb
 3965 0703 51070000 		.4byte	.LASF81
 3966 0707 01       		.byte	0x1
 3967 0708 160A     		.2byte	0xa16
 3968 070a 77000000 		.4byte	0x77
 3969 070e 02       		.uleb128 0x2
 3970 070f 91       		.byte	0x91
 3971 0710 76       		.sleb128 -10
 3972 0711 00       		.byte	0
 3973 0712 0A       		.uleb128 0xa
 3974 0713 1F010000 		.4byte	.LASF82
 3975 0717 01       		.byte	0x1
 3976 0718 240A     		.2byte	0xa24
 3977 071a 00000000 		.4byte	.LFB35
 3978 071e 80000000 		.4byte	.LFE35-.LFB35
 3979 0722 01       		.uleb128 0x1
 3980 0723 9C       		.byte	0x9c
 3981 0724 38070000 		.4byte	0x738
 3982 0728 0B       		.uleb128 0xb
 3983 0729 1A010000 		.4byte	.LASF34
 3984 072d 01       		.byte	0x1
 3985 072e 240A     		.2byte	0xa24
 3986 0730 83000000 		.4byte	0x83
 3987 0734 02       		.uleb128 0x2
 3988 0735 91       		.byte	0x91
 3989 0736 74       		.sleb128 -12
 3990 0737 00       		.byte	0
 3991 0738 12       		.uleb128 0x12
 3992 0739 74030000 		.4byte	.LASF83
 3993 073d 01       		.byte	0x1
 3994 073e 440A     		.2byte	0xa44
 3995 0740 00000000 		.4byte	.LFB36
 3996 0744 20000000 		.4byte	.LFE36-.LFB36
 3997 0748 01       		.uleb128 0x1
 3998 0749 9C       		.byte	0x9c
 3999 074a 0A       		.uleb128 0xa
 4000 074b 10020000 		.4byte	.LASF84
 4001 074f 01       		.byte	0x1
 4002 0750 610A     		.2byte	0xa61
 4003 0752 00000000 		.4byte	.LFB37
 4004 0756 5C000000 		.4byte	.LFE37-.LFB37
 4005 075a 01       		.uleb128 0x1
 4006 075b 9C       		.byte	0x9c
 4007 075c 6E070000 		.4byte	0x76e
 4008 0760 13       		.uleb128 0x13
 4009 0761 6900     		.ascii	"i\000"
 4010 0763 01       		.byte	0x1
 4011 0764 630A     		.2byte	0xa63
 4012 0766 83000000 		.4byte	0x83
 4013 076a 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 127


 4014 076b 91       		.byte	0x91
 4015 076c 74       		.sleb128 -12
 4016 076d 00       		.byte	0
 4017 076e 12       		.uleb128 0x12
 4018 076f E6050000 		.4byte	.LASF85
 4019 0773 01       		.byte	0x1
 4020 0774 7F0A     		.2byte	0xa7f
 4021 0776 00000000 		.4byte	.LFB38
 4022 077a 1C000000 		.4byte	.LFE38-.LFB38
 4023 077e 01       		.uleb128 0x1
 4024 077f 9C       		.byte	0x9c
 4025 0780 0F       		.uleb128 0xf
 4026 0781 D3060000 		.4byte	.LASF86
 4027 0785 01       		.byte	0x1
 4028 0786 900A     		.2byte	0xa90
 4029 0788 00000000 		.4byte	.LFB39
 4030 078c 14000000 		.4byte	.LFE39-.LFB39
 4031 0790 01       		.uleb128 0x1
 4032 0791 9C       		.byte	0x9c
 4033 0792 0F       		.uleb128 0xf
 4034 0793 D9000000 		.4byte	.LASF87
 4035 0797 01       		.byte	0x1
 4036 0798 A00A     		.2byte	0xaa0
 4037 079a 00000000 		.4byte	.LFB40
 4038 079e 14000000 		.4byte	.LFE40-.LFB40
 4039 07a2 01       		.uleb128 0x1
 4040 07a3 9C       		.byte	0x9c
 4041 07a4 0F       		.uleb128 0xf
 4042 07a5 6C060000 		.4byte	.LASF88
 4043 07a9 01       		.byte	0x1
 4044 07aa B00A     		.2byte	0xab0
 4045 07ac 00000000 		.4byte	.LFB41
 4046 07b0 14000000 		.4byte	.LFE41-.LFB41
 4047 07b4 01       		.uleb128 0x1
 4048 07b5 9C       		.byte	0x9c
 4049 07b6 0D       		.uleb128 0xd
 4050 07b7 65070000 		.4byte	.LASF89
 4051 07bb 01       		.byte	0x1
 4052 07bc C10A     		.2byte	0xac1
 4053 07be 00000000 		.4byte	.LFB42
 4054 07c2 18000000 		.4byte	.LFE42-.LFB42
 4055 07c6 01       		.uleb128 0x1
 4056 07c7 9C       		.byte	0x9c
 4057 07c8 DC070000 		.4byte	0x7dc
 4058 07cc 0B       		.uleb128 0xb
 4059 07cd 1E020000 		.4byte	.LASF69
 4060 07d1 01       		.byte	0x1
 4061 07d2 C10A     		.2byte	0xac1
 4062 07d4 83000000 		.4byte	0x83
 4063 07d8 02       		.uleb128 0x2
 4064 07d9 91       		.byte	0x91
 4065 07da 7C       		.sleb128 -4
 4066 07db 00       		.byte	0
 4067 07dc 11       		.uleb128 0x11
 4068 07dd 3A010000 		.4byte	.LASF91
 4069 07e1 01       		.byte	0x1
 4070 07e2 D10A     		.2byte	0xad1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 128


 4071 07e4 83000000 		.4byte	0x83
 4072 07e8 00000000 		.4byte	.LFB43
 4073 07ec 10000000 		.4byte	.LFE43-.LFB43
 4074 07f0 01       		.uleb128 0x1
 4075 07f1 9C       		.byte	0x9c
 4076 07f2 11       		.uleb128 0x11
 4077 07f3 19040000 		.4byte	.LASF92
 4078 07f7 01       		.byte	0x1
 4079 07f8 E10A     		.2byte	0xae1
 4080 07fa 83000000 		.4byte	0x83
 4081 07fe 00000000 		.4byte	.LFB44
 4082 0802 10000000 		.4byte	.LFE44-.LFB44
 4083 0806 01       		.uleb128 0x1
 4084 0807 9C       		.byte	0x9c
 4085 0808 0D       		.uleb128 0xd
 4086 0809 DC020000 		.4byte	.LASF93
 4087 080d 01       		.byte	0x1
 4088 080e 010B     		.2byte	0xb01
 4089 0810 00000000 		.4byte	.LFB45
 4090 0814 30000000 		.4byte	.LFE45-.LFB45
 4091 0818 01       		.uleb128 0x1
 4092 0819 9C       		.byte	0x9c
 4093 081a 2E080000 		.4byte	0x82e
 4094 081e 0B       		.uleb128 0xb
 4095 081f 24020000 		.4byte	.LASF94
 4096 0823 01       		.byte	0x1
 4097 0824 010B     		.2byte	0xb01
 4098 0826 83000000 		.4byte	0x83
 4099 082a 02       		.uleb128 0x2
 4100 082b 91       		.byte	0x91
 4101 082c 7C       		.sleb128 -4
 4102 082d 00       		.byte	0
 4103 082e 11       		.uleb128 0x11
 4104 082f 54060000 		.4byte	.LASF95
 4105 0833 01       		.byte	0x1
 4106 0834 1A0B     		.2byte	0xb1a
 4107 0836 83000000 		.4byte	0x83
 4108 083a 00000000 		.4byte	.LFB46
 4109 083e 14000000 		.4byte	.LFE46-.LFB46
 4110 0842 01       		.uleb128 0x1
 4111 0843 9C       		.byte	0x9c
 4112 0844 11       		.uleb128 0x11
 4113 0845 71040000 		.4byte	.LASF96
 4114 0849 01       		.byte	0x1
 4115 084a 310B     		.2byte	0xb31
 4116 084c 83000000 		.4byte	0x83
 4117 0850 00000000 		.4byte	.LFB47
 4118 0854 14000000 		.4byte	.LFE47-.LFB47
 4119 0858 01       		.uleb128 0x1
 4120 0859 9C       		.byte	0x9c
 4121 085a 0F       		.uleb128 0xf
 4122 085b 52020000 		.4byte	.LASF97
 4123 085f 01       		.byte	0x1
 4124 0860 3E0B     		.2byte	0xb3e
 4125 0862 00000000 		.4byte	.LFB48
 4126 0866 10000000 		.4byte	.LFE48-.LFB48
 4127 086a 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 129


 4128 086b 9C       		.byte	0x9c
 4129 086c 10       		.uleb128 0x10
 4130 086d 0D060000 		.4byte	.LASF98
 4131 0871 01       		.byte	0x1
 4132 0872 610B     		.2byte	0xb61
 4133 0874 F3000000 		.4byte	0xf3
 4134 0878 00000000 		.4byte	.LFB49
 4135 087c 28000000 		.4byte	.LFE49-.LFB49
 4136 0880 01       		.uleb128 0x1
 4137 0881 9C       		.byte	0x9c
 4138 0882 B4080000 		.4byte	0x8b4
 4139 0886 0B       		.uleb128 0xb
 4140 0887 03030000 		.4byte	.LASF59
 4141 088b 01       		.byte	0x1
 4142 088c 610B     		.2byte	0xb61
 4143 088e 83000000 		.4byte	0x83
 4144 0892 02       		.uleb128 0x2
 4145 0893 91       		.byte	0x91
 4146 0894 74       		.sleb128 -12
 4147 0895 0B       		.uleb128 0xb
 4148 0896 FF030000 		.4byte	.LASF99
 4149 089a 01       		.byte	0x1
 4150 089b 610B     		.2byte	0xb61
 4151 089d F3000000 		.4byte	0xf3
 4152 08a1 02       		.uleb128 0x2
 4153 08a2 91       		.byte	0x91
 4154 08a3 70       		.sleb128 -16
 4155 08a4 0C       		.uleb128 0xc
 4156 08a5 5A000000 		.4byte	.LASF100
 4157 08a9 01       		.byte	0x1
 4158 08aa 630B     		.2byte	0xb63
 4159 08ac F3000000 		.4byte	0xf3
 4160 08b0 02       		.uleb128 0x2
 4161 08b1 91       		.byte	0x91
 4162 08b2 7C       		.sleb128 -4
 4163 08b3 00       		.byte	0
 4164 08b4 10       		.uleb128 0x10
 4165 08b5 63010000 		.4byte	.LASF101
 4166 08b9 01       		.byte	0x1
 4167 08ba 790B     		.2byte	0xb79
 4168 08bc F3000000 		.4byte	0xf3
 4169 08c0 00000000 		.4byte	.LFB50
 4170 08c4 18000000 		.4byte	.LFE50-.LFB50
 4171 08c8 01       		.uleb128 0x1
 4172 08c9 9C       		.byte	0x9c
 4173 08ca DE080000 		.4byte	0x8de
 4174 08ce 0B       		.uleb128 0xb
 4175 08cf 03030000 		.4byte	.LASF59
 4176 08d3 01       		.byte	0x1
 4177 08d4 790B     		.2byte	0xb79
 4178 08d6 83000000 		.4byte	0x83
 4179 08da 02       		.uleb128 0x2
 4180 08db 91       		.byte	0x91
 4181 08dc 7C       		.sleb128 -4
 4182 08dd 00       		.byte	0
 4183 08de 14       		.uleb128 0x14
 4184 08df 78070000 		.4byte	.LASF122
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 130


 4185 08e3 01       		.byte	0x1
 4186 08e4 860B     		.2byte	0xb86
 4187 08e6 00000000 		.4byte	.LFB51
 4188 08ea 40000000 		.4byte	.LFE51-.LFB51
 4189 08ee 01       		.uleb128 0x1
 4190 08ef 9C       		.byte	0x9c
 4191 08f0 02090000 		.4byte	0x902
 4192 08f4 13       		.uleb128 0x13
 4193 08f5 6900     		.ascii	"i\000"
 4194 08f7 01       		.byte	0x1
 4195 08f8 880B     		.2byte	0xb88
 4196 08fa 83000000 		.4byte	0x83
 4197 08fe 02       		.uleb128 0x2
 4198 08ff 91       		.byte	0x91
 4199 0900 74       		.sleb128 -12
 4200 0901 00       		.byte	0
 4201 0902 0D       		.uleb128 0xd
 4202 0903 30020000 		.4byte	.LASF102
 4203 0907 01       		.byte	0x1
 4204 0908 A60B     		.2byte	0xba6
 4205 090a 00000000 		.4byte	.LFB52
 4206 090e BC000000 		.4byte	.LFE52-.LFB52
 4207 0912 01       		.uleb128 0x1
 4208 0913 9C       		.byte	0x9c
 4209 0914 28090000 		.4byte	0x928
 4210 0918 0B       		.uleb128 0xb
 4211 0919 43060000 		.4byte	.LASF103
 4212 091d 01       		.byte	0x1
 4213 091e A60B     		.2byte	0xba6
 4214 0920 28090000 		.4byte	0x928
 4215 0924 02       		.uleb128 0x2
 4216 0925 91       		.byte	0x91
 4217 0926 7C       		.sleb128 -4
 4218 0927 00       		.byte	0
 4219 0928 06       		.uleb128 0x6
 4220 0929 04       		.byte	0x4
 4221 092a 83000000 		.4byte	0x83
 4222 092e 0D       		.uleb128 0xd
 4223 092f 55050000 		.4byte	.LASF104
 4224 0933 01       		.byte	0x1
 4225 0934 D20B     		.2byte	0xbd2
 4226 0936 00000000 		.4byte	.LFB53
 4227 093a 34000000 		.4byte	.LFE53-.LFB53
 4228 093e 01       		.uleb128 0x1
 4229 093f 9C       		.byte	0x9c
 4230 0940 63090000 		.4byte	0x963
 4231 0944 0B       		.uleb128 0xb
 4232 0945 90030000 		.4byte	.LASF105
 4233 0949 01       		.byte	0x1
 4234 094a D20B     		.2byte	0xbd2
 4235 094c 83000000 		.4byte	0x83
 4236 0950 02       		.uleb128 0x2
 4237 0951 91       		.byte	0x91
 4238 0952 74       		.sleb128 -12
 4239 0953 0C       		.uleb128 0xc
 4240 0954 D5020000 		.4byte	.LASF106
 4241 0958 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 131


 4242 0959 D40B     		.2byte	0xbd4
 4243 095b 83000000 		.4byte	0x83
 4244 095f 02       		.uleb128 0x2
 4245 0960 91       		.byte	0x91
 4246 0961 7C       		.sleb128 -4
 4247 0962 00       		.byte	0
 4248 0963 0D       		.uleb128 0xd
 4249 0964 28030000 		.4byte	.LASF107
 4250 0968 01       		.byte	0x1
 4251 0969 ED0B     		.2byte	0xbed
 4252 096b 00000000 		.4byte	.LFB54
 4253 096f 34000000 		.4byte	.LFE54-.LFB54
 4254 0973 01       		.uleb128 0x1
 4255 0974 9C       		.byte	0x9c
 4256 0975 98090000 		.4byte	0x998
 4257 0979 0B       		.uleb128 0xb
 4258 097a 90030000 		.4byte	.LASF105
 4259 097e 01       		.byte	0x1
 4260 097f ED0B     		.2byte	0xbed
 4261 0981 83000000 		.4byte	0x83
 4262 0985 02       		.uleb128 0x2
 4263 0986 91       		.byte	0x91
 4264 0987 74       		.sleb128 -12
 4265 0988 0C       		.uleb128 0xc
 4266 0989 D5020000 		.4byte	.LASF106
 4267 098d 01       		.byte	0x1
 4268 098e EF0B     		.2byte	0xbef
 4269 0990 83000000 		.4byte	0x83
 4270 0994 02       		.uleb128 0x2
 4271 0995 91       		.byte	0x91
 4272 0996 7C       		.sleb128 -4
 4273 0997 00       		.byte	0
 4274 0998 0D       		.uleb128 0xd
 4275 0999 B5060000 		.4byte	.LASF108
 4276 099d 01       		.byte	0x1
 4277 099e 080C     		.2byte	0xc08
 4278 09a0 00000000 		.4byte	.LFB55
 4279 09a4 34000000 		.4byte	.LFE55-.LFB55
 4280 09a8 01       		.uleb128 0x1
 4281 09a9 9C       		.byte	0x9c
 4282 09aa CD090000 		.4byte	0x9cd
 4283 09ae 0B       		.uleb128 0xb
 4284 09af 90030000 		.4byte	.LASF105
 4285 09b3 01       		.byte	0x1
 4286 09b4 080C     		.2byte	0xc08
 4287 09b6 83000000 		.4byte	0x83
 4288 09ba 02       		.uleb128 0x2
 4289 09bb 91       		.byte	0x91
 4290 09bc 74       		.sleb128 -12
 4291 09bd 0C       		.uleb128 0xc
 4292 09be D5020000 		.4byte	.LASF106
 4293 09c2 01       		.byte	0x1
 4294 09c3 0A0C     		.2byte	0xc0a
 4295 09c5 83000000 		.4byte	0x83
 4296 09c9 02       		.uleb128 0x2
 4297 09ca 91       		.byte	0x91
 4298 09cb 7C       		.sleb128 -4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 132


 4299 09cc 00       		.byte	0
 4300 09cd 0A       		.uleb128 0xa
 4301 09ce A0030000 		.4byte	.LASF109
 4302 09d2 01       		.byte	0x1
 4303 09d3 250C     		.2byte	0xc25
 4304 09d5 00000000 		.4byte	.LFB56
 4305 09d9 9C000000 		.4byte	.LFE56-.LFB56
 4306 09dd 01       		.uleb128 0x1
 4307 09de 9C       		.byte	0x9c
 4308 09df 110A0000 		.4byte	0xa11
 4309 09e3 0B       		.uleb128 0xb
 4310 09e4 B9000000 		.4byte	.LASF110
 4311 09e8 01       		.byte	0x1
 4312 09e9 250C     		.2byte	0xc25
 4313 09eb 83000000 		.4byte	0x83
 4314 09ef 02       		.uleb128 0x2
 4315 09f0 91       		.byte	0x91
 4316 09f1 6C       		.sleb128 -20
 4317 09f2 0B       		.uleb128 0xb
 4318 09f3 90030000 		.4byte	.LASF105
 4319 09f7 01       		.byte	0x1
 4320 09f8 250C     		.2byte	0xc25
 4321 09fa 83000000 		.4byte	0x83
 4322 09fe 02       		.uleb128 0x2
 4323 09ff 91       		.byte	0x91
 4324 0a00 68       		.sleb128 -24
 4325 0a01 0C       		.uleb128 0xc
 4326 0a02 D5020000 		.4byte	.LASF106
 4327 0a06 01       		.byte	0x1
 4328 0a07 270C     		.2byte	0xc27
 4329 0a09 83000000 		.4byte	0x83
 4330 0a0d 02       		.uleb128 0x2
 4331 0a0e 91       		.byte	0x91
 4332 0a0f 74       		.sleb128 -12
 4333 0a10 00       		.byte	0
 4334 0a11 15       		.uleb128 0x15
 4335 0a12 F3000000 		.4byte	0xf3
 4336 0a16 210A0000 		.4byte	0xa21
 4337 0a1a 16       		.uleb128 0x16
 4338 0a1b EC000000 		.4byte	0xec
 4339 0a1f 04       		.byte	0x4
 4340 0a20 00       		.byte	0
 4341 0a21 17       		.uleb128 0x17
 4342 0a22 22060000 		.4byte	.LASF111
 4343 0a26 01       		.byte	0x1
 4344 0a27 22       		.byte	0x22
 4345 0a28 110A0000 		.4byte	0xa11
 4346 0a2c 05       		.uleb128 0x5
 4347 0a2d 03       		.byte	0x3
 4348 0a2e 00000000 		.4byte	CySysTickCallbacks
 4349 0a32 18       		.uleb128 0x18
 4350 0a33 2B040000 		.4byte	.LASF112
 4351 0a37 01       		.byte	0x1
 4352 0a38 1B       		.byte	0x1b
 4353 0a39 83000000 		.4byte	0x83
 4354 0a3d 05       		.uleb128 0x5
 4355 0a3e 03       		.byte	0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 133


 4356 0a3f 00000000 		.4byte	cydelayFreqHz
 4357 0a43 18       		.uleb128 0x18
 4358 0a44 7E010000 		.4byte	.LASF113
 4359 0a48 01       		.byte	0x1
 4360 0a49 1C       		.byte	0x1c
 4361 0a4a 83000000 		.4byte	0x83
 4362 0a4e 05       		.uleb128 0x5
 4363 0a4f 03       		.byte	0x3
 4364 0a50 00000000 		.4byte	cydelayFreqKhz
 4365 0a54 18       		.uleb128 0x18
 4366 0a55 96060000 		.4byte	.LASF114
 4367 0a59 01       		.byte	0x1
 4368 0a5a 1D       		.byte	0x1d
 4369 0a5b 6B000000 		.4byte	0x6b
 4370 0a5f 05       		.uleb128 0x5
 4371 0a60 03       		.byte	0x3
 4372 0a61 00000000 		.4byte	cydelayFreqMhz
 4373 0a65 18       		.uleb128 0x18
 4374 0a66 03020000 		.4byte	.LASF115
 4375 0a6a 01       		.byte	0x1
 4376 0a6b 1E       		.byte	0x1e
 4377 0a6c 83000000 		.4byte	0x83
 4378 0a70 05       		.uleb128 0x5
 4379 0a71 03       		.byte	0x3
 4380 0a72 00000000 		.4byte	cydelay32kMs
 4381 0a76 18       		.uleb128 0x18
 4382 0a77 9B000000 		.4byte	.LASF116
 4383 0a7b 01       		.byte	0x1
 4384 0a7c 36       		.byte	0x36
 4385 0a7d 83000000 		.4byte	0x83
 4386 0a81 05       		.uleb128 0x5
 4387 0a82 03       		.byte	0x3
 4388 0a83 00000000 		.4byte	CySysTickInitVar
 4389 0a87 15       		.uleb128 0x15
 4390 0a88 970A0000 		.4byte	0xa97
 4391 0a8c 970A0000 		.4byte	0xa97
 4392 0a90 16       		.uleb128 0x16
 4393 0a91 EC000000 		.4byte	0xec
 4394 0a95 2D       		.byte	0x2d
 4395 0a96 00       		.byte	0
 4396 0a97 19       		.uleb128 0x19
 4397 0a98 6B000000 		.4byte	0x6b
 4398 0a9c 18       		.uleb128 0x18
 4399 0a9d 08040000 		.4byte	.LASF117
 4400 0aa1 01       		.byte	0x1
 4401 0aa2 3B       		.byte	0x3b
 4402 0aa3 AD0A0000 		.4byte	0xaad
 4403 0aa7 05       		.uleb128 0x5
 4404 0aa8 03       		.byte	0x3
 4405 0aa9 00000000 		.4byte	cyImoFreqMhz2Reg
 4406 0aad 19       		.uleb128 0x19
 4407 0aae 870A0000 		.4byte	0xa87
 4408 0ab2 18       		.uleb128 0x18
 4409 0ab3 40000000 		.4byte	.LASF118
 4410 0ab7 01       		.byte	0x1
 4411 0ab8 5B       		.byte	0x5b
 4412 0ab9 83000000 		.4byte	0x83
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 134


 4413 0abd 05       		.uleb128 0x5
 4414 0abe 03       		.byte	0x3
 4415 0abf 00000000 		.4byte	CySysClkPumpConfig
 4416 0ac3 00       		.byte	0
 4417              		.section	.debug_abbrev,"",%progbits
 4418              	.Ldebug_abbrev0:
 4419 0000 01       		.uleb128 0x1
 4420 0001 11       		.uleb128 0x11
 4421 0002 01       		.byte	0x1
 4422 0003 25       		.uleb128 0x25
 4423 0004 0E       		.uleb128 0xe
 4424 0005 13       		.uleb128 0x13
 4425 0006 0B       		.uleb128 0xb
 4426 0007 03       		.uleb128 0x3
 4427 0008 0E       		.uleb128 0xe
 4428 0009 1B       		.uleb128 0x1b
 4429 000a 0E       		.uleb128 0xe
 4430 000b 55       		.uleb128 0x55
 4431 000c 17       		.uleb128 0x17
 4432 000d 11       		.uleb128 0x11
 4433 000e 01       		.uleb128 0x1
 4434 000f 10       		.uleb128 0x10
 4435 0010 17       		.uleb128 0x17
 4436 0011 00       		.byte	0
 4437 0012 00       		.byte	0
 4438 0013 02       		.uleb128 0x2
 4439 0014 24       		.uleb128 0x24
 4440 0015 00       		.byte	0
 4441 0016 0B       		.uleb128 0xb
 4442 0017 0B       		.uleb128 0xb
 4443 0018 3E       		.uleb128 0x3e
 4444 0019 0B       		.uleb128 0xb
 4445 001a 03       		.uleb128 0x3
 4446 001b 0E       		.uleb128 0xe
 4447 001c 00       		.byte	0
 4448 001d 00       		.byte	0
 4449 001e 03       		.uleb128 0x3
 4450 001f 24       		.uleb128 0x24
 4451 0020 00       		.byte	0
 4452 0021 0B       		.uleb128 0xb
 4453 0022 0B       		.uleb128 0xb
 4454 0023 3E       		.uleb128 0x3e
 4455 0024 0B       		.uleb128 0xb
 4456 0025 03       		.uleb128 0x3
 4457 0026 08       		.uleb128 0x8
 4458 0027 00       		.byte	0
 4459 0028 00       		.byte	0
 4460 0029 04       		.uleb128 0x4
 4461 002a 16       		.uleb128 0x16
 4462 002b 00       		.byte	0
 4463 002c 03       		.uleb128 0x3
 4464 002d 0E       		.uleb128 0xe
 4465 002e 3A       		.uleb128 0x3a
 4466 002f 0B       		.uleb128 0xb
 4467 0030 3B       		.uleb128 0x3b
 4468 0031 05       		.uleb128 0x5
 4469 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 135


 4470 0033 13       		.uleb128 0x13
 4471 0034 00       		.byte	0
 4472 0035 00       		.byte	0
 4473 0036 05       		.uleb128 0x5
 4474 0037 35       		.uleb128 0x35
 4475 0038 00       		.byte	0
 4476 0039 49       		.uleb128 0x49
 4477 003a 13       		.uleb128 0x13
 4478 003b 00       		.byte	0
 4479 003c 00       		.byte	0
 4480 003d 06       		.uleb128 0x6
 4481 003e 0F       		.uleb128 0xf
 4482 003f 00       		.byte	0
 4483 0040 0B       		.uleb128 0xb
 4484 0041 0B       		.uleb128 0xb
 4485 0042 49       		.uleb128 0x49
 4486 0043 13       		.uleb128 0x13
 4487 0044 00       		.byte	0
 4488 0045 00       		.byte	0
 4489 0046 07       		.uleb128 0x7
 4490 0047 15       		.uleb128 0x15
 4491 0048 00       		.byte	0
 4492 0049 27       		.uleb128 0x27
 4493 004a 19       		.uleb128 0x19
 4494 004b 00       		.byte	0
 4495 004c 00       		.byte	0
 4496 004d 08       		.uleb128 0x8
 4497 004e 16       		.uleb128 0x16
 4498 004f 00       		.byte	0
 4499 0050 03       		.uleb128 0x3
 4500 0051 0E       		.uleb128 0xe
 4501 0052 3A       		.uleb128 0x3a
 4502 0053 0B       		.uleb128 0xb
 4503 0054 3B       		.uleb128 0x3b
 4504 0055 0B       		.uleb128 0xb
 4505 0056 49       		.uleb128 0x49
 4506 0057 13       		.uleb128 0x13
 4507 0058 00       		.byte	0
 4508 0059 00       		.byte	0
 4509 005a 09       		.uleb128 0x9
 4510 005b 2E       		.uleb128 0x2e
 4511 005c 00       		.byte	0
 4512 005d 3F       		.uleb128 0x3f
 4513 005e 19       		.uleb128 0x19
 4514 005f 03       		.uleb128 0x3
 4515 0060 0E       		.uleb128 0xe
 4516 0061 3A       		.uleb128 0x3a
 4517 0062 0B       		.uleb128 0xb
 4518 0063 3B       		.uleb128 0x3b
 4519 0064 0B       		.uleb128 0xb
 4520 0065 27       		.uleb128 0x27
 4521 0066 19       		.uleb128 0x19
 4522 0067 11       		.uleb128 0x11
 4523 0068 01       		.uleb128 0x1
 4524 0069 12       		.uleb128 0x12
 4525 006a 06       		.uleb128 0x6
 4526 006b 40       		.uleb128 0x40
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 136


 4527 006c 18       		.uleb128 0x18
 4528 006d 9742     		.uleb128 0x2117
 4529 006f 19       		.uleb128 0x19
 4530 0070 00       		.byte	0
 4531 0071 00       		.byte	0
 4532 0072 0A       		.uleb128 0xa
 4533 0073 2E       		.uleb128 0x2e
 4534 0074 01       		.byte	0x1
 4535 0075 3F       		.uleb128 0x3f
 4536 0076 19       		.uleb128 0x19
 4537 0077 03       		.uleb128 0x3
 4538 0078 0E       		.uleb128 0xe
 4539 0079 3A       		.uleb128 0x3a
 4540 007a 0B       		.uleb128 0xb
 4541 007b 3B       		.uleb128 0x3b
 4542 007c 05       		.uleb128 0x5
 4543 007d 27       		.uleb128 0x27
 4544 007e 19       		.uleb128 0x19
 4545 007f 11       		.uleb128 0x11
 4546 0080 01       		.uleb128 0x1
 4547 0081 12       		.uleb128 0x12
 4548 0082 06       		.uleb128 0x6
 4549 0083 40       		.uleb128 0x40
 4550 0084 18       		.uleb128 0x18
 4551 0085 9642     		.uleb128 0x2116
 4552 0087 19       		.uleb128 0x19
 4553 0088 01       		.uleb128 0x1
 4554 0089 13       		.uleb128 0x13
 4555 008a 00       		.byte	0
 4556 008b 00       		.byte	0
 4557 008c 0B       		.uleb128 0xb
 4558 008d 05       		.uleb128 0x5
 4559 008e 00       		.byte	0
 4560 008f 03       		.uleb128 0x3
 4561 0090 0E       		.uleb128 0xe
 4562 0091 3A       		.uleb128 0x3a
 4563 0092 0B       		.uleb128 0xb
 4564 0093 3B       		.uleb128 0x3b
 4565 0094 05       		.uleb128 0x5
 4566 0095 49       		.uleb128 0x49
 4567 0096 13       		.uleb128 0x13
 4568 0097 02       		.uleb128 0x2
 4569 0098 18       		.uleb128 0x18
 4570 0099 00       		.byte	0
 4571 009a 00       		.byte	0
 4572 009b 0C       		.uleb128 0xc
 4573 009c 34       		.uleb128 0x34
 4574 009d 00       		.byte	0
 4575 009e 03       		.uleb128 0x3
 4576 009f 0E       		.uleb128 0xe
 4577 00a0 3A       		.uleb128 0x3a
 4578 00a1 0B       		.uleb128 0xb
 4579 00a2 3B       		.uleb128 0x3b
 4580 00a3 05       		.uleb128 0x5
 4581 00a4 49       		.uleb128 0x49
 4582 00a5 13       		.uleb128 0x13
 4583 00a6 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 137


 4584 00a7 18       		.uleb128 0x18
 4585 00a8 00       		.byte	0
 4586 00a9 00       		.byte	0
 4587 00aa 0D       		.uleb128 0xd
 4588 00ab 2E       		.uleb128 0x2e
 4589 00ac 01       		.byte	0x1
 4590 00ad 3F       		.uleb128 0x3f
 4591 00ae 19       		.uleb128 0x19
 4592 00af 03       		.uleb128 0x3
 4593 00b0 0E       		.uleb128 0xe
 4594 00b1 3A       		.uleb128 0x3a
 4595 00b2 0B       		.uleb128 0xb
 4596 00b3 3B       		.uleb128 0x3b
 4597 00b4 05       		.uleb128 0x5
 4598 00b5 27       		.uleb128 0x27
 4599 00b6 19       		.uleb128 0x19
 4600 00b7 11       		.uleb128 0x11
 4601 00b8 01       		.uleb128 0x1
 4602 00b9 12       		.uleb128 0x12
 4603 00ba 06       		.uleb128 0x6
 4604 00bb 40       		.uleb128 0x40
 4605 00bc 18       		.uleb128 0x18
 4606 00bd 9742     		.uleb128 0x2117
 4607 00bf 19       		.uleb128 0x19
 4608 00c0 01       		.uleb128 0x1
 4609 00c1 13       		.uleb128 0x13
 4610 00c2 00       		.byte	0
 4611 00c3 00       		.byte	0
 4612 00c4 0E       		.uleb128 0xe
 4613 00c5 2E       		.uleb128 0x2e
 4614 00c6 01       		.byte	0x1
 4615 00c7 3F       		.uleb128 0x3f
 4616 00c8 19       		.uleb128 0x19
 4617 00c9 03       		.uleb128 0x3
 4618 00ca 0E       		.uleb128 0xe
 4619 00cb 3A       		.uleb128 0x3a
 4620 00cc 0B       		.uleb128 0xb
 4621 00cd 3B       		.uleb128 0x3b
 4622 00ce 05       		.uleb128 0x5
 4623 00cf 27       		.uleb128 0x27
 4624 00d0 19       		.uleb128 0x19
 4625 00d1 49       		.uleb128 0x49
 4626 00d2 13       		.uleb128 0x13
 4627 00d3 11       		.uleb128 0x11
 4628 00d4 01       		.uleb128 0x1
 4629 00d5 12       		.uleb128 0x12
 4630 00d6 06       		.uleb128 0x6
 4631 00d7 40       		.uleb128 0x40
 4632 00d8 18       		.uleb128 0x18
 4633 00d9 9642     		.uleb128 0x2116
 4634 00db 19       		.uleb128 0x19
 4635 00dc 01       		.uleb128 0x1
 4636 00dd 13       		.uleb128 0x13
 4637 00de 00       		.byte	0
 4638 00df 00       		.byte	0
 4639 00e0 0F       		.uleb128 0xf
 4640 00e1 2E       		.uleb128 0x2e
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 138


 4641 00e2 00       		.byte	0
 4642 00e3 3F       		.uleb128 0x3f
 4643 00e4 19       		.uleb128 0x19
 4644 00e5 03       		.uleb128 0x3
 4645 00e6 0E       		.uleb128 0xe
 4646 00e7 3A       		.uleb128 0x3a
 4647 00e8 0B       		.uleb128 0xb
 4648 00e9 3B       		.uleb128 0x3b
 4649 00ea 05       		.uleb128 0x5
 4650 00eb 27       		.uleb128 0x27
 4651 00ec 19       		.uleb128 0x19
 4652 00ed 11       		.uleb128 0x11
 4653 00ee 01       		.uleb128 0x1
 4654 00ef 12       		.uleb128 0x12
 4655 00f0 06       		.uleb128 0x6
 4656 00f1 40       		.uleb128 0x40
 4657 00f2 18       		.uleb128 0x18
 4658 00f3 9742     		.uleb128 0x2117
 4659 00f5 19       		.uleb128 0x19
 4660 00f6 00       		.byte	0
 4661 00f7 00       		.byte	0
 4662 00f8 10       		.uleb128 0x10
 4663 00f9 2E       		.uleb128 0x2e
 4664 00fa 01       		.byte	0x1
 4665 00fb 3F       		.uleb128 0x3f
 4666 00fc 19       		.uleb128 0x19
 4667 00fd 03       		.uleb128 0x3
 4668 00fe 0E       		.uleb128 0xe
 4669 00ff 3A       		.uleb128 0x3a
 4670 0100 0B       		.uleb128 0xb
 4671 0101 3B       		.uleb128 0x3b
 4672 0102 05       		.uleb128 0x5
 4673 0103 27       		.uleb128 0x27
 4674 0104 19       		.uleb128 0x19
 4675 0105 49       		.uleb128 0x49
 4676 0106 13       		.uleb128 0x13
 4677 0107 11       		.uleb128 0x11
 4678 0108 01       		.uleb128 0x1
 4679 0109 12       		.uleb128 0x12
 4680 010a 06       		.uleb128 0x6
 4681 010b 40       		.uleb128 0x40
 4682 010c 18       		.uleb128 0x18
 4683 010d 9742     		.uleb128 0x2117
 4684 010f 19       		.uleb128 0x19
 4685 0110 01       		.uleb128 0x1
 4686 0111 13       		.uleb128 0x13
 4687 0112 00       		.byte	0
 4688 0113 00       		.byte	0
 4689 0114 11       		.uleb128 0x11
 4690 0115 2E       		.uleb128 0x2e
 4691 0116 00       		.byte	0
 4692 0117 3F       		.uleb128 0x3f
 4693 0118 19       		.uleb128 0x19
 4694 0119 03       		.uleb128 0x3
 4695 011a 0E       		.uleb128 0xe
 4696 011b 3A       		.uleb128 0x3a
 4697 011c 0B       		.uleb128 0xb
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 139


 4698 011d 3B       		.uleb128 0x3b
 4699 011e 05       		.uleb128 0x5
 4700 011f 27       		.uleb128 0x27
 4701 0120 19       		.uleb128 0x19
 4702 0121 49       		.uleb128 0x49
 4703 0122 13       		.uleb128 0x13
 4704 0123 11       		.uleb128 0x11
 4705 0124 01       		.uleb128 0x1
 4706 0125 12       		.uleb128 0x12
 4707 0126 06       		.uleb128 0x6
 4708 0127 40       		.uleb128 0x40
 4709 0128 18       		.uleb128 0x18
 4710 0129 9742     		.uleb128 0x2117
 4711 012b 19       		.uleb128 0x19
 4712 012c 00       		.byte	0
 4713 012d 00       		.byte	0
 4714 012e 12       		.uleb128 0x12
 4715 012f 2E       		.uleb128 0x2e
 4716 0130 00       		.byte	0
 4717 0131 3F       		.uleb128 0x3f
 4718 0132 19       		.uleb128 0x19
 4719 0133 03       		.uleb128 0x3
 4720 0134 0E       		.uleb128 0xe
 4721 0135 3A       		.uleb128 0x3a
 4722 0136 0B       		.uleb128 0xb
 4723 0137 3B       		.uleb128 0x3b
 4724 0138 05       		.uleb128 0x5
 4725 0139 27       		.uleb128 0x27
 4726 013a 19       		.uleb128 0x19
 4727 013b 11       		.uleb128 0x11
 4728 013c 01       		.uleb128 0x1
 4729 013d 12       		.uleb128 0x12
 4730 013e 06       		.uleb128 0x6
 4731 013f 40       		.uleb128 0x40
 4732 0140 18       		.uleb128 0x18
 4733 0141 9642     		.uleb128 0x2116
 4734 0143 19       		.uleb128 0x19
 4735 0144 00       		.byte	0
 4736 0145 00       		.byte	0
 4737 0146 13       		.uleb128 0x13
 4738 0147 34       		.uleb128 0x34
 4739 0148 00       		.byte	0
 4740 0149 03       		.uleb128 0x3
 4741 014a 08       		.uleb128 0x8
 4742 014b 3A       		.uleb128 0x3a
 4743 014c 0B       		.uleb128 0xb
 4744 014d 3B       		.uleb128 0x3b
 4745 014e 05       		.uleb128 0x5
 4746 014f 49       		.uleb128 0x49
 4747 0150 13       		.uleb128 0x13
 4748 0151 02       		.uleb128 0x2
 4749 0152 18       		.uleb128 0x18
 4750 0153 00       		.byte	0
 4751 0154 00       		.byte	0
 4752 0155 14       		.uleb128 0x14
 4753 0156 2E       		.uleb128 0x2e
 4754 0157 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 140


 4755 0158 03       		.uleb128 0x3
 4756 0159 0E       		.uleb128 0xe
 4757 015a 3A       		.uleb128 0x3a
 4758 015b 0B       		.uleb128 0xb
 4759 015c 3B       		.uleb128 0x3b
 4760 015d 05       		.uleb128 0x5
 4761 015e 27       		.uleb128 0x27
 4762 015f 19       		.uleb128 0x19
 4763 0160 11       		.uleb128 0x11
 4764 0161 01       		.uleb128 0x1
 4765 0162 12       		.uleb128 0x12
 4766 0163 06       		.uleb128 0x6
 4767 0164 40       		.uleb128 0x40
 4768 0165 18       		.uleb128 0x18
 4769 0166 9642     		.uleb128 0x2116
 4770 0168 19       		.uleb128 0x19
 4771 0169 01       		.uleb128 0x1
 4772 016a 13       		.uleb128 0x13
 4773 016b 00       		.byte	0
 4774 016c 00       		.byte	0
 4775 016d 15       		.uleb128 0x15
 4776 016e 01       		.uleb128 0x1
 4777 016f 01       		.byte	0x1
 4778 0170 49       		.uleb128 0x49
 4779 0171 13       		.uleb128 0x13
 4780 0172 01       		.uleb128 0x1
 4781 0173 13       		.uleb128 0x13
 4782 0174 00       		.byte	0
 4783 0175 00       		.byte	0
 4784 0176 16       		.uleb128 0x16
 4785 0177 21       		.uleb128 0x21
 4786 0178 00       		.byte	0
 4787 0179 49       		.uleb128 0x49
 4788 017a 13       		.uleb128 0x13
 4789 017b 2F       		.uleb128 0x2f
 4790 017c 0B       		.uleb128 0xb
 4791 017d 00       		.byte	0
 4792 017e 00       		.byte	0
 4793 017f 17       		.uleb128 0x17
 4794 0180 34       		.uleb128 0x34
 4795 0181 00       		.byte	0
 4796 0182 03       		.uleb128 0x3
 4797 0183 0E       		.uleb128 0xe
 4798 0184 3A       		.uleb128 0x3a
 4799 0185 0B       		.uleb128 0xb
 4800 0186 3B       		.uleb128 0x3b
 4801 0187 0B       		.uleb128 0xb
 4802 0188 49       		.uleb128 0x49
 4803 0189 13       		.uleb128 0x13
 4804 018a 02       		.uleb128 0x2
 4805 018b 18       		.uleb128 0x18
 4806 018c 00       		.byte	0
 4807 018d 00       		.byte	0
 4808 018e 18       		.uleb128 0x18
 4809 018f 34       		.uleb128 0x34
 4810 0190 00       		.byte	0
 4811 0191 03       		.uleb128 0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 141


 4812 0192 0E       		.uleb128 0xe
 4813 0193 3A       		.uleb128 0x3a
 4814 0194 0B       		.uleb128 0xb
 4815 0195 3B       		.uleb128 0x3b
 4816 0196 0B       		.uleb128 0xb
 4817 0197 49       		.uleb128 0x49
 4818 0198 13       		.uleb128 0x13
 4819 0199 3F       		.uleb128 0x3f
 4820 019a 19       		.uleb128 0x19
 4821 019b 02       		.uleb128 0x2
 4822 019c 18       		.uleb128 0x18
 4823 019d 00       		.byte	0
 4824 019e 00       		.byte	0
 4825 019f 19       		.uleb128 0x19
 4826 01a0 26       		.uleb128 0x26
 4827 01a1 00       		.byte	0
 4828 01a2 49       		.uleb128 0x49
 4829 01a3 13       		.uleb128 0x13
 4830 01a4 00       		.byte	0
 4831 01a5 00       		.byte	0
 4832 01a6 00       		.byte	0
 4833              		.section	.debug_aranges,"",%progbits
 4834 0000 CC010000 		.4byte	0x1cc
 4835 0004 0200     		.2byte	0x2
 4836 0006 00000000 		.4byte	.Ldebug_info0
 4837 000a 04       		.byte	0x4
 4838 000b 00       		.byte	0
 4839 000c 0000     		.2byte	0
 4840 000e 0000     		.2byte	0
 4841 0010 00000000 		.4byte	.LFB2
 4842 0014 18000000 		.4byte	.LFE2-.LFB2
 4843 0018 00000000 		.4byte	.LFB3
 4844 001c 14000000 		.4byte	.LFE3-.LFB3
 4845 0020 00000000 		.4byte	.LFB4
 4846 0024 44000000 		.4byte	.LFE4-.LFB4
 4847 0028 00000000 		.4byte	.LFB5
 4848 002c 4C000000 		.4byte	.LFE5-.LFB5
 4849 0030 00000000 		.4byte	.LFB6
 4850 0034 34000000 		.4byte	.LFE6-.LFB6
 4851 0038 00000000 		.4byte	.LFB7
 4852 003c 44000000 		.4byte	.LFE7-.LFB7
 4853 0040 00000000 		.4byte	.LFB8
 4854 0044 E4010000 		.4byte	.LFE8-.LFB8
 4855 0048 00000000 		.4byte	.LFB9
 4856 004c 70000000 		.4byte	.LFE9-.LFB9
 4857 0050 00000000 		.4byte	.LFB10
 4858 0054 28000000 		.4byte	.LFE10-.LFB10
 4859 0058 00000000 		.4byte	.LFB11
 4860 005c 18000000 		.4byte	.LFE11-.LFB11
 4861 0060 00000000 		.4byte	.LFB12
 4862 0064 54000000 		.4byte	.LFE12-.LFB12
 4863 0068 00000000 		.4byte	.LFB13
 4864 006c 60000000 		.4byte	.LFE13-.LFB13
 4865 0070 00000000 		.4byte	.LFB14
 4866 0074 24000000 		.4byte	.LFE14-.LFB14
 4867 0078 00000000 		.4byte	.LFB15
 4868 007c 10000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 142


 4869 0080 00000000 		.4byte	.LFB16
 4870 0084 10000000 		.4byte	.LFE16-.LFB16
 4871 0088 00000000 		.4byte	.LFB17
 4872 008c 28000000 		.4byte	.LFE17-.LFB17
 4873 0090 00000000 		.4byte	.LFB18
 4874 0094 1C000000 		.4byte	.LFE18-.LFB18
 4875 0098 00000000 		.4byte	.LFB19
 4876 009c 14000000 		.4byte	.LFE19-.LFB19
 4877 00a0 00000000 		.4byte	.LFB20
 4878 00a4 4C000000 		.4byte	.LFE20-.LFB20
 4879 00a8 00000000 		.4byte	.LFB21
 4880 00ac 36000000 		.4byte	.LFE21-.LFB21
 4881 00b0 00000000 		.4byte	.LFB22
 4882 00b4 50000000 		.4byte	.LFE22-.LFB22
 4883 00b8 00000000 		.4byte	.LFB23
 4884 00bc 38000000 		.4byte	.LFE23-.LFB23
 4885 00c0 00000000 		.4byte	.LFB24
 4886 00c4 B4000000 		.4byte	.LFE24-.LFB24
 4887 00c8 00000000 		.4byte	.LFB25
 4888 00cc 5C000000 		.4byte	.LFE25-.LFB25
 4889 00d0 00000000 		.4byte	.LFB26
 4890 00d4 28000000 		.4byte	.LFE26-.LFB26
 4891 00d8 00000000 		.4byte	.LFB27
 4892 00dc 30000000 		.4byte	.LFE27-.LFB27
 4893 00e0 00000000 		.4byte	.LFB28
 4894 00e4 28000000 		.4byte	.LFE28-.LFB28
 4895 00e8 00000000 		.4byte	.LFB29
 4896 00ec 28000000 		.4byte	.LFE29-.LFB29
 4897 00f0 00000000 		.4byte	.LFB30
 4898 00f4 28000000 		.4byte	.LFE30-.LFB30
 4899 00f8 00000000 		.4byte	.LFB31
 4900 00fc 12000000 		.4byte	.LFE31-.LFB31
 4901 0100 00000000 		.4byte	.LFB32
 4902 0104 1C000000 		.4byte	.LFE32-.LFB32
 4903 0108 00000000 		.4byte	.LFB33
 4904 010c 48000000 		.4byte	.LFE33-.LFB33
 4905 0110 00000000 		.4byte	.LFB34
 4906 0114 28000000 		.4byte	.LFE34-.LFB34
 4907 0118 00000000 		.4byte	.LFB35
 4908 011c 80000000 		.4byte	.LFE35-.LFB35
 4909 0120 00000000 		.4byte	.LFB36
 4910 0124 20000000 		.4byte	.LFE36-.LFB36
 4911 0128 00000000 		.4byte	.LFB37
 4912 012c 5C000000 		.4byte	.LFE37-.LFB37
 4913 0130 00000000 		.4byte	.LFB38
 4914 0134 1C000000 		.4byte	.LFE38-.LFB38
 4915 0138 00000000 		.4byte	.LFB39
 4916 013c 14000000 		.4byte	.LFE39-.LFB39
 4917 0140 00000000 		.4byte	.LFB40
 4918 0144 14000000 		.4byte	.LFE40-.LFB40
 4919 0148 00000000 		.4byte	.LFB41
 4920 014c 14000000 		.4byte	.LFE41-.LFB41
 4921 0150 00000000 		.4byte	.LFB42
 4922 0154 18000000 		.4byte	.LFE42-.LFB42
 4923 0158 00000000 		.4byte	.LFB43
 4924 015c 10000000 		.4byte	.LFE43-.LFB43
 4925 0160 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 143


 4926 0164 10000000 		.4byte	.LFE44-.LFB44
 4927 0168 00000000 		.4byte	.LFB45
 4928 016c 30000000 		.4byte	.LFE45-.LFB45
 4929 0170 00000000 		.4byte	.LFB46
 4930 0174 14000000 		.4byte	.LFE46-.LFB46
 4931 0178 00000000 		.4byte	.LFB47
 4932 017c 14000000 		.4byte	.LFE47-.LFB47
 4933 0180 00000000 		.4byte	.LFB48
 4934 0184 10000000 		.4byte	.LFE48-.LFB48
 4935 0188 00000000 		.4byte	.LFB49
 4936 018c 28000000 		.4byte	.LFE49-.LFB49
 4937 0190 00000000 		.4byte	.LFB50
 4938 0194 18000000 		.4byte	.LFE50-.LFB50
 4939 0198 00000000 		.4byte	.LFB51
 4940 019c 40000000 		.4byte	.LFE51-.LFB51
 4941 01a0 00000000 		.4byte	.LFB52
 4942 01a4 BC000000 		.4byte	.LFE52-.LFB52
 4943 01a8 00000000 		.4byte	.LFB53
 4944 01ac 34000000 		.4byte	.LFE53-.LFB53
 4945 01b0 00000000 		.4byte	.LFB54
 4946 01b4 34000000 		.4byte	.LFE54-.LFB54
 4947 01b8 00000000 		.4byte	.LFB55
 4948 01bc 34000000 		.4byte	.LFE55-.LFB55
 4949 01c0 00000000 		.4byte	.LFB56
 4950 01c4 9C000000 		.4byte	.LFE56-.LFB56
 4951 01c8 00000000 		.4byte	0
 4952 01cc 00000000 		.4byte	0
 4953              		.section	.debug_ranges,"",%progbits
 4954              	.Ldebug_ranges0:
 4955 0000 00000000 		.4byte	.LFB2
 4956 0004 18000000 		.4byte	.LFE2
 4957 0008 00000000 		.4byte	.LFB3
 4958 000c 14000000 		.4byte	.LFE3
 4959 0010 00000000 		.4byte	.LFB4
 4960 0014 44000000 		.4byte	.LFE4
 4961 0018 00000000 		.4byte	.LFB5
 4962 001c 4C000000 		.4byte	.LFE5
 4963 0020 00000000 		.4byte	.LFB6
 4964 0024 34000000 		.4byte	.LFE6
 4965 0028 00000000 		.4byte	.LFB7
 4966 002c 44000000 		.4byte	.LFE7
 4967 0030 00000000 		.4byte	.LFB8
 4968 0034 E4010000 		.4byte	.LFE8
 4969 0038 00000000 		.4byte	.LFB9
 4970 003c 70000000 		.4byte	.LFE9
 4971 0040 00000000 		.4byte	.LFB10
 4972 0044 28000000 		.4byte	.LFE10
 4973 0048 00000000 		.4byte	.LFB11
 4974 004c 18000000 		.4byte	.LFE11
 4975 0050 00000000 		.4byte	.LFB12
 4976 0054 54000000 		.4byte	.LFE12
 4977 0058 00000000 		.4byte	.LFB13
 4978 005c 60000000 		.4byte	.LFE13
 4979 0060 00000000 		.4byte	.LFB14
 4980 0064 24000000 		.4byte	.LFE14
 4981 0068 00000000 		.4byte	.LFB15
 4982 006c 10000000 		.4byte	.LFE15
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 144


 4983 0070 00000000 		.4byte	.LFB16
 4984 0074 10000000 		.4byte	.LFE16
 4985 0078 00000000 		.4byte	.LFB17
 4986 007c 28000000 		.4byte	.LFE17
 4987 0080 00000000 		.4byte	.LFB18
 4988 0084 1C000000 		.4byte	.LFE18
 4989 0088 00000000 		.4byte	.LFB19
 4990 008c 14000000 		.4byte	.LFE19
 4991 0090 00000000 		.4byte	.LFB20
 4992 0094 4C000000 		.4byte	.LFE20
 4993 0098 00000000 		.4byte	.LFB21
 4994 009c 36000000 		.4byte	.LFE21
 4995 00a0 00000000 		.4byte	.LFB22
 4996 00a4 50000000 		.4byte	.LFE22
 4997 00a8 00000000 		.4byte	.LFB23
 4998 00ac 38000000 		.4byte	.LFE23
 4999 00b0 00000000 		.4byte	.LFB24
 5000 00b4 B4000000 		.4byte	.LFE24
 5001 00b8 00000000 		.4byte	.LFB25
 5002 00bc 5C000000 		.4byte	.LFE25
 5003 00c0 00000000 		.4byte	.LFB26
 5004 00c4 28000000 		.4byte	.LFE26
 5005 00c8 00000000 		.4byte	.LFB27
 5006 00cc 30000000 		.4byte	.LFE27
 5007 00d0 00000000 		.4byte	.LFB28
 5008 00d4 28000000 		.4byte	.LFE28
 5009 00d8 00000000 		.4byte	.LFB29
 5010 00dc 28000000 		.4byte	.LFE29
 5011 00e0 00000000 		.4byte	.LFB30
 5012 00e4 28000000 		.4byte	.LFE30
 5013 00e8 00000000 		.4byte	.LFB31
 5014 00ec 12000000 		.4byte	.LFE31
 5015 00f0 00000000 		.4byte	.LFB32
 5016 00f4 1C000000 		.4byte	.LFE32
 5017 00f8 00000000 		.4byte	.LFB33
 5018 00fc 48000000 		.4byte	.LFE33
 5019 0100 00000000 		.4byte	.LFB34
 5020 0104 28000000 		.4byte	.LFE34
 5021 0108 00000000 		.4byte	.LFB35
 5022 010c 80000000 		.4byte	.LFE35
 5023 0110 00000000 		.4byte	.LFB36
 5024 0114 20000000 		.4byte	.LFE36
 5025 0118 00000000 		.4byte	.LFB37
 5026 011c 5C000000 		.4byte	.LFE37
 5027 0120 00000000 		.4byte	.LFB38
 5028 0124 1C000000 		.4byte	.LFE38
 5029 0128 00000000 		.4byte	.LFB39
 5030 012c 14000000 		.4byte	.LFE39
 5031 0130 00000000 		.4byte	.LFB40
 5032 0134 14000000 		.4byte	.LFE40
 5033 0138 00000000 		.4byte	.LFB41
 5034 013c 14000000 		.4byte	.LFE41
 5035 0140 00000000 		.4byte	.LFB42
 5036 0144 18000000 		.4byte	.LFE42
 5037 0148 00000000 		.4byte	.LFB43
 5038 014c 10000000 		.4byte	.LFE43
 5039 0150 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 145


 5040 0154 10000000 		.4byte	.LFE44
 5041 0158 00000000 		.4byte	.LFB45
 5042 015c 30000000 		.4byte	.LFE45
 5043 0160 00000000 		.4byte	.LFB46
 5044 0164 14000000 		.4byte	.LFE46
 5045 0168 00000000 		.4byte	.LFB47
 5046 016c 14000000 		.4byte	.LFE47
 5047 0170 00000000 		.4byte	.LFB48
 5048 0174 10000000 		.4byte	.LFE48
 5049 0178 00000000 		.4byte	.LFB49
 5050 017c 28000000 		.4byte	.LFE49
 5051 0180 00000000 		.4byte	.LFB50
 5052 0184 18000000 		.4byte	.LFE50
 5053 0188 00000000 		.4byte	.LFB51
 5054 018c 40000000 		.4byte	.LFE51
 5055 0190 00000000 		.4byte	.LFB52
 5056 0194 BC000000 		.4byte	.LFE52
 5057 0198 00000000 		.4byte	.LFB53
 5058 019c 34000000 		.4byte	.LFE53
 5059 01a0 00000000 		.4byte	.LFB54
 5060 01a4 34000000 		.4byte	.LFE54
 5061 01a8 00000000 		.4byte	.LFB55
 5062 01ac 34000000 		.4byte	.LFE55
 5063 01b0 00000000 		.4byte	.LFB56
 5064 01b4 9C000000 		.4byte	.LFE56
 5065 01b8 00000000 		.4byte	0
 5066 01bc 00000000 		.4byte	0
 5067              		.section	.debug_line,"",%progbits
 5068              	.Ldebug_line0:
 5069 0000 78050000 		.section	.debug_str,"MS",%progbits,1
 5069      02004D00 
 5069      00000201 
 5069      FB0E0D00 
 5069      01010101 
 5070              	.LASF62:
 5071 0000 72616D56 		.ascii	"ramVectorTable\000"
 5071      6563746F 
 5071      72546162 
 5071      6C6500
 5072              	.LASF35:
 5073 000f 62675472 		.ascii	"bgTrim4\000"
 5073      696D3400 
 5074              	.LASF10:
 5075 0017 75696E74 		.ascii	"uint16\000"
 5075      313600
 5076              	.LASF55:
 5077 001e 696E7453 		.ascii	"intState\000"
 5077      74617465 
 5077      00
 5078              	.LASF26:
 5079 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5079      73436C6B 
 5079      57726974 
 5079      65486663 
 5079      6C6B4469 
 5080              	.LASF118:
 5081 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 146


 5081      73436C6B 
 5081      50756D70 
 5081      436F6E66 
 5081      696700
 5082              	.LASF61:
 5083 0053 6F6C6449 		.ascii	"oldIsr\000"
 5083      737200
 5084              	.LASF100:
 5085 005a 72657456 		.ascii	"retVal\000"
 5085      616C00
 5086              	.LASF54:
 5087 0061 43794469 		.ascii	"CyDisableInts\000"
 5087      7361626C 
 5087      65496E74 
 5087      7300
 5088              	.LASF38:
 5089 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5089      656E7449 
 5089      6D6F5472 
 5089      696D3256 
 5089      616C7565 
 5090              	.LASF7:
 5091 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 5091      206C6F6E 
 5091      6720756E 
 5091      7369676E 
 5091      65642069 
 5092              	.LASF116:
 5093 009b 43795379 		.ascii	"CySysTickInitVar\000"
 5093      73546963 
 5093      6B496E69 
 5093      74566172 
 5093      00
 5094              	.LASF56:
 5095 00ac 4379456E 		.ascii	"CyEnableInts\000"
 5095      61626C65 
 5095      496E7473 
 5095      00
 5096              	.LASF110:
 5097 00b9 696E7465 		.ascii	"interfaceNumber\000"
 5097      72666163 
 5097      654E756D 
 5097      62657200 
 5098              	.LASF77:
 5099 00c9 4379536F 		.ascii	"CySoftwareReset\000"
 5099      66747761 
 5099      72655265 
 5099      73657400 
 5100              	.LASF87:
 5101 00d9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5101      73546963 
 5101      6B456E61 
 5101      626C6549 
 5101      6E746572 
 5102              	.LASF72:
 5103 00f2 4379496E 		.ascii	"CyIntGetState\000"
 5103      74476574 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 147


 5103      53746174 
 5103      6500
 5104              	.LASF6:
 5105 0100 6C6F6E67 		.ascii	"long long int\000"
 5105      206C6F6E 
 5105      6720696E 
 5105      7400
 5106              	.LASF0:
 5107 010e 7369676E 		.ascii	"signed char\000"
 5107      65642063 
 5107      68617200 
 5108              	.LASF34:
 5109 011a 66726571 		.ascii	"freq\000"
 5109      00
 5110              	.LASF82:
 5111 011f 43794465 		.ascii	"CyDelayFreq\000"
 5111      6C617946 
 5111      72657100 
 5112              	.LASF24:
 5113 012b 696E7465 		.ascii	"interruptState\000"
 5113      72727570 
 5113      74537461 
 5113      746500
 5114              	.LASF91:
 5115 013a 43795379 		.ascii	"CySysTickGetReload\000"
 5115      73546963 
 5115      6B476574 
 5115      52656C6F 
 5115      616400
 5116              	.LASF4:
 5117 014d 6C6F6E67 		.ascii	"long int\000"
 5117      20696E74 
 5117      00
 5118              	.LASF73:
 5119 0156 4379496E 		.ascii	"CyIntDisable\000"
 5119      74446973 
 5119      61626C65 
 5119      00
 5120              	.LASF101:
 5121 0163 43795379 		.ascii	"CySysTickGetCallback\000"
 5121      73546963 
 5121      6B476574 
 5121      43616C6C 
 5121      6261636B 
 5122              	.LASF9:
 5123 0178 75696E74 		.ascii	"uint8\000"
 5123      3800
 5124              	.LASF113:
 5125 017e 63796465 		.ascii	"cydelayFreqKhz\000"
 5125      6C617946 
 5125      7265714B 
 5125      687A00
 5126              	.LASF29:
 5127 018d 656E6162 		.ascii	"enable\000"
 5127      6C6500
 5128              	.LASF13:
 5129 0194 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 148


 5129      6C6500
 5130              	.LASF68:
 5131 019b 73686966 		.ascii	"shift\000"
 5131      7400
 5132              	.LASF51:
 5133 01a1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5133      734C7664 
 5133      436C6561 
 5133      72496E74 
 5133      65727275 
 5134              	.LASF11:
 5135 01b8 75696E74 		.ascii	"uint32\000"
 5135      333200
 5136              	.LASF45:
 5137 01bf 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5137      73436C6B 
 5137      45636F52 
 5137      65616453 
 5137      74617475 
 5138              	.LASF57:
 5139 01d5 6D61736B 		.ascii	"mask\000"
 5139      00
 5140              	.LASF40:
 5141 01da 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5141      73436C6B 
 5141      47657453 
 5141      7973636C 
 5141      6B536F75 
 5142              	.LASF70:
 5143 01f2 4379496E 		.ascii	"CyIntGetPriority\000"
 5143      74476574 
 5143      5072696F 
 5143      72697479 
 5143      00
 5144              	.LASF115:
 5145 0203 63796465 		.ascii	"cydelay32kMs\000"
 5145      6C617933 
 5145      326B4D73 
 5145      00
 5146              	.LASF84:
 5147 0210 43795379 		.ascii	"CySysTickInit\000"
 5147      73546963 
 5147      6B496E69 
 5147      7400
 5148              	.LASF69:
 5149 021e 76616C75 		.ascii	"value\000"
 5149      6500
 5150              	.LASF94:
 5151 0224 636C6F63 		.ascii	"clockSource\000"
 5151      6B536F75 
 5151      72636500 
 5152              	.LASF102:
 5153 0230 43794765 		.ascii	"CyGetUniqueId\000"
 5153      74556E69 
 5153      71756549 
 5153      6400
 5154              	.LASF76:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 149


 5155 023e 43794861 		.ascii	"CyHalt\000"
 5155      6C7400
 5156              	.LASF8:
 5157 0245 756E7369 		.ascii	"unsigned int\000"
 5157      676E6564 
 5157      20696E74 
 5157      00
 5158              	.LASF97:
 5159 0252 43795379 		.ascii	"CySysTickClear\000"
 5159      73546963 
 5159      6B436C65 
 5159      617200
 5160              	.LASF5:
 5161 0261 6C6F6E67 		.ascii	"long unsigned int\000"
 5161      20756E73 
 5161      69676E65 
 5161      6420696E 
 5161      7400
 5162              	.LASF90:
 5163 0273 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5163      734C7664 
 5163      47657449 
 5163      6E746572 
 5163      72757074 
 5164              	.LASF23:
 5165 028e 43795379 		.ascii	"CySysClkImoStop\000"
 5165      73436C6B 
 5165      496D6F53 
 5165      746F7000 
 5166              	.LASF74:
 5167 029e 4379496E 		.ascii	"CyIntSetPending\000"
 5167      74536574 
 5167      50656E64 
 5167      696E6700 
 5168              	.LASF52:
 5169 02ae 43795379 		.ascii	"CySysGetResetReason\000"
 5169      73476574 
 5169      52657365 
 5169      74526561 
 5169      736F6E00 
 5170              	.LASF3:
 5171 02c2 73686F72 		.ascii	"short unsigned int\000"
 5171      7420756E 
 5171      7369676E 
 5171      65642069 
 5171      6E7400
 5172              	.LASF106:
 5173 02d5 72656754 		.ascii	"regTmp\000"
 5173      6D7000
 5174              	.LASF93:
 5175 02dc 43795379 		.ascii	"CySysTickSetClockSource\000"
 5175      73546963 
 5175      6B536574 
 5175      436C6F63 
 5175      6B536F75 
 5176              	.LASF64:
 5177 02f4 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 150


 5177      74536574 
 5177      56656374 
 5177      6F7200
 5178              	.LASF59:
 5179 0303 6E756D62 		.ascii	"number\000"
 5179      657200
 5180              	.LASF67:
 5181 030a 7072696F 		.ascii	"priority\000"
 5181      72697479 
 5181      00
 5182              	.LASF33:
 5183 0313 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5183      73436C6B 
 5183      57726974 
 5183      65496D6F 
 5183      46726571 
 5184              	.LASF107:
 5185 0328 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5185      73536574 
 5185      466C6173 
 5185      68416363 
 5185      65737341 
 5186              	.LASF58:
 5187 0347 4379496E 		.ascii	"CyIntSetSysVector\000"
 5187      74536574 
 5187      53797356 
 5187      6563746F 
 5187      7200
 5188              	.LASF27:
 5189 0359 43795379 		.ascii	"CySysEnablePumpClock\000"
 5189      73456E61 
 5189      626C6550 
 5189      756D7043 
 5189      6C6F636B 
 5190              	.LASF17:
 5191 036e 72656733 		.ascii	"reg32\000"
 5191      3200
 5192              	.LASF83:
 5193 0374 43795379 		.ascii	"CySysTickStart\000"
 5193      73546963 
 5193      6B537461 
 5193      727400
 5194              	.LASF43:
 5195 0383 72657475 		.ascii	"returnStatus\000"
 5195      726E5374 
 5195      61747573 
 5195      00
 5196              	.LASF105:
 5197 0390 736F7572 		.ascii	"source\000"
 5197      636500
 5198              	.LASF20:
 5199 0397 73697A65 		.ascii	"sizetype\000"
 5199      74797065 
 5199      00
 5200              	.LASF109:
 5201 03a0 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5201      73536574 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 151


 5201      50657269 
 5201      70686572 
 5201      616C4163 
 5202              	.LASF75:
 5203 03c4 4379496E 		.ascii	"CyIntClearPending\000"
 5203      74436C65 
 5203      61725065 
 5203      6E64696E 
 5203      6700
 5204              	.LASF19:
 5205 03d6 6C6F6E67 		.ascii	"long double\000"
 5205      20646F75 
 5205      626C6500 
 5206              	.LASF60:
 5207 03e2 61646472 		.ascii	"address\000"
 5207      65737300 
 5208              	.LASF36:
 5209 03ea 62675472 		.ascii	"bgTrim5\000"
 5209      696D3500 
 5210              	.LASF30:
 5211 03f2 73797363 		.ascii	"sysclkSource\000"
 5211      6C6B536F 
 5211      75726365 
 5211      00
 5212              	.LASF99:
 5213 03ff 66756E63 		.ascii	"function\000"
 5213      74696F6E 
 5213      00
 5214              	.LASF117:
 5215 0408 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5215      6F467265 
 5215      714D687A 
 5215      32526567 
 5215      00
 5216              	.LASF92:
 5217 0419 43795379 		.ascii	"CySysTickGetValue\000"
 5217      73546963 
 5217      6B476574 
 5217      56616C75 
 5217      6500
 5218              	.LASF112:
 5219 042b 63796465 		.ascii	"cydelayFreqHz\000"
 5219      6C617946 
 5219      72657148 
 5219      7A00
 5220              	.LASF66:
 5221 0439 4379496E 		.ascii	"CyIntSetPriority\000"
 5221      74536574 
 5221      5072696F 
 5221      72697479 
 5221      00
 5222              	.LASF12:
 5223 044a 666C6F61 		.ascii	"float\000"
 5223      7400
 5224              	.LASF48:
 5225 0450 43795379 		.ascii	"CySysLvdEnable\000"
 5225      734C7664 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 152


 5225      456E6162 
 5225      6C6500
 5226              	.LASF21:
 5227 045f 63795379 		.ascii	"cySysTickCallback\000"
 5227      73546963 
 5227      6B43616C 
 5227      6C626163 
 5227      6B00
 5228              	.LASF96:
 5229 0471 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5229      73546963 
 5229      6B476574 
 5229      436F756E 
 5229      74466C61 
 5230              	.LASF65:
 5231 0487 4379496E 		.ascii	"CyIntGetVector\000"
 5231      74476574 
 5231      56656374 
 5231      6F7200
 5232              	.LASF79:
 5233 0496 6D696C6C 		.ascii	"milliseconds\000"
 5233      69736563 
 5233      6F6E6473 
 5233      00
 5234              	.LASF16:
 5235 04a3 72656738 		.ascii	"reg8\000"
 5235      00
 5236              	.LASF49:
 5237 04a8 74687265 		.ascii	"threshold\000"
 5237      73686F6C 
 5237      6400
 5238              	.LASF119:
 5239 04b2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5239      43313120 
 5239      352E342E 
 5239      31203230 
 5239      31363036 
 5240 04e5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5240      20726576 
 5240      6973696F 
 5240      6E203233 
 5240      37373135 
 5241 0518 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 5241      66756E63 
 5241      74696F6E 
 5241      2D736563 
 5241      74696F6E 
 5242 054b 652D706F 		.ascii	"e-pointer\000"
 5242      696E7465 
 5242      7200
 5243              	.LASF104:
 5244 0555 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5244      73536574 
 5244      52616D41 
 5244      63636573 
 5244      73417262 
 5245              	.LASF1:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 153


 5246 0572 756E7369 		.ascii	"unsigned char\000"
 5246      676E6564 
 5246      20636861 
 5246      7200
 5247              	.LASF2:
 5248 0580 73686F72 		.ascii	"short int\000"
 5248      7420696E 
 5248      7400
 5249              	.LASF71:
 5250 058a 4379496E 		.ascii	"CyIntEnable\000"
 5250      74456E61 
 5250      626C6500 
 5251              	.LASF63:
 5252 0596 4379496E 		.ascii	"CyIntGetSysVector\000"
 5252      74476574 
 5252      53797356 
 5252      6563746F 
 5252      7200
 5253              	.LASF28:
 5254 05a8 636C6B53 		.ascii	"clkSelect\000"
 5254      656C6563 
 5254      7400
 5255              	.LASF41:
 5256 05b2 43795379 		.ascii	"CySysClkEcoStart\000"
 5256      73436C6B 
 5256      45636F53 
 5256      74617274 
 5256      00
 5257              	.LASF80:
 5258 05c3 43794465 		.ascii	"CyDelayUs\000"
 5258      6C617955 
 5258      7300
 5259              	.LASF53:
 5260 05cd 72656173 		.ascii	"reason\000"
 5260      6F6E00
 5261              	.LASF14:
 5262 05d4 63686172 		.ascii	"char\000"
 5262      00
 5263              	.LASF18:
 5264 05d9 63796973 		.ascii	"cyisraddress\000"
 5264      72616464 
 5264      72657373 
 5264      00
 5265              	.LASF85:
 5266 05e6 43795379 		.ascii	"CySysTickEnable\000"
 5266      73546963 
 5266      6B456E61 
 5266      626C6500 
 5267              	.LASF31:
 5268 05f6 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5268      73436C6B 
 5268      57726974 
 5268      65537973 
 5268      636C6B44 
 5269              	.LASF98:
 5270 060d 43795379 		.ascii	"CySysTickSetCallback\000"
 5270      73546963 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 154


 5270      6B536574 
 5270      43616C6C 
 5270      6261636B 
 5271              	.LASF111:
 5272 0622 43795379 		.ascii	"CySysTickCallbacks\000"
 5272      73546963 
 5272      6B43616C 
 5272      6C626163 
 5272      6B7300
 5273              	.LASF39:
 5274 0635 696D6F54 		.ascii	"imoTrim1Value\000"
 5274      72696D31 
 5274      56616C75 
 5274      6500
 5275              	.LASF103:
 5276 0643 756E6971 		.ascii	"uniqueId\000"
 5276      75654964 
 5276      00
 5277              	.LASF78:
 5278 064c 43794465 		.ascii	"CyDelay\000"
 5278      6C617900 
 5279              	.LASF95:
 5280 0654 43795379 		.ascii	"CySysTickGetClockSource\000"
 5280      73546963 
 5280      6B476574 
 5280      436C6F63 
 5280      6B536F75 
 5281              	.LASF88:
 5282 066c 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5282      73546963 
 5282      6B446973 
 5282      61626C65 
 5282      496E7465 
 5283              	.LASF50:
 5284 0686 43795379 		.ascii	"CySysLvdDisable\000"
 5284      734C7664 
 5284      44697361 
 5284      626C6500 
 5285              	.LASF114:
 5286 0696 63796465 		.ascii	"cydelayFreqMhz\000"
 5286      6C617946 
 5286      7265714D 
 5286      687A00
 5287              	.LASF44:
 5288 06a5 43795379 		.ascii	"CySysClkEcoStop\000"
 5288      73436C6B 
 5288      45636F53 
 5288      746F7000 
 5289              	.LASF108:
 5290 06b5 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5290      73536574 
 5290      446D6163 
 5290      41636365 
 5290      73734172 
 5291              	.LASF86:
 5292 06d3 43795379 		.ascii	"CySysTickStop\000"
 5292      73546963 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 155


 5292      6B53746F 
 5292      7000
 5293              	.LASF42:
 5294 06e1 74696D65 		.ascii	"timeoutUs\000"
 5294      6F757455 
 5294      7300
 5295              	.LASF32:
 5296 06eb 64697669 		.ascii	"divider\000"
 5296      64657200 
 5297              	.LASF47:
 5298 06f3 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5298      73436C6B 
 5298      57726974 
 5298      6545636F 
 5298      44697600 
 5299              	.LASF15:
 5300 0707 63797374 		.ascii	"cystatus\000"
 5300      61747573 
 5300      00
 5301              	.LASF22:
 5302 0710 43795379 		.ascii	"CySysClkImoStart\000"
 5302      73436C6B 
 5302      496D6F53 
 5302      74617274 
 5302      00
 5303              	.LASF37:
 5304 0721 6E657749 		.ascii	"newImoTrim2Value\000"
 5304      6D6F5472 
 5304      696D3256 
 5304      616C7565 
 5304      00
 5305              	.LASF120:
 5306 0732 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5306      72617465 
 5306      645F536F 
 5306      75726365 
 5306      5C50536F 
 5307              	.LASF81:
 5308 0751 6D696372 		.ascii	"microseconds\000"
 5308      6F736563 
 5308      6F6E6473 
 5308      00
 5309              	.LASF25:
 5310 075e 746D7052 		.ascii	"tmpReg\000"
 5310      656700
 5311              	.LASF89:
 5312 0765 43795379 		.ascii	"CySysTickSetReload\000"
 5312      73546963 
 5312      6B536574 
 5312      52656C6F 
 5312      616400
 5313              	.LASF122:
 5314 0778 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5314      73546963 
 5314      6B536572 
 5314      76696365 
 5314      43616C6C 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\cckfkSo9.s 			page 156


 5315              	.LASF121:
 5316 0792 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 5316      726F7062 
 5316      6F785C36 
 5316      5F6B7572 
 5316      735C6469 
 5317 07c1 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 5317      41424C45 
 5317      5C424C45 
 5317      5F44796E 
 5317      616D6963 
 5318 07f2 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 5318      796E616D 
 5318      69635F47 
 5318      4154545F 
 5318      53657276 
 5319              	.LASF46:
 5320 081e 72657475 		.ascii	"returnValue\000"
 5320      726E5661 
 5320      6C756500 
 5321              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
