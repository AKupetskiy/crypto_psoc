ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyFlash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  20              		.align	2
  21              		.global	CySysFlashWriteRow
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysFlashWriteRow, %function
  25              	CySysFlashWriteRow:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyFlash.c"
   1:Generated_Source\PSoC4/CyFlash.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyFlash.c **** * \file CyFlash.c
   3:Generated_Source\PSoC4/CyFlash.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyFlash.c **** *
   5:Generated_Source\PSoC4/CyFlash.c **** * \brief Provides an API for the FLASH.
   6:Generated_Source\PSoC4/CyFlash.c **** *
   7:Generated_Source\PSoC4/CyFlash.c **** * \note This code is endian agnostic.
   8:Generated_Source\PSoC4/CyFlash.c **** *
   9:Generated_Source\PSoC4/CyFlash.c **** * \note Documentation of the API's in this file is located in the System
  10:Generated_Source\PSoC4/CyFlash.c **** * Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyFlash.c **** *
  12:Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyFlash.c **** * \copyright
  14:Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyFlash.c **** 
  20:Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/CyFlash.c **** 
  22:Generated_Source\PSoC4/CyFlash.c **** 
  23:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  25:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4000U, PSoC 4100, and PSoC 4200 devices. The 
  26:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashWriteRow() function now checks the data to be written and, if 
  27:Generated_Source\PSoC4/CyFlash.c **** * necessary, modifies it to have a non-zero checksum. After writing to Flash, 
  28:Generated_Source\PSoC4/CyFlash.c **** * the modified data is replaced (Flash program) with 
  29:Generated_Source\PSoC4/CyFlash.c **** * the correct (original) data.
  30:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 2


  31:Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC
  32:Generated_Source\PSoC4/CyFlash.c **** 
  33:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_4000)
  34:Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  35:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_400
  36:Generated_Source\PSoC4/CyFlash.c **** 
  37:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  38:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  39:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
  40:Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  41:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
  42:Generated_Source\PSoC4/CyFlash.c **** 
  43:Generated_Source\PSoC4/CyFlash.c **** 
  44:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  46:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
  47:Generated_Source\PSoC4/CyFlash.c **** *
  48:Generated_Source\PSoC4/CyFlash.c **** * Erases a row of Flash and programs it with the new data.
  49:Generated_Source\PSoC4/CyFlash.c **** *
  50:Generated_Source\PSoC4/CyFlash.c **** * The IMO must be enabled before calling this function. The operation of the
  51:Generated_Source\PSoC4/CyFlash.c **** * flash writing hardware is dependent on the IMO.
  52:Generated_Source\PSoC4/CyFlash.c **** *
  53:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  54:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  55:Generated_Source\PSoC4/CyFlash.c **** * will automatically modify the clock settings for the device. Writing to
  56:Generated_Source\PSoC4/CyFlash.c **** * flash requires that changes be made to the IMO and HFCLK settings. The
  57:Generated_Source\PSoC4/CyFlash.c **** * configuration is restored before returning. This will impact the operation
  58:Generated_Source\PSoC4/CyFlash.c **** * of most of the hardware in the device.
  59:Generated_Source\PSoC4/CyFlash.c **** *
  60:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000 devices this API will automatically modify the clock settings
  61:Generated_Source\PSoC4/CyFlash.c **** * for the device. Writing to flash requires that changes be made to the IMO
  62:Generated_Source\PSoC4/CyFlash.c **** * and HFCLK settings. The configuration is restored before returning. HFCLK
  63:Generated_Source\PSoC4/CyFlash.c **** * will have several frequency changes during the operation of this API between
  64:Generated_Source\PSoC4/CyFlash.c **** * a minimum frequency of the current IMO frequency divided by 8 and a maximum
  65:Generated_Source\PSoC4/CyFlash.c **** * frequency of 12 MHz. This will impact the operation of most of the hardware
  66:Generated_Source\PSoC4/CyFlash.c **** * in the device.
  67:Generated_Source\PSoC4/CyFlash.c **** *
  68:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
  69:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
  70:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
  71:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
  72:Generated_Source\PSoC4/CyFlash.c **** *
  73:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
  74:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
  75:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  76:Generated_Source\PSoC4/CyFlash.c **** * details.
  77:Generated_Source\PSoC4/CyFlash.c **** *
  78:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
  79:Generated_Source\PSoC4/CyFlash.c **** *
  80:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  81:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  82:Generated_Source\PSoC4/CyFlash.c **** {
  28              		.loc 1 82 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 288
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 3


  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 C8B0     		sub	sp, sp, #288
  37              		.cfi_def_cfa_offset 296
  38 0004 0190     		str	r0, [sp, #4]
  39 0006 0091     		str	r1, [sp]
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  40              		.loc 1 83 0
  41 0008 0023     		movs	r3, #0
  42 000a 4693     		str	r3, [sp, #280]
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  43              		.loc 1 84 0
  44 000c 0023     		movs	r3, #0
  45 000e 4593     		str	r3, [sp, #276]
  85:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  86:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  87:Generated_Source\PSoC4/CyFlash.c **** 
  88:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
  89:Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
  90:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
  91:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
  92:Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
  93:Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
  94:Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
  95:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
  96:Generated_Source\PSoC4/CyFlash.c **** 
  97:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  46              		.loc 1 97 0
  47 0010 019B     		ldr	r3, [sp, #4]
  48 0012 534A     		ldr	r2, .L18
  49 0014 9342     		cmp	r3, r2
  50 0016 00D9     		bls	.LCB19
  51 0018 9BE0     		b	.L2	@long jump
  52              	.LCB19:
  53              		.loc 1 97 0 is_stmt 0 discriminator 1
  54 001a 009B     		ldr	r3, [sp]
  55 001c 002B     		cmp	r3, #0
  56 001e 00D1     		bne	.LCB22
  57 0020 97E0     		b	.L2	@long jump
  58              	.LCB22:
  98:Generated_Source\PSoC4/CyFlash.c ****     {
  99:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 100:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
  59              		.loc 1 100 0 is_stmt 1
  60 0022 8023     		movs	r3, #128
  61 0024 5A00     		lsls	r2, r3, #1
  62 0026 0099     		ldr	r1, [sp]
  63 0028 03AB     		add	r3, sp, #12
  64 002a 0833     		adds	r3, r3, #8
  65 002c 1800     		movs	r0, r3
  66 002e FFF7FEFF 		bl	memcpy
 101:Generated_Source\PSoC4/CyFlash.c **** 
 102:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 103:Generated_Source\PSoC4/CyFlash.c **** 
 104:Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 105:Generated_Source\PSoC4/CyFlash.c ****             {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 4


 106:Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 107:Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 108:Generated_Source\PSoC4/CyFlash.c ****                 {
 109:Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 110:Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 111:Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 112:Generated_Source\PSoC4/CyFlash.c ****                 }
 113:Generated_Source\PSoC4/CyFlash.c ****             }
 114:Generated_Source\PSoC4/CyFlash.c **** 
 115:Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
 116:Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 117:Generated_Source\PSoC4/CyFlash.c ****             {
 118:Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 119:Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 120:Generated_Source\PSoC4/CyFlash.c ****             }
 121:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 122:Generated_Source\PSoC4/CyFlash.c **** 
 123:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 124:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 125:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 126:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
  67              		.loc 1 126 0
  68 0032 019B     		ldr	r3, [sp, #4]
  69 0034 4B4A     		ldr	r2, .L18+4
  70 0036 9342     		cmp	r3, r2
  71 0038 01D9     		bls	.L3
  72              		.loc 1 126 0 is_stmt 0 discriminator 1
  73 003a 4B4A     		ldr	r2, .L18+8
  74 003c 00E0     		b	.L4
  75              	.L3:
  76              		.loc 1 126 0 discriminator 2
  77 003e 4B4A     		ldr	r2, .L18+12
  78              	.L4:
 124:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
  79              		.loc 1 124 0 is_stmt 1
  80 0040 4B4B     		ldr	r3, .L18+16
  81 0042 48A9     		add	r1, sp, #288
  82 0044 8C46     		mov	ip, r1
  83 0046 6344     		add	r3, r3, ip
  84 0048 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 128:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
  85              		.loc 1 128 0
  86 004a 494B     		ldr	r3, .L18+16
  87 004c 48AA     		add	r2, sp, #288
  88 004e 9446     		mov	ip, r2
  89 0050 6344     		add	r3, r3, ip
  90 0052 FF22     		movs	r2, #255
  91 0054 5A60     		str	r2, [r3, #4]
 129:Generated_Source\PSoC4/CyFlash.c **** 
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
  92              		.loc 1 130 0
  93 0056 474B     		ldr	r3, .L18+20
  94 0058 03AA     		add	r2, sp, #12
  95 005a 1A60     		str	r2, [r3]
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
  96              		.loc 1 131 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 5


  97 005c 464B     		ldr	r3, .L18+24
  98 005e 474A     		ldr	r2, .L18+28
  99 0060 1A60     		str	r2, [r3]
 132:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 100              		.loc 1 132 0
 101              		.syntax divided
 102              	@ 132 "Generated_Source\PSoC4\CyFlash.c" 1
 103 0062 C046     		NOP
 104              	
 105              	@ 0 "" 2
 133:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 106              		.loc 1 133 0
 107              		.thumb
 108              		.syntax unified
 109 0064 434B     		ldr	r3, .L18+20
 110 0066 1B68     		ldr	r3, [r3]
 111 0068 1B0F     		lsrs	r3, r3, #28
 112 006a 1A07     		lsls	r2, r3, #28
 113 006c F023     		movs	r3, #240
 114 006e 1B06     		lsls	r3, r3, #24
 115 0070 9A42     		cmp	r2, r3
 116 0072 04D1     		bne	.L5
 117              		.loc 1 133 0 is_stmt 0 discriminator 1
 118 0074 3F4B     		ldr	r3, .L18+20
 119 0076 1B68     		ldr	r3, [r3]
 120 0078 FF22     		movs	r2, #255
 121 007a 1340     		ands	r3, r2
 122 007c 0DE0     		b	.L6
 123              	.L5:
 124              		.loc 1 133 0 discriminator 2
 125 007e 3D4B     		ldr	r3, .L18+20
 126 0080 1B68     		ldr	r3, [r3]
 127 0082 1B0F     		lsrs	r3, r3, #28
 128 0084 1A07     		lsls	r2, r3, #28
 129 0086 A023     		movs	r3, #160
 130 0088 1B06     		lsls	r3, r3, #24
 131 008a 9A42     		cmp	r2, r3
 132 008c 04D0     		beq	.L7
 133              		.loc 1 133 0 discriminator 4
 134 008e 394B     		ldr	r3, .L18+20
 135 0090 1B68     		ldr	r3, [r3]
 136 0092 FF22     		movs	r2, #255
 137 0094 1340     		ands	r3, r2
 138 0096 00E0     		b	.L6
 139              	.L7:
 140              		.loc 1 133 0 discriminator 5
 141 0098 0023     		movs	r3, #0
 142              	.L6:
 143              		.loc 1 133 0 discriminator 8
 144 009a 4693     		str	r3, [sp, #280]
 134:Generated_Source\PSoC4/CyFlash.c **** 
 135:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 145              		.loc 1 135 0 is_stmt 1 discriminator 8
 146 009c 469B     		ldr	r3, [sp, #280]
 147 009e 002B     		cmp	r3, #0
 148 00a0 59D1     		bne	.L16
 136:Generated_Source\PSoC4/CyFlash.c ****         {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 6


 137:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 138:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 139:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 140:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 141:Generated_Source\PSoC4/CyFlash.c ****             * context.
 142:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 143:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 149              		.loc 1 143 0
 150 00a2 2024     		movs	r4, #32
 151 00a4 FF34     		adds	r4, r4, #255
 152 00a6 6C44     		add	r4, r4, sp
 153 00a8 FFF7FEFF 		bl	CyEnterCriticalSection
 154 00ac 0300     		movs	r3, r0
 155 00ae 2370     		strb	r3, [r4]
 144:Generated_Source\PSoC4/CyFlash.c **** 
 145:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 156              		.loc 1 145 0
 157 00b0 FFF7FEFF 		bl	CySysFlashClockBackup
 158 00b4 0300     		movs	r3, r0
 159 00b6 4593     		str	r3, [sp, #276]
 146:Generated_Source\PSoC4/CyFlash.c **** 
 147:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 148:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 149:Generated_Source\PSoC4/CyFlash.c ****             {
 150:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 151:Generated_Source\PSoC4/CyFlash.c ****             }
 152:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 153:Generated_Source\PSoC4/CyFlash.c **** 
 154:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 160              		.loc 1 154 0
 161 00b8 469B     		ldr	r3, [sp, #280]
 162 00ba 002B     		cmp	r3, #0
 163 00bc 35D1     		bne	.L10
 155:Generated_Source\PSoC4/CyFlash.c ****             {
 156:Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 164              		.loc 1 157 0
 165 00be 2C4B     		ldr	r3, .L18+16
 166 00c0 48AA     		add	r2, sp, #288
 167 00c2 9446     		mov	ip, r2
 168 00c4 6344     		add	r3, r3, ip
 169 00c6 2E4A     		ldr	r2, .L18+32
 170 00c8 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 171              		.loc 1 158 0
 172 00ca 294B     		ldr	r3, .L18+16
 173 00cc 48AA     		add	r2, sp, #288
 174 00ce 9446     		mov	ip, r2
 175 00d0 6344     		add	r3, r3, ip
 176 00d2 1A68     		ldr	r2, [r3]
 177 00d4 019B     		ldr	r3, [sp, #4]
 178 00d6 1B04     		lsls	r3, r3, #16
 179 00d8 1A43     		orrs	r2, r3
 180 00da 254B     		ldr	r3, .L18+16
 181 00dc 48A9     		add	r1, sp, #288
 182 00de 8C46     		mov	ip, r1
 183 00e0 6344     		add	r3, r3, ip
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 7


 184 00e2 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC4/CyFlash.c **** 
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 185              		.loc 1 160 0
 186 00e4 234B     		ldr	r3, .L18+20
 187 00e6 03AA     		add	r2, sp, #12
 188 00e8 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 189              		.loc 1 161 0
 190 00ea 234B     		ldr	r3, .L18+24
 191 00ec 254A     		ldr	r2, .L18+36
 192 00ee 1A60     		str	r2, [r3]
 162:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 193              		.loc 1 162 0
 194              		.syntax divided
 195              	@ 162 "Generated_Source\PSoC4\CyFlash.c" 1
 196 00f0 C046     		NOP
 197              	
 198              	@ 0 "" 2
 163:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 199              		.loc 1 163 0
 200              		.thumb
 201              		.syntax unified
 202 00f2 204B     		ldr	r3, .L18+20
 203 00f4 1B68     		ldr	r3, [r3]
 204 00f6 1B0F     		lsrs	r3, r3, #28
 205 00f8 1A07     		lsls	r2, r3, #28
 206 00fa F023     		movs	r3, #240
 207 00fc 1B06     		lsls	r3, r3, #24
 208 00fe 9A42     		cmp	r2, r3
 209 0100 04D1     		bne	.L11
 210              		.loc 1 163 0 is_stmt 0 discriminator 1
 211 0102 1C4B     		ldr	r3, .L18+20
 212 0104 1B68     		ldr	r3, [r3]
 213 0106 FF22     		movs	r2, #255
 214 0108 1340     		ands	r3, r2
 215 010a 0DE0     		b	.L12
 216              	.L11:
 217              		.loc 1 163 0 discriminator 2
 218 010c 194B     		ldr	r3, .L18+20
 219 010e 1B68     		ldr	r3, [r3]
 220 0110 1B0F     		lsrs	r3, r3, #28
 221 0112 1A07     		lsls	r2, r3, #28
 222 0114 A023     		movs	r3, #160
 223 0116 1B06     		lsls	r3, r3, #24
 224 0118 9A42     		cmp	r2, r3
 225 011a 04D0     		beq	.L13
 226              		.loc 1 163 0 discriminator 4
 227 011c 154B     		ldr	r3, .L18+20
 228 011e 1B68     		ldr	r3, [r3]
 229 0120 FF22     		movs	r2, #255
 230 0122 1340     		ands	r3, r2
 231 0124 00E0     		b	.L12
 232              	.L13:
 233              		.loc 1 163 0 discriminator 5
 234 0126 0023     		movs	r3, #0
 235              	.L12:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 8


 236              		.loc 1 163 0 discriminator 8
 237 0128 4693     		str	r3, [sp, #280]
 238              	.L10:
 164:Generated_Source\PSoC4/CyFlash.c ****             }
 165:Generated_Source\PSoC4/CyFlash.c **** 
 166:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 167:Generated_Source\PSoC4/CyFlash.c **** 
 168:Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 169:Generated_Source\PSoC4/CyFlash.c ****                 {
 170:Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 171:Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 172:Generated_Source\PSoC4/CyFlash.c **** 
 173:Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 174:Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 175:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 176:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 177:Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 178:Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 179:Generated_Source\PSoC4/CyFlash.c **** 
 180:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 181:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 182:Generated_Source\PSoC4/CyFlash.c ****                     CY_NOP;
 183:Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 184:Generated_Source\PSoC4/CyFlash.c **** 
 185:Generated_Source\PSoC4/CyFlash.c **** 
 186:Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
 187:Generated_Source\PSoC4/CyFlash.c ****                     {
 188:Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 189:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
 190:Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 191:Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 192:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 193:Generated_Source\PSoC4/CyFlash.c **** 
 194:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 195:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 196:Generated_Source\PSoC4/CyFlash.c ****                         CY_NOP;
 197:Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 198:Generated_Source\PSoC4/CyFlash.c ****                     }
 199:Generated_Source\PSoC4/CyFlash.c ****                 }
 200:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 201:Generated_Source\PSoC4/CyFlash.c **** 
 202:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 239              		.loc 1 202 0 is_stmt 1
 240 012a 459B     		ldr	r3, [sp, #276]
 241 012c 002B     		cmp	r3, #0
 242 012e 08D1     		bne	.L15
 203:Generated_Source\PSoC4/CyFlash.c ****             {
 204:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 243              		.loc 1 204 0
 244 0130 FFF7FEFF 		bl	CySysFlashClockRestore
 245 0134 0300     		movs	r3, r0
 246 0136 4593     		str	r3, [sp, #276]
 205:Generated_Source\PSoC4/CyFlash.c **** 
 206:Generated_Source\PSoC4/CyFlash.c ****                 if(clkCnfRetValue != CY_SYS_FLASH_SUCCESS)
 247              		.loc 1 206 0
 248 0138 459B     		ldr	r3, [sp, #276]
 249 013a 002B     		cmp	r3, #0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 9


 250 013c 01D0     		beq	.L15
 207:Generated_Source\PSoC4/CyFlash.c ****                 {
 208:Generated_Source\PSoC4/CyFlash.c ****                     retValue = clkCnfRetValue;
 251              		.loc 1 208 0
 252 013e 459B     		ldr	r3, [sp, #276]
 253 0140 4693     		str	r3, [sp, #280]
 254              	.L15:
 209:Generated_Source\PSoC4/CyFlash.c ****                 }
 210:Generated_Source\PSoC4/CyFlash.c ****             }
 211:Generated_Source\PSoC4/CyFlash.c **** 
 212:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 255              		.loc 1 212 0
 256 0142 2023     		movs	r3, #32
 257 0144 FF33     		adds	r3, r3, #255
 258 0146 6B44     		add	r3, r3, sp
 259 0148 1B78     		ldrb	r3, [r3]
 260 014a 1800     		movs	r0, r3
 261 014c FFF7FEFF 		bl	CyExitCriticalSection
 135:Generated_Source\PSoC4/CyFlash.c ****         {
 262              		.loc 1 135 0
 263 0150 01E0     		b	.L16
 264              	.L2:
 213:Generated_Source\PSoC4/CyFlash.c ****         }
 214:Generated_Source\PSoC4/CyFlash.c ****     }
 215:Generated_Source\PSoC4/CyFlash.c ****     else
 216:Generated_Source\PSoC4/CyFlash.c ****     {
 217:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 265              		.loc 1 217 0
 266 0152 0423     		movs	r3, #4
 267 0154 4693     		str	r3, [sp, #280]
 268              	.L16:
 218:Generated_Source\PSoC4/CyFlash.c ****     }
 219:Generated_Source\PSoC4/CyFlash.c **** 
 220:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 269              		.loc 1 220 0
 270 0156 469B     		ldr	r3, [sp, #280]
 221:Generated_Source\PSoC4/CyFlash.c **** }
 271              		.loc 1 221 0
 272 0158 1800     		movs	r0, r3
 273 015a 48B0     		add	sp, sp, #288
 274              		@ sp needed
 275 015c 10BD     		pop	{r4, pc}
 276              	.L19:
 277 015e C046     		.align	2
 278              	.L18:
 279 0160 FF030000 		.word	1023
 280 0164 FF010000 		.word	511
 281 0168 B6D70001 		.word	16832438
 282 016c B6D70000 		.word	55222
 283 0170 ECFEFFFF 		.word	-276
 284 0174 08001040 		.word	1074790408
 285 0178 04001040 		.word	1074790404
 286 017c 04000080 		.word	-2147483644
 287 0180 B6D80000 		.word	55478
 288 0184 05000080 		.word	-2147483643
 289              		.cfi_endproc
 290              	.LFE2:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 10


 291              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 292              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 293              		.align	2
 294              		.global	CySysFlashSetWaitCycles
 295              		.code	16
 296              		.thumb_func
 297              		.type	CySysFlashSetWaitCycles, %function
 298              	CySysFlashSetWaitCycles:
 299              	.LFB3:
 222:Generated_Source\PSoC4/CyFlash.c **** 
 223:Generated_Source\PSoC4/CyFlash.c **** 
 224:Generated_Source\PSoC4/CyFlash.c **** 
 225:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u))
 226:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashStartWriteRow
 228:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 229:Generated_Source\PSoC4/CyFlash.c **** *
 230:Generated_Source\PSoC4/CyFlash.c **** * Initiates a write to a row of Flash. A call to this API is non-blocking. 
 231:Generated_Source\PSoC4/CyFlash.c **** * Use CySysFlashResumeWriteRow() to resume flash writes and 
 232:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashGetWriteRowStatus() to ascertain status of the write operation.
 233:Generated_Source\PSoC4/CyFlash.c **** *
 234:Generated_Source\PSoC4/CyFlash.c **** * The devices require HFCLK to be sourced by 48 MHz IMO during flash write.
 235:Generated_Source\PSoC4/CyFlash.c **** * This API will modify IMO configuration; it can be later restored to original
 236:Generated_Source\PSoC4/CyFlash.c **** * configuration by calling \ref CySysFlashGetWriteRowStatus().
 237:Generated_Source\PSoC4/CyFlash.c **** *
 238:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 239:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 240:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 241:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 242:Generated_Source\PSoC4/CyFlash.c **** *    
 243:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
 244:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
 245:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
 246:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
 247:Generated_Source\PSoC4/CyFlash.c **** *
 248:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 249:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 250:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
 251:Generated_Source\PSoC4/CyFlash.c **** * details.
 252:Generated_Source\PSoC4/CyFlash.c **** *
 253:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 254:Generated_Source\PSoC4/CyFlash.c **** *
 255:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashStartWriteRow(uint32 rowNum, const uint8 rowData[])
 257:Generated_Source\PSoC4/CyFlash.c **** {
 258:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 259:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
 260:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 261:Generated_Source\PSoC4/CyFlash.c **** 
 262:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 263:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 264:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */    
 265:Generated_Source\PSoC4/CyFlash.c **** 
 266:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
 267:Generated_Source\PSoC4/CyFlash.c ****     {
 268:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 269:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 11


 270:Generated_Source\PSoC4/CyFlash.c **** 
 271:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 272:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 273:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 274:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 275:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 276:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 277:Generated_Source\PSoC4/CyFlash.c **** 
 278:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 279:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 280:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 281:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 282:Generated_Source\PSoC4/CyFlash.c **** 
 283:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 284:Generated_Source\PSoC4/CyFlash.c ****         {
 285:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 286:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 287:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 288:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 289:Generated_Source\PSoC4/CyFlash.c ****             * context.
 290:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 291:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 292:Generated_Source\PSoC4/CyFlash.c **** 
 293:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 294:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 295:Generated_Source\PSoC4/CyFlash.c ****             
 296:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 297:Generated_Source\PSoC4/CyFlash.c ****             {
 298:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 299:Generated_Source\PSoC4/CyFlash.c ****             }
 300:Generated_Source\PSoC4/CyFlash.c ****         #else
 301:Generated_Source\PSoC4/CyFlash.c ****             (void)CySysFlashClockBackup();
 302:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 303:Generated_Source\PSoC4/CyFlash.c **** 
 304:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 305:Generated_Source\PSoC4/CyFlash.c ****             {
 306:Generated_Source\PSoC4/CyFlash.c ****                 /* Non-blocking Write Row */
 307:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_NON_BLOC
 308:Generated_Source\PSoC4/CyFlash.c ****                                                         CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_K
 309:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 310:Generated_Source\PSoC4/CyFlash.c **** 
 311:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 312:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_NON_BLOC
 313:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 314:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 315:Generated_Source\PSoC4/CyFlash.c ****             }
 316:Generated_Source\PSoC4/CyFlash.c **** 
 317:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 318:Generated_Source\PSoC4/CyFlash.c ****         }
 319:Generated_Source\PSoC4/CyFlash.c ****     }
 320:Generated_Source\PSoC4/CyFlash.c ****     else
 321:Generated_Source\PSoC4/CyFlash.c ****     {
 322:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 323:Generated_Source\PSoC4/CyFlash.c ****     }
 324:Generated_Source\PSoC4/CyFlash.c **** 
 325:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 326:Generated_Source\PSoC4/CyFlash.c **** }
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 12


 327:Generated_Source\PSoC4/CyFlash.c **** 
 328:Generated_Source\PSoC4/CyFlash.c **** 
 329:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 330:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashGetWriteRowStatus
 331:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 332:Generated_Source\PSoC4/CyFlash.c **** *
 333:Generated_Source\PSoC4/CyFlash.c **** * Returns the current status of the flash write operation.
 334:Generated_Source\PSoC4/CyFlash.c **** *
 335:Generated_Source\PSoC4/CyFlash.c **** ** \note The non-blocking operation does not return success status 
 336:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 337:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 338:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 339:Generated_Source\PSoC4/CyFlash.c **** * Calling this API before starting a non-blocking write row operation 
 340:Generated_Source\PSoC4/CyFlash.c **** * using the \ref CySysFlashStartWriteRow() API will cause improper operation.
 341:Generated_Source\PSoC4/CyFlash.c **** *
 342:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 343:Generated_Source\PSoC4/CyFlash.c **** *
 344:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 345:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashGetWriteRowStatus(void)
 346:Generated_Source\PSoC4/CyFlash.c **** {
 347:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 348:Generated_Source\PSoC4/CyFlash.c **** 
 349:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 350:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 351:Generated_Source\PSoC4/CyFlash.c **** 
 352:Generated_Source\PSoC4/CyFlash.c ****     (void) CySysFlashClockRestore();
 353:Generated_Source\PSoC4/CyFlash.c **** 
 354:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 355:Generated_Source\PSoC4/CyFlash.c **** }
 356:Generated_Source\PSoC4/CyFlash.c **** 
 357:Generated_Source\PSoC4/CyFlash.c **** 
 358:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashResumeWriteRow
 360:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 361:Generated_Source\PSoC4/CyFlash.c **** *
 362:Generated_Source\PSoC4/CyFlash.c **** * This API must be called, once the SPC interrupt is triggered to complete the
 363:Generated_Source\PSoC4/CyFlash.c **** * non-blocking operation. It is advised not to prolong calling this API for
 364:Generated_Source\PSoC4/CyFlash.c **** * more than 25 ms.
 365:Generated_Source\PSoC4/CyFlash.c **** *
 366:Generated_Source\PSoC4/CyFlash.c **** * The non-blocking write row API \ref CySysFlashStartWriteRow() requires that
 367:Generated_Source\PSoC4/CyFlash.c **** * this API be called 3 times to complete the write. This can be done by
 368:Generated_Source\PSoC4/CyFlash.c **** * configuring SPCIF interrupt and placing a call to this API.
 369:Generated_Source\PSoC4/CyFlash.c **** *
 370:Generated_Source\PSoC4/CyFlash.c **** * For CM0 based device, a non-blocking call to program a row of macro 0
 371:Generated_Source\PSoC4/CyFlash.c **** * requires the user to set the CPUSS_CONFIG.VECS_IN_RAM bit so that the
 372:Generated_Source\PSoC4/CyFlash.c **** * interrupt vector for the SPC is fetched from the SRAM rather than the FLASH.
 373:Generated_Source\PSoC4/CyFlash.c **** *
 374:Generated_Source\PSoC4/CyFlash.c **** * For CM0+ based device, if the user wants to keep the vector table in flash
 375:Generated_Source\PSoC4/CyFlash.c **** * when performing non-blocking flash write then they need to make sure the
 376:Generated_Source\PSoC4/CyFlash.c **** * vector table is placed in the flash macro which is not getting programmed by
 377:Generated_Source\PSoC4/CyFlash.c **** * configuring the VTOR register.
 378:Generated_Source\PSoC4/CyFlash.c **** *
 379:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 380:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last Resume API is complete. 
 381:Generated_Source\PSoC4/CyFlash.c **** * The CPUSS_SYSARG register will be reflecting the SRAM address during an 
 382:Generated_Source\PSoC4/CyFlash.c **** * ongoing non-blocking operation.
 383:Generated_Source\PSoC4/CyFlash.c **** *
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 13


 384:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 385:Generated_Source\PSoC4/CyFlash.c **** *
 386:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 387:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashResumeWriteRow(void)
 388:Generated_Source\PSoC4/CyFlash.c **** {
 389:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 390:Generated_Source\PSoC4/CyFlash.c ****     static volatile uint32 parameters[1u];
 391:Generated_Source\PSoC4/CyFlash.c **** 
 392:Generated_Source\PSoC4/CyFlash.c ****     /* Resume */
 393:Generated_Source\PSoC4/CyFlash.c ****     parameters[0u] = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING) 
 394:Generated_Source\PSoC4/CyFlash.c ****                                          CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_ONE);
 395:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 396:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING;
 397:Generated_Source\PSoC4/CyFlash.c ****     
 398:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 399:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 400:Generated_Source\PSoC4/CyFlash.c ****     
 401:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 402:Generated_Source\PSoC4/CyFlash.c **** }
 403:Generated_Source\PSoC4/CyFlash.c **** 
 404:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u)) */
 405:Generated_Source\PSoC4/CyFlash.c **** 
 406:Generated_Source\PSoC4/CyFlash.c **** 
 407:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 408:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 409:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 410:Generated_Source\PSoC4/CyFlash.c **** *
 411:Generated_Source\PSoC4/CyFlash.c **** * Sets the number of clock cycles the cache will wait before it samples data
 412:Generated_Source\PSoC4/CyFlash.c **** * coming back from Flash. This function must be called before increasing the
 413:Generated_Source\PSoC4/CyFlash.c **** * SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 414:Generated_Source\PSoC4/CyFlash.c **** * clock frequency in order to improve the CPU performance.
 415:Generated_Source\PSoC4/CyFlash.c **** *
 416:Generated_Source\PSoC4/CyFlash.c **** * \param freq The System clock frequency in MHz.
 417:Generated_Source\PSoC4/CyFlash.c **** *
 418:Generated_Source\PSoC4/CyFlash.c **** * \note Invalid frequency will be ignored in Release mode and the CPU will be
 419:Generated_Source\PSoC4/CyFlash.c **** * halted if project is compiled in Debug mode.
 420:Generated_Source\PSoC4/CyFlash.c **** *
 421:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 422:Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 423:Generated_Source\PSoC4/CyFlash.c **** {
 300              		.loc 1 423 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 16
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 10B5     		push	{r4, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 308 0002 84B0     		sub	sp, sp, #16
 309              		.cfi_def_cfa_offset 24
 310 0004 0190     		str	r0, [sp, #4]
 424:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 425:Generated_Source\PSoC4/CyFlash.c **** 
 426:Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 311              		.loc 1 426 0
 312 0006 0F24     		movs	r4, #15
 313 0008 6C44     		add	r4, r4, sp
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 14


 314 000a FFF7FEFF 		bl	CyEnterCriticalSection
 315 000e 0300     		movs	r3, r0
 316 0010 2370     		strb	r3, [r4]
 427:Generated_Source\PSoC4/CyFlash.c **** 
 428:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 429:Generated_Source\PSoC4/CyFlash.c **** 
 430:Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 431:Generated_Source\PSoC4/CyFlash.c ****         {
 432:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 433:Generated_Source\PSoC4/CyFlash.c ****         }
 434:Generated_Source\PSoC4/CyFlash.c ****         else
 435:Generated_Source\PSoC4/CyFlash.c ****         {
 436:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 437:Generated_Source\PSoC4/CyFlash.c ****         }
 438:Generated_Source\PSoC4/CyFlash.c ****     #else
 439:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_CPUSS_FLASHC_PRESENT)
 440:Generated_Source\PSoC4/CyFlash.c ****             /* CY_IP_FM and CY_IP_FS */
 441:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 317              		.loc 1 441 0
 318 0012 019B     		ldr	r3, [sp, #4]
 319 0014 102B     		cmp	r3, #16
 320 0016 06D8     		bhi	.L21
 442:Generated_Source\PSoC4/CyFlash.c ****             {
 443:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_V
 321              		.loc 1 443 0
 322 0018 154B     		ldr	r3, .L25
 323 001a 154A     		ldr	r2, .L25
 324 001c 1268     		ldr	r2, [r2]
 325 001e 0321     		movs	r1, #3
 326 0020 8A43     		bics	r2, r1
 327 0022 1A60     		str	r2, [r3]
 328 0024 1AE0     		b	.L22
 329              	.L21:
 444:Generated_Source\PSoC4/CyFlash.c ****             } else
 445:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 330              		.loc 1 445 0
 331 0026 019B     		ldr	r3, [sp, #4]
 332 0028 202B     		cmp	r3, #32
 333 002a 08D8     		bhi	.L23
 446:Generated_Source\PSoC4/CyFlash.c ****             {
 447:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_V
 334              		.loc 1 447 0
 335 002c 104B     		ldr	r3, .L25
 336 002e 104A     		ldr	r2, .L25
 337 0030 1268     		ldr	r2, [r2]
 338 0032 0321     		movs	r1, #3
 339 0034 8A43     		bics	r2, r1
 340 0036 0121     		movs	r1, #1
 341 0038 0A43     		orrs	r2, r1
 342 003a 1A60     		str	r2, [r3]
 343 003c 0EE0     		b	.L22
 344              	.L23:
 448:Generated_Source\PSoC4/CyFlash.c ****             } else
 449:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_IP_FMLT || CY_IP_FSLT)
 450:Generated_Source\PSoC4/CyFlash.c ****                 if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 345              		.loc 1 450 0
 346 003e 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 15


 347 0040 302B     		cmp	r3, #48
 348 0042 08D8     		bhi	.L24
 451:Generated_Source\PSoC4/CyFlash.c ****                 {
 452:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS
 349              		.loc 1 452 0
 350 0044 0A4B     		ldr	r3, .L25
 351 0046 0A4A     		ldr	r2, .L25
 352 0048 1268     		ldr	r2, [r2]
 353 004a 0321     		movs	r1, #3
 354 004c 8A43     		bics	r2, r1
 355 004e 0221     		movs	r1, #2
 356 0050 0A43     		orrs	r2, r1
 357 0052 1A60     		str	r2, [r3]
 358 0054 02E0     		b	.L22
 359              	.L24:
 453:Generated_Source\PSoC4/CyFlash.c ****                 }
 454:Generated_Source\PSoC4/CyFlash.c ****                 else
 455:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_IP_FMLT || CY_IP_FSLT) */
 456:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_CPUSS_FLASHC_PRESENT) */
 457:Generated_Source\PSoC4/CyFlash.c ****         {
 458:Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 459:Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 360              		.loc 1 459 0 discriminator 1
 361 0056 0020     		movs	r0, #0
 362 0058 FFF7FEFF 		bl	CyHalt
 363              	.L22:
 460:Generated_Source\PSoC4/CyFlash.c ****         }
 461:Generated_Source\PSoC4/CyFlash.c **** 
 462:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 463:Generated_Source\PSoC4/CyFlash.c **** 
 464:Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 364              		.loc 1 464 0
 365 005c 0F23     		movs	r3, #15
 366 005e 6B44     		add	r3, r3, sp
 367 0060 1B78     		ldrb	r3, [r3]
 368 0062 1800     		movs	r0, r3
 369 0064 FFF7FEFF 		bl	CyExitCriticalSection
 465:Generated_Source\PSoC4/CyFlash.c **** }
 370              		.loc 1 465 0
 371 0068 C046     		nop
 372 006a 04B0     		add	sp, sp, #16
 373              		@ sp needed
 374 006c 10BD     		pop	{r4, pc}
 375              	.L26:
 376 006e C046     		.align	2
 377              	.L25:
 378 0070 30001040 		.word	1074790448
 379              		.cfi_endproc
 380              	.LFE3:
 381              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 382              		.section	.text.CySysSFlashWriteUserRow,"ax",%progbits
 383              		.align	2
 384              		.global	CySysSFlashWriteUserRow
 385              		.code	16
 386              		.thumb_func
 387              		.type	CySysSFlashWriteUserRow, %function
 388              	CySysSFlashWriteUserRow:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 16


 389              	.LFB4:
 466:Generated_Source\PSoC4/CyFlash.c **** 
 467:Generated_Source\PSoC4/CyFlash.c **** 
 468:Generated_Source\PSoC4/CyFlash.c **** #if (CY_SFLASH_XTRA_ROWS)
 469:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 470:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysSFlashWriteUserRow
 471:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 472:Generated_Source\PSoC4/CyFlash.c **** *
 473:Generated_Source\PSoC4/CyFlash.c **** * Writes data to a row of SFlash user configurable area.
 474:Generated_Source\PSoC4/CyFlash.c **** *
 475:Generated_Source\PSoC4/CyFlash.c **** * This API is applicable for PSoC 4100 BLE, PSoC 4200 BLE, PSoC 4100M,
 476:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200M, and PSoC 4200L family of devices.
 477:Generated_Source\PSoC4/CyFlash.c **** *
 478:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The flash row number. The number of the
 479:Generated_Source\PSoC4/CyFlash.c **** * flash rows is defined by the CY_SFLASH_NUMBER_USERROWS macro for the selected
 480:Generated_Source\PSoC4/CyFlash.c **** * device. Valid range is 0-3. Refer to the device TRM for details.
 481:Generated_Source\PSoC4/CyFlash.c **** *
 482:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 483:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 484:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_SFLASH_SIZEOF_USERROW macro. Refer to the device TRM for the
 485:Generated_Source\PSoC4/CyFlash.c **** * details.
 486:Generated_Source\PSoC4/CyFlash.c **** *
 487:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 488:Generated_Source\PSoC4/CyFlash.c **** *
 489:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 490:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysSFlashWriteUserRow(uint32 rowNum, const uint8 rowData[])
 491:Generated_Source\PSoC4/CyFlash.c **** {
 390              		.loc 1 491 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 288
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 10B5     		push	{r4, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 398 0002 C8B0     		sub	sp, sp, #288
 399              		.cfi_def_cfa_offset 296
 400 0004 0190     		str	r0, [sp, #4]
 401 0006 0091     		str	r1, [sp]
 492:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 402              		.loc 1 492 0
 403 0008 0023     		movs	r3, #0
 404 000a 4693     		str	r3, [sp, #280]
 493:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 405              		.loc 1 493 0
 406 000c 0023     		movs	r3, #0
 407 000e 4593     		str	r3, [sp, #276]
 494:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
 495:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 496:Generated_Source\PSoC4/CyFlash.c **** 
 497:Generated_Source\PSoC4/CyFlash.c **** 
 498:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_SFLASH_NUMBER_USERROWS) && (rowData != 0u))
 408              		.loc 1 498 0
 409 0010 019B     		ldr	r3, [sp, #4]
 410 0012 032B     		cmp	r3, #3
 411 0014 00D9     		bls	.LCB329
 412 0016 8FE0     		b	.L28	@long jump
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 17


 413              	.LCB329:
 414              		.loc 1 498 0 is_stmt 0 discriminator 1
 415 0018 009B     		ldr	r3, [sp]
 416 001a 002B     		cmp	r3, #0
 417 001c 00D1     		bne	.LCB332
 418 001e 8BE0     		b	.L28	@long jump
 419              	.LCB332:
 499:Generated_Source\PSoC4/CyFlash.c ****     {
 500:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 501:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 502:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 503:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 420              		.loc 1 503 0 is_stmt 1
 421 0020 019B     		ldr	r3, [sp, #4]
 422 0022 484A     		ldr	r2, .L44
 423 0024 9342     		cmp	r3, r2
 424 0026 01D9     		bls	.L29
 425              		.loc 1 503 0 is_stmt 0 discriminator 1
 426 0028 474A     		ldr	r2, .L44+4
 427 002a 00E0     		b	.L30
 428              	.L29:
 429              		.loc 1 503 0 discriminator 2
 430 002c 474A     		ldr	r2, .L44+8
 431              	.L30:
 501:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 432              		.loc 1 501 0 is_stmt 1
 433 002e 484B     		ldr	r3, .L44+12
 434 0030 48A9     		add	r1, sp, #288
 435 0032 8C46     		mov	ip, r1
 436 0034 6344     		add	r3, r3, ip
 437 0036 1A60     		str	r2, [r3]
 504:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 505:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 438              		.loc 1 505 0
 439 0038 454B     		ldr	r3, .L44+12
 440 003a 48AA     		add	r2, sp, #288
 441 003c 9446     		mov	ip, r2
 442 003e 6344     		add	r3, r3, ip
 443 0040 FF22     		movs	r2, #255
 444 0042 5A60     		str	r2, [r3, #4]
 506:Generated_Source\PSoC4/CyFlash.c **** 
 507:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 445              		.loc 1 507 0
 446 0044 8023     		movs	r3, #128
 447 0046 5A00     		lsls	r2, r3, #1
 448 0048 0099     		ldr	r1, [sp]
 449 004a 03AB     		add	r3, sp, #12
 450 004c 0833     		adds	r3, r3, #8
 451 004e 1800     		movs	r0, r3
 452 0050 FFF7FEFF 		bl	memcpy
 508:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 453              		.loc 1 508 0
 454 0054 3F4B     		ldr	r3, .L44+16
 455 0056 03AA     		add	r2, sp, #12
 456 0058 1A60     		str	r2, [r3]
 509:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 457              		.loc 1 509 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 18


 458 005a 3F4B     		ldr	r3, .L44+20
 459 005c 3F4A     		ldr	r2, .L44+24
 460 005e 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 461              		.loc 1 510 0
 462              		.syntax divided
 463              	@ 510 "Generated_Source\PSoC4\CyFlash.c" 1
 464 0060 C046     		NOP
 465              	
 466              	@ 0 "" 2
 511:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 467              		.loc 1 511 0
 468              		.thumb
 469              		.syntax unified
 470 0062 3C4B     		ldr	r3, .L44+16
 471 0064 1B68     		ldr	r3, [r3]
 472 0066 1B0F     		lsrs	r3, r3, #28
 473 0068 1A07     		lsls	r2, r3, #28
 474 006a F023     		movs	r3, #240
 475 006c 1B06     		lsls	r3, r3, #24
 476 006e 9A42     		cmp	r2, r3
 477 0070 04D1     		bne	.L31
 478              		.loc 1 511 0 is_stmt 0 discriminator 1
 479 0072 384B     		ldr	r3, .L44+16
 480 0074 1B68     		ldr	r3, [r3]
 481 0076 FF22     		movs	r2, #255
 482 0078 1340     		ands	r3, r2
 483 007a 0DE0     		b	.L32
 484              	.L31:
 485              		.loc 1 511 0 discriminator 2
 486 007c 354B     		ldr	r3, .L44+16
 487 007e 1B68     		ldr	r3, [r3]
 488 0080 1B0F     		lsrs	r3, r3, #28
 489 0082 1A07     		lsls	r2, r3, #28
 490 0084 A023     		movs	r3, #160
 491 0086 1B06     		lsls	r3, r3, #24
 492 0088 9A42     		cmp	r2, r3
 493 008a 04D0     		beq	.L33
 494              		.loc 1 511 0 discriminator 4
 495 008c 314B     		ldr	r3, .L44+16
 496 008e 1B68     		ldr	r3, [r3]
 497 0090 FF22     		movs	r2, #255
 498 0092 1340     		ands	r3, r2
 499 0094 00E0     		b	.L32
 500              	.L33:
 501              		.loc 1 511 0 discriminator 5
 502 0096 0023     		movs	r3, #0
 503              	.L32:
 504              		.loc 1 511 0 discriminator 8
 505 0098 4693     		str	r3, [sp, #280]
 512:Generated_Source\PSoC4/CyFlash.c **** 
 513:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 506              		.loc 1 513 0 is_stmt 1 discriminator 8
 507 009a 469B     		ldr	r3, [sp, #280]
 508 009c 002B     		cmp	r3, #0
 509 009e 4DD1     		bne	.L42
 514:Generated_Source\PSoC4/CyFlash.c ****         {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 19


 515:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 516:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 517:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 518:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 519:Generated_Source\PSoC4/CyFlash.c ****             * context.
 520:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 521:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 510              		.loc 1 521 0
 511 00a0 2024     		movs	r4, #32
 512 00a2 FF34     		adds	r4, r4, #255
 513 00a4 6C44     		add	r4, r4, sp
 514 00a6 FFF7FEFF 		bl	CyEnterCriticalSection
 515 00aa 0300     		movs	r3, r0
 516 00ac 2370     		strb	r3, [r4]
 522:Generated_Source\PSoC4/CyFlash.c **** 
 523:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 517              		.loc 1 523 0
 518 00ae FFF7FEFF 		bl	CySysFlashClockBackup
 519 00b2 0300     		movs	r3, r0
 520 00b4 4593     		str	r3, [sp, #276]
 524:Generated_Source\PSoC4/CyFlash.c **** 
 525:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 526:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 527:Generated_Source\PSoC4/CyFlash.c ****             {
 528:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 529:Generated_Source\PSoC4/CyFlash.c ****             }
 530:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 531:Generated_Source\PSoC4/CyFlash.c **** 
 532:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 521              		.loc 1 532 0
 522 00b6 469B     		ldr	r3, [sp, #280]
 523 00b8 002B     		cmp	r3, #0
 524 00ba 2ED1     		bne	.L36
 533:Generated_Source\PSoC4/CyFlash.c ****             {
 534:Generated_Source\PSoC4/CyFlash.c ****                 /* Write User Sflash Row */
 535:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_SF
 525              		.loc 1 535 0
 526 00bc 244B     		ldr	r3, .L44+12
 527 00be 48AA     		add	r2, sp, #288
 528 00c0 9446     		mov	ip, r2
 529 00c2 6344     		add	r3, r3, ip
 530 00c4 264A     		ldr	r2, .L44+28
 531 00c6 1A60     		str	r2, [r3]
 536:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 532              		.loc 1 536 0
 533 00c8 214B     		ldr	r3, .L44+12
 534 00ca 48AA     		add	r2, sp, #288
 535 00cc 9446     		mov	ip, r2
 536 00ce 6344     		add	r3, r3, ip
 537 00d0 019A     		ldr	r2, [sp, #4]
 538 00d2 5A60     		str	r2, [r3, #4]
 537:Generated_Source\PSoC4/CyFlash.c **** 
 538:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 539              		.loc 1 538 0
 540 00d4 1F4B     		ldr	r3, .L44+16
 541 00d6 03AA     		add	r2, sp, #12
 542 00d8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 20


 539:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 543              		.loc 1 539 0
 544 00da 1F4B     		ldr	r3, .L44+20
 545 00dc 214A     		ldr	r2, .L44+32
 546 00de 1A60     		str	r2, [r3]
 540:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 547              		.loc 1 540 0
 548              		.syntax divided
 549              	@ 540 "Generated_Source\PSoC4\CyFlash.c" 1
 550 00e0 C046     		NOP
 551              	
 552              	@ 0 "" 2
 541:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 553              		.loc 1 541 0
 554              		.thumb
 555              		.syntax unified
 556 00e2 1C4B     		ldr	r3, .L44+16
 557 00e4 1B68     		ldr	r3, [r3]
 558 00e6 1B0F     		lsrs	r3, r3, #28
 559 00e8 1A07     		lsls	r2, r3, #28
 560 00ea F023     		movs	r3, #240
 561 00ec 1B06     		lsls	r3, r3, #24
 562 00ee 9A42     		cmp	r2, r3
 563 00f0 04D1     		bne	.L37
 564              		.loc 1 541 0 is_stmt 0 discriminator 1
 565 00f2 184B     		ldr	r3, .L44+16
 566 00f4 1B68     		ldr	r3, [r3]
 567 00f6 FF22     		movs	r2, #255
 568 00f8 1340     		ands	r3, r2
 569 00fa 0DE0     		b	.L38
 570              	.L37:
 571              		.loc 1 541 0 discriminator 2
 572 00fc 154B     		ldr	r3, .L44+16
 573 00fe 1B68     		ldr	r3, [r3]
 574 0100 1B0F     		lsrs	r3, r3, #28
 575 0102 1A07     		lsls	r2, r3, #28
 576 0104 A023     		movs	r3, #160
 577 0106 1B06     		lsls	r3, r3, #24
 578 0108 9A42     		cmp	r2, r3
 579 010a 04D0     		beq	.L39
 580              		.loc 1 541 0 discriminator 4
 581 010c 114B     		ldr	r3, .L44+16
 582 010e 1B68     		ldr	r3, [r3]
 583 0110 FF22     		movs	r2, #255
 584 0112 1340     		ands	r3, r2
 585 0114 00E0     		b	.L38
 586              	.L39:
 587              		.loc 1 541 0 discriminator 5
 588 0116 0023     		movs	r3, #0
 589              	.L38:
 590              		.loc 1 541 0 discriminator 8
 591 0118 4693     		str	r3, [sp, #280]
 592              	.L36:
 542:Generated_Source\PSoC4/CyFlash.c ****             }
 543:Generated_Source\PSoC4/CyFlash.c **** 
 544:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 593              		.loc 1 544 0 is_stmt 1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 21


 594 011a 459B     		ldr	r3, [sp, #276]
 595 011c 002B     		cmp	r3, #0
 596 011e 03D1     		bne	.L41
 545:Generated_Source\PSoC4/CyFlash.c ****             {
 546:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 597              		.loc 1 546 0
 598 0120 FFF7FEFF 		bl	CySysFlashClockRestore
 599 0124 0300     		movs	r3, r0
 600 0126 4593     		str	r3, [sp, #276]
 601              	.L41:
 547:Generated_Source\PSoC4/CyFlash.c ****             }
 548:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 602              		.loc 1 548 0
 603 0128 2023     		movs	r3, #32
 604 012a FF33     		adds	r3, r3, #255
 605 012c 6B44     		add	r3, r3, sp
 606 012e 1B78     		ldrb	r3, [r3]
 607 0130 1800     		movs	r0, r3
 608 0132 FFF7FEFF 		bl	CyExitCriticalSection
 513:Generated_Source\PSoC4/CyFlash.c ****         {
 609              		.loc 1 513 0
 610 0136 01E0     		b	.L42
 611              	.L28:
 549:Generated_Source\PSoC4/CyFlash.c ****         }
 550:Generated_Source\PSoC4/CyFlash.c ****     }
 551:Generated_Source\PSoC4/CyFlash.c ****     else
 552:Generated_Source\PSoC4/CyFlash.c ****     {
 553:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 612              		.loc 1 553 0
 613 0138 0423     		movs	r3, #4
 614 013a 4693     		str	r3, [sp, #280]
 615              	.L42:
 554:Generated_Source\PSoC4/CyFlash.c ****     }
 555:Generated_Source\PSoC4/CyFlash.c **** 
 556:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 616              		.loc 1 556 0
 617 013c 469B     		ldr	r3, [sp, #280]
 557:Generated_Source\PSoC4/CyFlash.c **** }
 618              		.loc 1 557 0
 619 013e 1800     		movs	r0, r3
 620 0140 48B0     		add	sp, sp, #288
 621              		@ sp needed
 622 0142 10BD     		pop	{r4, pc}
 623              	.L45:
 624              		.align	2
 625              	.L44:
 626 0144 FF010000 		.word	511
 627 0148 B6D70001 		.word	16832438
 628 014c B6D70000 		.word	55222
 629 0150 ECFEFFFF 		.word	-276
 630 0154 08001040 		.word	1074790408
 631 0158 04001040 		.word	1074790404
 632 015c 04000080 		.word	-2147483644
 633 0160 B6EB0000 		.word	60342
 634 0164 18000080 		.word	-2147483624
 635              		.cfi_endproc
 636              	.LFE4:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 22


 637              		.size	CySysSFlashWriteUserRow, .-CySysSFlashWriteUserRow
 638              		.section	.text.CySysFlashClockBackup,"ax",%progbits
 639              		.align	2
 640              		.code	16
 641              		.thumb_func
 642              		.type	CySysFlashClockBackup, %function
 643              	CySysFlashClockBackup:
 644              	.LFB5:
 558:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_SFLASH_XTRA_ROWS) */
 559:Generated_Source\PSoC4/CyFlash.c **** 
 560:Generated_Source\PSoC4/CyFlash.c **** 
 561:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 562:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockBackup
 563:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 564:Generated_Source\PSoC4/CyFlash.c **** *
 565:Generated_Source\PSoC4/CyFlash.c **** * Backups the device clock configuration.
 566:Generated_Source\PSoC4/CyFlash.c **** *
 567:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 568:Generated_Source\PSoC4/CyFlash.c **** *
 569:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void)
 571:Generated_Source\PSoC4/CyFlash.c **** {
 645              		.loc 1 571 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 82B0     		sub	sp, sp, #8
 651              		.cfi_def_cfa_offset 8
 572:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 652              		.loc 1 572 0
 653 0002 0023     		movs	r3, #0
 654 0004 0193     		str	r3, [sp, #4]
 573:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 574:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 575:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 576:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 577:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 578:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 579:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 580:Generated_Source\PSoC4/CyFlash.c **** 
 581:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 582:Generated_Source\PSoC4/CyFlash.c **** 
 583:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 584:Generated_Source\PSoC4/CyFlash.c ****     * Preserve IMO configuration that could be changed during
 585:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 586:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 587:Generated_Source\PSoC4/CyFlash.c ****     cySysFlashBackup.imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 588:Generated_Source\PSoC4/CyFlash.c **** 
 589:Generated_Source\PSoC4/CyFlash.c **** #else   /* (CY_IP_FMLT) */
 590:Generated_Source\PSoC4/CyFlash.c **** 
 591:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 592:Generated_Source\PSoC4/CyFlash.c **** 
 593:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 594:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings backup for the PSOC4 4000 devices (the
 595:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 596:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 23


 597:Generated_Source\PSoC4/CyFlash.c **** 
 598:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 599:Generated_Source\PSoC4/CyFlash.c ****         * The registers listed below are modified by CySysFlashClockConfig().
 600:Generated_Source\PSoC4/CyFlash.c ****         *
 601:Generated_Source\PSoC4/CyFlash.c ****         * The registers to be saved:
 602:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_CONFIG_REG - IMO enable state.
 603:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_SELECT_REG     - HFCLK source, divider, pump source. Save
 604:Generated_Source\PSoC4/CyFlash.c ****         *                               entire register as it can be directly
 605:Generated_Source\PSoC4/CyFlash.c ****         *                               written on restore (no special
 606:Generated_Source\PSoC4/CyFlash.c ****         *                               requirements).
 607:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_SELECT_REG - Save IMO frequency.
 608:Generated_Source\PSoC4/CyFlash.c ****         *
 609:Generated_Source\PSoC4/CyFlash.c ****         * The registers not to be saved:
 610:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM1_REG  - No need to save. Function of frequency.
 611:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 612:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM3_REG  - No need to save. Function of frequency.
 613:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 614:Generated_Source\PSoC4/CyFlash.c ****         * - REG_CPUSS_FLASH_CTL       - Flash wait cycles. Unmodified due to system
 615:Generated_Source\PSoC4/CyFlash.c ****         *                               clock 16 MHz limit.
 616:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 617:Generated_Source\PSoC4/CyFlash.c **** 
 618:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkSelectReg = CY_SYS_CLK_SELECT_REG;
 619:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
 620:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG <<
 621:Generated_Source\PSoC4/CyFlash.c **** 
 622:Generated_Source\PSoC4/CyFlash.c ****     #else
 623:Generated_Source\PSoC4/CyFlash.c **** 
 624:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 625:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Backup System Call */
 626:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 627:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_BACKUP) <<  CY_FLASH_PARAM_KEY_
 628:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 629:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 630:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 631:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_BACKUP;
 632:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 633:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 634:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 635:Generated_Source\PSoC4/CyFlash.c **** 
 636:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 637:Generated_Source\PSoC4/CyFlash.c **** 
 638:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 639:Generated_Source\PSoC4/CyFlash.c **** 
 640:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 655              		.loc 1 640 0
 656 0006 019B     		ldr	r3, [sp, #4]
 641:Generated_Source\PSoC4/CyFlash.c **** }
 657              		.loc 1 641 0
 658 0008 1800     		movs	r0, r3
 659 000a 02B0     		add	sp, sp, #8
 660              		@ sp needed
 661 000c 7047     		bx	lr
 662              		.cfi_endproc
 663              	.LFE5:
 664              		.size	CySysFlashClockBackup, .-CySysFlashClockBackup
 665 000e C046     		.section	.text.CySysFlashClockRestore,"ax",%progbits
 666              		.align	2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 24


 667              		.code	16
 668              		.thumb_func
 669              		.type	CySysFlashClockRestore, %function
 670              	CySysFlashClockRestore:
 671              	.LFB6:
 642:Generated_Source\PSoC4/CyFlash.c **** 
 643:Generated_Source\PSoC4/CyFlash.c **** 
 644:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 645:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockConfig
 647:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyFlash.c **** *
 649:Generated_Source\PSoC4/CyFlash.c **** * Configures the device clocks for the flash writing.
 650:Generated_Source\PSoC4/CyFlash.c **** *
 651:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 652:Generated_Source\PSoC4/CyFlash.c **** *
 653:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockConfig(void)
 655:Generated_Source\PSoC4/CyFlash.c **** {
 656:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 657:Generated_Source\PSoC4/CyFlash.c **** 
 658:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 659:Generated_Source\PSoC4/CyFlash.c ****     * The FM-Lite IP uses the IMO at 48MHz for the pump clock and SPC timer
 660:Generated_Source\PSoC4/CyFlash.c ****     * clock. The PUMP_SEL and HF clock must be set to IMO before calling Flash
 661:Generated_Source\PSoC4/CyFlash.c ****     * write or erase operation.
 662:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 663:Generated_Source\PSoC4/CyFlash.c **** #if (CY_PSOC4_4000)
 664:Generated_Source\PSoC4/CyFlash.c **** 
 665:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 666:Generated_Source\PSoC4/CyFlash.c ****     * Perform firmware clock settings setup for the PSOC4 4000 devices (the
 667:Generated_Source\PSoC4/CyFlash.c ****     * corresponding system call is not reliable):
 668:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO frequency should be 48 MHz
 669:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be source for the HFCLK
 670:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be the source for the charge pump clock
 671:Generated_Source\PSoC4/CyFlash.c ****     *
 672:Generated_Source\PSoC4/CyFlash.c ****     * Note The structure members used below are initialized by
 673:Generated_Source\PSoC4/CyFlash.c ****     * the CySysFlashClockBackup() function.
 674:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 675:Generated_Source\PSoC4/CyFlash.c ****     if ((cySysFlashBackup.clkImoFreq != 48u) ||
 676:Generated_Source\PSoC4/CyFlash.c ****         ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IM
 677:Generated_Source\PSoC4/CyFlash.c ****         (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_P
 678:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 679:Generated_Source\PSoC4/CyFlash.c ****     {
 680:Generated_Source\PSoC4/CyFlash.c ****         /***********************************************************************
 681:Generated_Source\PSoC4/CyFlash.c ****          Set HFCLK divider to divide-by-4 to ensure that System clock frequency
 682:Generated_Source\PSoC4/CyFlash.c ****         * is within the valid limit (16 MHz for the PSoC4 4000).
 683:Generated_Source\PSoC4/CyFlash.c ****         ***********************************************************************/
 684:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 685:Generated_Source\PSoC4/CyFlash.c **** 
 686:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO frequency should be 48 MHz */
 687:Generated_Source\PSoC4/CyFlash.c ****         if (cySysFlashBackup.clkImoFreq != 48u)
 688:Generated_Source\PSoC4/CyFlash.c ****         {
 689:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteImoFreq(48u);
 690:Generated_Source\PSoC4/CyFlash.c ****         }
 691:Generated_Source\PSoC4/CyFlash.c ****         CySysClkImoStart();
 692:Generated_Source\PSoC4/CyFlash.c **** 
 693:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be source for the HFCLK */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 25


 694:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 695:Generated_Source\PSoC4/CyFlash.c **** 
 696:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be the source for the charge pump clock */
 697:Generated_Source\PSoC4/CyFlash.c ****         CY_SYS_CLK_SELECT_REG =  (CY_SYS_CLK_SELECT_REG &
 698:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT)
 699:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT));
 700:Generated_Source\PSoC4/CyFlash.c ****     }
 701:Generated_Source\PSoC4/CyFlash.c **** 
 702:Generated_Source\PSoC4/CyFlash.c **** #else
 703:Generated_Source\PSoC4/CyFlash.c **** 
 704:Generated_Source\PSoC4/CyFlash.c ****     /* FM-Lite Clock Configuration */
 705:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG =
 706:Generated_Source\PSoC4/CyFlash.c ****         (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_CONFIG) <<  CY_FLASH_PARAM_KEY_TWO_OFFS
 707:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_KEY_ONE);
 708:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_CONFIG;
 709:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 710:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 711:Generated_Source\PSoC4/CyFlash.c **** 
 712:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_PSOC4_4000) */
 713:Generated_Source\PSoC4/CyFlash.c **** 
 714:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 715:Generated_Source\PSoC4/CyFlash.c **** }
 716:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 717:Generated_Source\PSoC4/CyFlash.c **** 
 718:Generated_Source\PSoC4/CyFlash.c **** 
 719:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockRestore
 721:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/CyFlash.c **** *
 723:Generated_Source\PSoC4/CyFlash.c **** * Restores the device clock configuration.
 724:Generated_Source\PSoC4/CyFlash.c **** *
 725:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 726:Generated_Source\PSoC4/CyFlash.c **** *
 727:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 728:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void)
 729:Generated_Source\PSoC4/CyFlash.c **** {
 672              		.loc 1 729 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 82B0     		sub	sp, sp, #8
 678              		.cfi_def_cfa_offset 8
 730:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 679              		.loc 1 730 0
 680 0002 0023     		movs	r3, #0
 681 0004 0193     		str	r3, [sp, #4]
 731:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 732:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 733:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 734:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 735:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 736:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 737:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 738:Generated_Source\PSoC4/CyFlash.c **** 
 739:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 740:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 26


 741:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 742:Generated_Source\PSoC4/CyFlash.c ****     * Restore IMO configuration that could be changed during
 743:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 744:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 745:Generated_Source\PSoC4/CyFlash.c ****     CY_SYS_CLK_IMO_CONFIG_REG = cySysFlashBackup.imoConfigReg;
 746:Generated_Source\PSoC4/CyFlash.c **** 
 747:Generated_Source\PSoC4/CyFlash.c **** #else
 748:Generated_Source\PSoC4/CyFlash.c **** 
 749:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 750:Generated_Source\PSoC4/CyFlash.c **** 
 751:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 752:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings restore for the PSOC4 4000 devices (the
 753:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 754:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 755:Generated_Source\PSoC4/CyFlash.c **** 
 756:Generated_Source\PSoC4/CyFlash.c ****         /* Restore clock settings */
 757:Generated_Source\PSoC4/CyFlash.c ****         if ((cySysFlashBackup.clkImoFreq != 48u) ||
 758:Generated_Source\PSoC4/CyFlash.c ****             ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCL
 759:Generated_Source\PSoC4/CyFlash.c ****             (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELE
 760:Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 761:Generated_Source\PSoC4/CyFlash.c ****         {
 762:Generated_Source\PSoC4/CyFlash.c ****             /* Restore IMO frequency if needed */
 763:Generated_Source\PSoC4/CyFlash.c ****             if (cySysFlashBackup.clkImoFreq != 48u)
 764:Generated_Source\PSoC4/CyFlash.c ****             {
 765:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkWriteImoFreq(cySysFlashBackup.clkImoFreq);
 766:Generated_Source\PSoC4/CyFlash.c ****             }
 767:Generated_Source\PSoC4/CyFlash.c **** 
 768:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK clock source */
 769:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteHfclkDirect(cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_M
 770:Generated_Source\PSoC4/CyFlash.c **** 
 771:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK divider and source for pump  */
 772:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG = cySysFlashBackup.clkSelectReg;
 773:Generated_Source\PSoC4/CyFlash.c **** 
 774:Generated_Source\PSoC4/CyFlash.c ****             /* Stop IMO if needed */
 775:Generated_Source\PSoC4/CyFlash.c ****             if (0u == cySysFlashBackup.clkImoEna)
 776:Generated_Source\PSoC4/CyFlash.c ****             {
 777:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkImoStop();
 778:Generated_Source\PSoC4/CyFlash.c ****             }
 779:Generated_Source\PSoC4/CyFlash.c ****         }
 780:Generated_Source\PSoC4/CyFlash.c **** 
 781:Generated_Source\PSoC4/CyFlash.c ****     #else
 782:Generated_Source\PSoC4/CyFlash.c **** 
 783:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 784:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Restore */
 785:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 786:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 787:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 788:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 789:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 790:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 791:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 792:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 793:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 794:Generated_Source\PSoC4/CyFlash.c **** 
 795:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 796:Generated_Source\PSoC4/CyFlash.c **** 
 797:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 27


 798:Generated_Source\PSoC4/CyFlash.c **** 
 799:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 682              		.loc 1 799 0
 683 0006 019B     		ldr	r3, [sp, #4]
 800:Generated_Source\PSoC4/CyFlash.c **** }
 684              		.loc 1 800 0
 685 0008 1800     		movs	r0, r3
 686 000a 02B0     		add	sp, sp, #8
 687              		@ sp needed
 688 000c 7047     		bx	lr
 689              		.cfi_endproc
 690              	.LFE6:
 691              		.size	CySysFlashClockRestore, .-CySysFlashClockRestore
 692 000e C046     		.text
 693              	.Letext0:
 694              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 695              		.section	.debug_info,"",%progbits
 696              	.Ldebug_info0:
 697 0000 5F020000 		.4byte	0x25f
 698 0004 0400     		.2byte	0x4
 699 0006 00000000 		.4byte	.Ldebug_abbrev0
 700 000a 04       		.byte	0x4
 701 000b 01       		.uleb128 0x1
 702 000c 18000000 		.4byte	.LASF28
 703 0010 0C       		.byte	0xc
 704 0011 E4010000 		.4byte	.LASF29
 705 0015 FA000000 		.4byte	.LASF30
 706 0019 00000000 		.4byte	.Ldebug_ranges0+0
 707 001d 00000000 		.4byte	0
 708 0021 00000000 		.4byte	.Ldebug_line0
 709 0025 02       		.uleb128 0x2
 710 0026 01       		.byte	0x1
 711 0027 06       		.byte	0x6
 712 0028 9D020000 		.4byte	.LASF0
 713 002c 02       		.uleb128 0x2
 714 002d 01       		.byte	0x1
 715 002e 08       		.byte	0x8
 716 002f 8C010000 		.4byte	.LASF1
 717 0033 02       		.uleb128 0x2
 718 0034 02       		.byte	0x2
 719 0035 05       		.byte	0x5
 720 0036 CC010000 		.4byte	.LASF2
 721 003a 02       		.uleb128 0x2
 722 003b 02       		.byte	0x2
 723 003c 07       		.byte	0x7
 724 003d DA000000 		.4byte	.LASF3
 725 0041 02       		.uleb128 0x2
 726 0042 04       		.byte	0x4
 727 0043 05       		.byte	0x5
 728 0044 88020000 		.4byte	.LASF4
 729 0048 02       		.uleb128 0x2
 730 0049 04       		.byte	0x4
 731 004a 07       		.byte	0x7
 732 004b AD010000 		.4byte	.LASF5
 733 004f 02       		.uleb128 0x2
 734 0050 08       		.byte	0x8
 735 0051 05       		.byte	0x5
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 28


 736 0052 34020000 		.4byte	.LASF6
 737 0056 02       		.uleb128 0x2
 738 0057 08       		.byte	0x8
 739 0058 07       		.byte	0x7
 740 0059 05020000 		.4byte	.LASF7
 741 005d 03       		.uleb128 0x3
 742 005e 04       		.byte	0x4
 743 005f 05       		.byte	0x5
 744 0060 696E7400 		.ascii	"int\000"
 745 0064 02       		.uleb128 0x2
 746 0065 04       		.byte	0x4
 747 0066 07       		.byte	0x7
 748 0067 ED000000 		.4byte	.LASF8
 749 006b 04       		.uleb128 0x4
 750 006c BF010000 		.4byte	.LASF9
 751 0070 02       		.byte	0x2
 752 0071 D201     		.2byte	0x1d2
 753 0073 2C000000 		.4byte	0x2c
 754 0077 04       		.uleb128 0x4
 755 0078 D6010000 		.4byte	.LASF10
 756 007c 02       		.byte	0x2
 757 007d D301     		.2byte	0x1d3
 758 007f 3A000000 		.4byte	0x3a
 759 0083 04       		.uleb128 0x4
 760 0084 DD010000 		.4byte	.LASF11
 761 0088 02       		.byte	0x2
 762 0089 D401     		.2byte	0x1d4
 763 008b 48000000 		.4byte	0x48
 764 008f 02       		.uleb128 0x2
 765 0090 04       		.byte	0x4
 766 0091 04       		.byte	0x4
 767 0092 86010000 		.4byte	.LASF12
 768 0096 02       		.uleb128 0x2
 769 0097 08       		.byte	0x8
 770 0098 04       		.byte	0x4
 771 0099 C5010000 		.4byte	.LASF13
 772 009d 02       		.uleb128 0x2
 773 009e 01       		.byte	0x1
 774 009f 08       		.byte	0x8
 775 00a0 42020000 		.4byte	.LASF14
 776 00a4 04       		.uleb128 0x4
 777 00a5 00000000 		.4byte	.LASF15
 778 00a9 02       		.byte	0x2
 779 00aa 7402     		.2byte	0x274
 780 00ac 48000000 		.4byte	0x48
 781 00b0 04       		.uleb128 0x4
 782 00b1 09000000 		.4byte	.LASF16
 783 00b5 02       		.byte	0x2
 784 00b6 7E02     		.2byte	0x27e
 785 00b8 BC000000 		.4byte	0xbc
 786 00bc 05       		.uleb128 0x5
 787 00bd 83000000 		.4byte	0x83
 788 00c1 02       		.uleb128 0x2
 789 00c2 08       		.byte	0x8
 790 00c3 04       		.byte	0x4
 791 00c4 91020000 		.4byte	.LASF17
 792 00c8 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 29


 793 00c9 04       		.byte	0x4
 794 00ca 07       		.byte	0x7
 795 00cb 2B020000 		.4byte	.LASF18
 796 00cf 06       		.uleb128 0x6
 797 00d0 A9020000 		.4byte	.LASF26
 798 00d4 01       		.byte	0x1
 799 00d5 51       		.byte	0x51
 800 00d6 83000000 		.4byte	0x83
 801 00da 00000000 		.4byte	.LFB2
 802 00de 88010000 		.4byte	.LFE2-.LFB2
 803 00e2 01       		.uleb128 0x1
 804 00e3 9C       		.byte	0x9c
 805 00e4 40010000 		.4byte	0x140
 806 00e8 07       		.uleb128 0x7
 807 00e9 BB000000 		.4byte	.LASF19
 808 00ed 01       		.byte	0x1
 809 00ee 51       		.byte	0x51
 810 00ef 83000000 		.4byte	0x83
 811 00f3 03       		.uleb128 0x3
 812 00f4 91       		.byte	0x91
 813 00f5 DC7D     		.sleb128 -292
 814 00f7 07       		.uleb128 0x7
 815 00f8 9A010000 		.4byte	.LASF20
 816 00fc 01       		.byte	0x1
 817 00fd 51       		.byte	0x51
 818 00fe 40010000 		.4byte	0x140
 819 0102 03       		.uleb128 0x3
 820 0103 91       		.byte	0x91
 821 0104 D87D     		.sleb128 -296
 822 0106 08       		.uleb128 0x8
 823 0107 0F000000 		.4byte	.LASF21
 824 010b 01       		.byte	0x1
 825 010c 53       		.byte	0x53
 826 010d BC000000 		.4byte	0xbc
 827 0111 02       		.uleb128 0x2
 828 0112 91       		.byte	0x91
 829 0113 70       		.sleb128 -16
 830 0114 08       		.uleb128 0x8
 831 0115 4C020000 		.4byte	.LASF22
 832 0119 01       		.byte	0x1
 833 011a 54       		.byte	0x54
 834 011b BC000000 		.4byte	0xbc
 835 011f 02       		.uleb128 0x2
 836 0120 91       		.byte	0x91
 837 0121 6C       		.sleb128 -20
 838 0122 08       		.uleb128 0x8
 839 0123 A2010000 		.4byte	.LASF23
 840 0127 01       		.byte	0x1
 841 0128 55       		.byte	0x55
 842 0129 5B010000 		.4byte	0x15b
 843 012d 03       		.uleb128 0x3
 844 012e 91       		.byte	0x91
 845 012f E47D     		.sleb128 -284
 846 0131 08       		.uleb128 0x8
 847 0132 1C020000 		.4byte	.LASF24
 848 0136 01       		.byte	0x1
 849 0137 56       		.byte	0x56
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 30


 850 0138 6B000000 		.4byte	0x6b
 851 013c 02       		.uleb128 0x2
 852 013d 91       		.byte	0x91
 853 013e 77       		.sleb128 -9
 854 013f 00       		.byte	0
 855 0140 09       		.uleb128 0x9
 856 0141 04       		.byte	0x4
 857 0142 46010000 		.4byte	0x146
 858 0146 0A       		.uleb128 0xa
 859 0147 6B000000 		.4byte	0x6b
 860 014b 0B       		.uleb128 0xb
 861 014c BC000000 		.4byte	0xbc
 862 0150 5B010000 		.4byte	0x15b
 863 0154 0C       		.uleb128 0xc
 864 0155 C8000000 		.4byte	0xc8
 865 0159 41       		.byte	0x41
 866 015a 00       		.byte	0
 867 015b 05       		.uleb128 0x5
 868 015c 4B010000 		.4byte	0x14b
 869 0160 0D       		.uleb128 0xd
 870 0161 BC020000 		.4byte	.LASF31
 871 0165 01       		.byte	0x1
 872 0166 A601     		.2byte	0x1a6
 873 0168 00000000 		.4byte	.LFB3
 874 016c 74000000 		.4byte	.LFE3-.LFB3
 875 0170 01       		.uleb128 0x1
 876 0171 9C       		.byte	0x9c
 877 0172 95010000 		.4byte	0x195
 878 0176 0E       		.uleb128 0xe
 879 0177 47020000 		.4byte	.LASF25
 880 017b 01       		.byte	0x1
 881 017c A601     		.2byte	0x1a6
 882 017e 83000000 		.4byte	0x83
 883 0182 02       		.uleb128 0x2
 884 0183 91       		.byte	0x91
 885 0184 6C       		.sleb128 -20
 886 0185 0F       		.uleb128 0xf
 887 0186 1C020000 		.4byte	.LASF24
 888 018a 01       		.byte	0x1
 889 018b A801     		.2byte	0x1a8
 890 018d 6B000000 		.4byte	0x6b
 891 0191 02       		.uleb128 0x2
 892 0192 91       		.byte	0x91
 893 0193 77       		.sleb128 -9
 894 0194 00       		.byte	0
 895 0195 10       		.uleb128 0x10
 896 0196 C2000000 		.4byte	.LASF27
 897 019a 01       		.byte	0x1
 898 019b EA01     		.2byte	0x1ea
 899 019d 83000000 		.4byte	0x83
 900 01a1 00000000 		.4byte	.LFB4
 901 01a5 68010000 		.4byte	.LFE4-.LFB4
 902 01a9 01       		.uleb128 0x1
 903 01aa 9C       		.byte	0x9c
 904 01ab 0D020000 		.4byte	0x20d
 905 01af 0E       		.uleb128 0xe
 906 01b0 BB000000 		.4byte	.LASF19
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 31


 907 01b4 01       		.byte	0x1
 908 01b5 EA01     		.2byte	0x1ea
 909 01b7 83000000 		.4byte	0x83
 910 01bb 03       		.uleb128 0x3
 911 01bc 91       		.byte	0x91
 912 01bd DC7D     		.sleb128 -292
 913 01bf 0E       		.uleb128 0xe
 914 01c0 9A010000 		.4byte	.LASF20
 915 01c4 01       		.byte	0x1
 916 01c5 EA01     		.2byte	0x1ea
 917 01c7 40010000 		.4byte	0x140
 918 01cb 03       		.uleb128 0x3
 919 01cc 91       		.byte	0x91
 920 01cd D87D     		.sleb128 -296
 921 01cf 0F       		.uleb128 0xf
 922 01d0 0F000000 		.4byte	.LASF21
 923 01d4 01       		.byte	0x1
 924 01d5 EC01     		.2byte	0x1ec
 925 01d7 BC000000 		.4byte	0xbc
 926 01db 02       		.uleb128 0x2
 927 01dc 91       		.byte	0x91
 928 01dd 70       		.sleb128 -16
 929 01de 0F       		.uleb128 0xf
 930 01df 4C020000 		.4byte	.LASF22
 931 01e3 01       		.byte	0x1
 932 01e4 ED01     		.2byte	0x1ed
 933 01e6 BC000000 		.4byte	0xbc
 934 01ea 02       		.uleb128 0x2
 935 01eb 91       		.byte	0x91
 936 01ec 6C       		.sleb128 -20
 937 01ed 0F       		.uleb128 0xf
 938 01ee A2010000 		.4byte	.LASF23
 939 01f2 01       		.byte	0x1
 940 01f3 EE01     		.2byte	0x1ee
 941 01f5 0D020000 		.4byte	0x20d
 942 01f9 03       		.uleb128 0x3
 943 01fa 91       		.byte	0x91
 944 01fb E47D     		.sleb128 -284
 945 01fd 0F       		.uleb128 0xf
 946 01fe 1C020000 		.4byte	.LASF24
 947 0202 01       		.byte	0x1
 948 0203 EF01     		.2byte	0x1ef
 949 0205 6B000000 		.4byte	0x6b
 950 0209 02       		.uleb128 0x2
 951 020a 91       		.byte	0x91
 952 020b 77       		.sleb128 -9
 953 020c 00       		.byte	0
 954 020d 05       		.uleb128 0x5
 955 020e 4B010000 		.4byte	0x14b
 956 0212 11       		.uleb128 0x11
 957 0213 72020000 		.4byte	.LASF32
 958 0217 01       		.byte	0x1
 959 0218 3A02     		.2byte	0x23a
 960 021a A4000000 		.4byte	0xa4
 961 021e 00000000 		.4byte	.LFB5
 962 0222 0E000000 		.4byte	.LFE5-.LFB5
 963 0226 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 32


 964 0227 9C       		.byte	0x9c
 965 0228 3C020000 		.4byte	0x23c
 966 022c 0F       		.uleb128 0xf
 967 022d 0F000000 		.4byte	.LASF21
 968 0231 01       		.byte	0x1
 969 0232 3C02     		.2byte	0x23c
 970 0234 A4000000 		.4byte	0xa4
 971 0238 02       		.uleb128 0x2
 972 0239 91       		.byte	0x91
 973 023a 7C       		.sleb128 -4
 974 023b 00       		.byte	0
 975 023c 12       		.uleb128 0x12
 976 023d 5B020000 		.4byte	.LASF33
 977 0241 01       		.byte	0x1
 978 0242 D802     		.2byte	0x2d8
 979 0244 A4000000 		.4byte	0xa4
 980 0248 00000000 		.4byte	.LFB6
 981 024c 0E000000 		.4byte	.LFE6-.LFB6
 982 0250 01       		.uleb128 0x1
 983 0251 9C       		.byte	0x9c
 984 0252 0F       		.uleb128 0xf
 985 0253 0F000000 		.4byte	.LASF21
 986 0257 01       		.byte	0x1
 987 0258 DA02     		.2byte	0x2da
 988 025a A4000000 		.4byte	0xa4
 989 025e 02       		.uleb128 0x2
 990 025f 91       		.byte	0x91
 991 0260 7C       		.sleb128 -4
 992 0261 00       		.byte	0
 993 0262 00       		.byte	0
 994              		.section	.debug_abbrev,"",%progbits
 995              	.Ldebug_abbrev0:
 996 0000 01       		.uleb128 0x1
 997 0001 11       		.uleb128 0x11
 998 0002 01       		.byte	0x1
 999 0003 25       		.uleb128 0x25
 1000 0004 0E       		.uleb128 0xe
 1001 0005 13       		.uleb128 0x13
 1002 0006 0B       		.uleb128 0xb
 1003 0007 03       		.uleb128 0x3
 1004 0008 0E       		.uleb128 0xe
 1005 0009 1B       		.uleb128 0x1b
 1006 000a 0E       		.uleb128 0xe
 1007 000b 55       		.uleb128 0x55
 1008 000c 17       		.uleb128 0x17
 1009 000d 11       		.uleb128 0x11
 1010 000e 01       		.uleb128 0x1
 1011 000f 10       		.uleb128 0x10
 1012 0010 17       		.uleb128 0x17
 1013 0011 00       		.byte	0
 1014 0012 00       		.byte	0
 1015 0013 02       		.uleb128 0x2
 1016 0014 24       		.uleb128 0x24
 1017 0015 00       		.byte	0
 1018 0016 0B       		.uleb128 0xb
 1019 0017 0B       		.uleb128 0xb
 1020 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 33


 1021 0019 0B       		.uleb128 0xb
 1022 001a 03       		.uleb128 0x3
 1023 001b 0E       		.uleb128 0xe
 1024 001c 00       		.byte	0
 1025 001d 00       		.byte	0
 1026 001e 03       		.uleb128 0x3
 1027 001f 24       		.uleb128 0x24
 1028 0020 00       		.byte	0
 1029 0021 0B       		.uleb128 0xb
 1030 0022 0B       		.uleb128 0xb
 1031 0023 3E       		.uleb128 0x3e
 1032 0024 0B       		.uleb128 0xb
 1033 0025 03       		.uleb128 0x3
 1034 0026 08       		.uleb128 0x8
 1035 0027 00       		.byte	0
 1036 0028 00       		.byte	0
 1037 0029 04       		.uleb128 0x4
 1038 002a 16       		.uleb128 0x16
 1039 002b 00       		.byte	0
 1040 002c 03       		.uleb128 0x3
 1041 002d 0E       		.uleb128 0xe
 1042 002e 3A       		.uleb128 0x3a
 1043 002f 0B       		.uleb128 0xb
 1044 0030 3B       		.uleb128 0x3b
 1045 0031 05       		.uleb128 0x5
 1046 0032 49       		.uleb128 0x49
 1047 0033 13       		.uleb128 0x13
 1048 0034 00       		.byte	0
 1049 0035 00       		.byte	0
 1050 0036 05       		.uleb128 0x5
 1051 0037 35       		.uleb128 0x35
 1052 0038 00       		.byte	0
 1053 0039 49       		.uleb128 0x49
 1054 003a 13       		.uleb128 0x13
 1055 003b 00       		.byte	0
 1056 003c 00       		.byte	0
 1057 003d 06       		.uleb128 0x6
 1058 003e 2E       		.uleb128 0x2e
 1059 003f 01       		.byte	0x1
 1060 0040 3F       		.uleb128 0x3f
 1061 0041 19       		.uleb128 0x19
 1062 0042 03       		.uleb128 0x3
 1063 0043 0E       		.uleb128 0xe
 1064 0044 3A       		.uleb128 0x3a
 1065 0045 0B       		.uleb128 0xb
 1066 0046 3B       		.uleb128 0x3b
 1067 0047 0B       		.uleb128 0xb
 1068 0048 27       		.uleb128 0x27
 1069 0049 19       		.uleb128 0x19
 1070 004a 49       		.uleb128 0x49
 1071 004b 13       		.uleb128 0x13
 1072 004c 11       		.uleb128 0x11
 1073 004d 01       		.uleb128 0x1
 1074 004e 12       		.uleb128 0x12
 1075 004f 06       		.uleb128 0x6
 1076 0050 40       		.uleb128 0x40
 1077 0051 18       		.uleb128 0x18
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 34


 1078 0052 9642     		.uleb128 0x2116
 1079 0054 19       		.uleb128 0x19
 1080 0055 01       		.uleb128 0x1
 1081 0056 13       		.uleb128 0x13
 1082 0057 00       		.byte	0
 1083 0058 00       		.byte	0
 1084 0059 07       		.uleb128 0x7
 1085 005a 05       		.uleb128 0x5
 1086 005b 00       		.byte	0
 1087 005c 03       		.uleb128 0x3
 1088 005d 0E       		.uleb128 0xe
 1089 005e 3A       		.uleb128 0x3a
 1090 005f 0B       		.uleb128 0xb
 1091 0060 3B       		.uleb128 0x3b
 1092 0061 0B       		.uleb128 0xb
 1093 0062 49       		.uleb128 0x49
 1094 0063 13       		.uleb128 0x13
 1095 0064 02       		.uleb128 0x2
 1096 0065 18       		.uleb128 0x18
 1097 0066 00       		.byte	0
 1098 0067 00       		.byte	0
 1099 0068 08       		.uleb128 0x8
 1100 0069 34       		.uleb128 0x34
 1101 006a 00       		.byte	0
 1102 006b 03       		.uleb128 0x3
 1103 006c 0E       		.uleb128 0xe
 1104 006d 3A       		.uleb128 0x3a
 1105 006e 0B       		.uleb128 0xb
 1106 006f 3B       		.uleb128 0x3b
 1107 0070 0B       		.uleb128 0xb
 1108 0071 49       		.uleb128 0x49
 1109 0072 13       		.uleb128 0x13
 1110 0073 02       		.uleb128 0x2
 1111 0074 18       		.uleb128 0x18
 1112 0075 00       		.byte	0
 1113 0076 00       		.byte	0
 1114 0077 09       		.uleb128 0x9
 1115 0078 0F       		.uleb128 0xf
 1116 0079 00       		.byte	0
 1117 007a 0B       		.uleb128 0xb
 1118 007b 0B       		.uleb128 0xb
 1119 007c 49       		.uleb128 0x49
 1120 007d 13       		.uleb128 0x13
 1121 007e 00       		.byte	0
 1122 007f 00       		.byte	0
 1123 0080 0A       		.uleb128 0xa
 1124 0081 26       		.uleb128 0x26
 1125 0082 00       		.byte	0
 1126 0083 49       		.uleb128 0x49
 1127 0084 13       		.uleb128 0x13
 1128 0085 00       		.byte	0
 1129 0086 00       		.byte	0
 1130 0087 0B       		.uleb128 0xb
 1131 0088 01       		.uleb128 0x1
 1132 0089 01       		.byte	0x1
 1133 008a 49       		.uleb128 0x49
 1134 008b 13       		.uleb128 0x13
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 35


 1135 008c 01       		.uleb128 0x1
 1136 008d 13       		.uleb128 0x13
 1137 008e 00       		.byte	0
 1138 008f 00       		.byte	0
 1139 0090 0C       		.uleb128 0xc
 1140 0091 21       		.uleb128 0x21
 1141 0092 00       		.byte	0
 1142 0093 49       		.uleb128 0x49
 1143 0094 13       		.uleb128 0x13
 1144 0095 2F       		.uleb128 0x2f
 1145 0096 0B       		.uleb128 0xb
 1146 0097 00       		.byte	0
 1147 0098 00       		.byte	0
 1148 0099 0D       		.uleb128 0xd
 1149 009a 2E       		.uleb128 0x2e
 1150 009b 01       		.byte	0x1
 1151 009c 3F       		.uleb128 0x3f
 1152 009d 19       		.uleb128 0x19
 1153 009e 03       		.uleb128 0x3
 1154 009f 0E       		.uleb128 0xe
 1155 00a0 3A       		.uleb128 0x3a
 1156 00a1 0B       		.uleb128 0xb
 1157 00a2 3B       		.uleb128 0x3b
 1158 00a3 05       		.uleb128 0x5
 1159 00a4 27       		.uleb128 0x27
 1160 00a5 19       		.uleb128 0x19
 1161 00a6 11       		.uleb128 0x11
 1162 00a7 01       		.uleb128 0x1
 1163 00a8 12       		.uleb128 0x12
 1164 00a9 06       		.uleb128 0x6
 1165 00aa 40       		.uleb128 0x40
 1166 00ab 18       		.uleb128 0x18
 1167 00ac 9642     		.uleb128 0x2116
 1168 00ae 19       		.uleb128 0x19
 1169 00af 01       		.uleb128 0x1
 1170 00b0 13       		.uleb128 0x13
 1171 00b1 00       		.byte	0
 1172 00b2 00       		.byte	0
 1173 00b3 0E       		.uleb128 0xe
 1174 00b4 05       		.uleb128 0x5
 1175 00b5 00       		.byte	0
 1176 00b6 03       		.uleb128 0x3
 1177 00b7 0E       		.uleb128 0xe
 1178 00b8 3A       		.uleb128 0x3a
 1179 00b9 0B       		.uleb128 0xb
 1180 00ba 3B       		.uleb128 0x3b
 1181 00bb 05       		.uleb128 0x5
 1182 00bc 49       		.uleb128 0x49
 1183 00bd 13       		.uleb128 0x13
 1184 00be 02       		.uleb128 0x2
 1185 00bf 18       		.uleb128 0x18
 1186 00c0 00       		.byte	0
 1187 00c1 00       		.byte	0
 1188 00c2 0F       		.uleb128 0xf
 1189 00c3 34       		.uleb128 0x34
 1190 00c4 00       		.byte	0
 1191 00c5 03       		.uleb128 0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 36


 1192 00c6 0E       		.uleb128 0xe
 1193 00c7 3A       		.uleb128 0x3a
 1194 00c8 0B       		.uleb128 0xb
 1195 00c9 3B       		.uleb128 0x3b
 1196 00ca 05       		.uleb128 0x5
 1197 00cb 49       		.uleb128 0x49
 1198 00cc 13       		.uleb128 0x13
 1199 00cd 02       		.uleb128 0x2
 1200 00ce 18       		.uleb128 0x18
 1201 00cf 00       		.byte	0
 1202 00d0 00       		.byte	0
 1203 00d1 10       		.uleb128 0x10
 1204 00d2 2E       		.uleb128 0x2e
 1205 00d3 01       		.byte	0x1
 1206 00d4 3F       		.uleb128 0x3f
 1207 00d5 19       		.uleb128 0x19
 1208 00d6 03       		.uleb128 0x3
 1209 00d7 0E       		.uleb128 0xe
 1210 00d8 3A       		.uleb128 0x3a
 1211 00d9 0B       		.uleb128 0xb
 1212 00da 3B       		.uleb128 0x3b
 1213 00db 05       		.uleb128 0x5
 1214 00dc 27       		.uleb128 0x27
 1215 00dd 19       		.uleb128 0x19
 1216 00de 49       		.uleb128 0x49
 1217 00df 13       		.uleb128 0x13
 1218 00e0 11       		.uleb128 0x11
 1219 00e1 01       		.uleb128 0x1
 1220 00e2 12       		.uleb128 0x12
 1221 00e3 06       		.uleb128 0x6
 1222 00e4 40       		.uleb128 0x40
 1223 00e5 18       		.uleb128 0x18
 1224 00e6 9642     		.uleb128 0x2116
 1225 00e8 19       		.uleb128 0x19
 1226 00e9 01       		.uleb128 0x1
 1227 00ea 13       		.uleb128 0x13
 1228 00eb 00       		.byte	0
 1229 00ec 00       		.byte	0
 1230 00ed 11       		.uleb128 0x11
 1231 00ee 2E       		.uleb128 0x2e
 1232 00ef 01       		.byte	0x1
 1233 00f0 03       		.uleb128 0x3
 1234 00f1 0E       		.uleb128 0xe
 1235 00f2 3A       		.uleb128 0x3a
 1236 00f3 0B       		.uleb128 0xb
 1237 00f4 3B       		.uleb128 0x3b
 1238 00f5 05       		.uleb128 0x5
 1239 00f6 27       		.uleb128 0x27
 1240 00f7 19       		.uleb128 0x19
 1241 00f8 49       		.uleb128 0x49
 1242 00f9 13       		.uleb128 0x13
 1243 00fa 11       		.uleb128 0x11
 1244 00fb 01       		.uleb128 0x1
 1245 00fc 12       		.uleb128 0x12
 1246 00fd 06       		.uleb128 0x6
 1247 00fe 40       		.uleb128 0x40
 1248 00ff 18       		.uleb128 0x18
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 37


 1249 0100 9742     		.uleb128 0x2117
 1250 0102 19       		.uleb128 0x19
 1251 0103 01       		.uleb128 0x1
 1252 0104 13       		.uleb128 0x13
 1253 0105 00       		.byte	0
 1254 0106 00       		.byte	0
 1255 0107 12       		.uleb128 0x12
 1256 0108 2E       		.uleb128 0x2e
 1257 0109 01       		.byte	0x1
 1258 010a 03       		.uleb128 0x3
 1259 010b 0E       		.uleb128 0xe
 1260 010c 3A       		.uleb128 0x3a
 1261 010d 0B       		.uleb128 0xb
 1262 010e 3B       		.uleb128 0x3b
 1263 010f 05       		.uleb128 0x5
 1264 0110 27       		.uleb128 0x27
 1265 0111 19       		.uleb128 0x19
 1266 0112 49       		.uleb128 0x49
 1267 0113 13       		.uleb128 0x13
 1268 0114 11       		.uleb128 0x11
 1269 0115 01       		.uleb128 0x1
 1270 0116 12       		.uleb128 0x12
 1271 0117 06       		.uleb128 0x6
 1272 0118 40       		.uleb128 0x40
 1273 0119 18       		.uleb128 0x18
 1274 011a 9742     		.uleb128 0x2117
 1275 011c 19       		.uleb128 0x19
 1276 011d 00       		.byte	0
 1277 011e 00       		.byte	0
 1278 011f 00       		.byte	0
 1279              		.section	.debug_aranges,"",%progbits
 1280 0000 3C000000 		.4byte	0x3c
 1281 0004 0200     		.2byte	0x2
 1282 0006 00000000 		.4byte	.Ldebug_info0
 1283 000a 04       		.byte	0x4
 1284 000b 00       		.byte	0
 1285 000c 0000     		.2byte	0
 1286 000e 0000     		.2byte	0
 1287 0010 00000000 		.4byte	.LFB2
 1288 0014 88010000 		.4byte	.LFE2-.LFB2
 1289 0018 00000000 		.4byte	.LFB3
 1290 001c 74000000 		.4byte	.LFE3-.LFB3
 1291 0020 00000000 		.4byte	.LFB4
 1292 0024 68010000 		.4byte	.LFE4-.LFB4
 1293 0028 00000000 		.4byte	.LFB5
 1294 002c 0E000000 		.4byte	.LFE5-.LFB5
 1295 0030 00000000 		.4byte	.LFB6
 1296 0034 0E000000 		.4byte	.LFE6-.LFB6
 1297 0038 00000000 		.4byte	0
 1298 003c 00000000 		.4byte	0
 1299              		.section	.debug_ranges,"",%progbits
 1300              	.Ldebug_ranges0:
 1301 0000 00000000 		.4byte	.LFB2
 1302 0004 88010000 		.4byte	.LFE2
 1303 0008 00000000 		.4byte	.LFB3
 1304 000c 74000000 		.4byte	.LFE3
 1305 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 38


 1306 0014 68010000 		.4byte	.LFE4
 1307 0018 00000000 		.4byte	.LFB5
 1308 001c 0E000000 		.4byte	.LFE5
 1309 0020 00000000 		.4byte	.LFB6
 1310 0024 0E000000 		.4byte	.LFE6
 1311 0028 00000000 		.4byte	0
 1312 002c 00000000 		.4byte	0
 1313              		.section	.debug_line,"",%progbits
 1314              	.Ldebug_line0:
 1315 0000 9E010000 		.section	.debug_str,"MS",%progbits,1
 1315      02004400 
 1315      00000201 
 1315      FB0E0D00 
 1315      01010101 
 1316              	.LASF15:
 1317 0000 63797374 		.ascii	"cystatus\000"
 1317      61747573 
 1317      00
 1318              	.LASF16:
 1319 0009 72656733 		.ascii	"reg32\000"
 1319      3200
 1320              	.LASF21:
 1321 000f 72657456 		.ascii	"retValue\000"
 1321      616C7565 
 1321      00
 1322              	.LASF28:
 1323 0018 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1323      43313120 
 1323      352E342E 
 1323      31203230 
 1323      31363036 
 1324 004b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1324      20726576 
 1324      6973696F 
 1324      6E203233 
 1324      37373135 
 1325 007e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 1325      66756E63 
 1325      74696F6E 
 1325      2D736563 
 1325      74696F6E 
 1326 00b1 652D706F 		.ascii	"e-pointer\000"
 1326      696E7465 
 1326      7200
 1327              	.LASF19:
 1328 00bb 726F774E 		.ascii	"rowNum\000"
 1328      756D00
 1329              	.LASF27:
 1330 00c2 43795379 		.ascii	"CySysSFlashWriteUserRow\000"
 1330      7353466C 
 1330      61736857 
 1330      72697465 
 1330      55736572 
 1331              	.LASF3:
 1332 00da 73686F72 		.ascii	"short unsigned int\000"
 1332      7420756E 
 1332      7369676E 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 39


 1332      65642069 
 1332      6E7400
 1333              	.LASF8:
 1334 00ed 756E7369 		.ascii	"unsigned int\000"
 1334      676E6564 
 1334      20696E74 
 1334      00
 1335              	.LASF30:
 1336 00fa 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 1336      726F7062 
 1336      6F785C36 
 1336      5F6B7572 
 1336      735C6469 
 1337 0129 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 1337      41424C45 
 1337      5C424C45 
 1337      5F44796E 
 1337      616D6963 
 1338 015a 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 1338      796E616D 
 1338      69635F47 
 1338      4154545F 
 1338      53657276 
 1339              	.LASF12:
 1340 0186 666C6F61 		.ascii	"float\000"
 1340      7400
 1341              	.LASF1:
 1342 018c 756E7369 		.ascii	"unsigned char\000"
 1342      676E6564 
 1342      20636861 
 1342      7200
 1343              	.LASF20:
 1344 019a 726F7744 		.ascii	"rowData\000"
 1344      61746100 
 1345              	.LASF23:
 1346 01a2 70617261 		.ascii	"parameters\000"
 1346      6D657465 
 1346      727300
 1347              	.LASF5:
 1348 01ad 6C6F6E67 		.ascii	"long unsigned int\000"
 1348      20756E73 
 1348      69676E65 
 1348      6420696E 
 1348      7400
 1349              	.LASF9:
 1350 01bf 75696E74 		.ascii	"uint8\000"
 1350      3800
 1351              	.LASF13:
 1352 01c5 646F7562 		.ascii	"double\000"
 1352      6C6500
 1353              	.LASF2:
 1354 01cc 73686F72 		.ascii	"short int\000"
 1354      7420696E 
 1354      7400
 1355              	.LASF10:
 1356 01d6 75696E74 		.ascii	"uint16\000"
 1356      313600
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 40


 1357              	.LASF11:
 1358 01dd 75696E74 		.ascii	"uint32\000"
 1358      333200
 1359              	.LASF29:
 1360 01e4 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyFlash.c\000"
 1360      72617465 
 1360      645F536F 
 1360      75726365 
 1360      5C50536F 
 1361              	.LASF7:
 1362 0205 6C6F6E67 		.ascii	"long long unsigned int\000"
 1362      206C6F6E 
 1362      6720756E 
 1362      7369676E 
 1362      65642069 
 1363              	.LASF24:
 1364 021c 696E7465 		.ascii	"interruptState\000"
 1364      72727570 
 1364      74537461 
 1364      746500
 1365              	.LASF18:
 1366 022b 73697A65 		.ascii	"sizetype\000"
 1366      74797065 
 1366      00
 1367              	.LASF6:
 1368 0234 6C6F6E67 		.ascii	"long long int\000"
 1368      206C6F6E 
 1368      6720696E 
 1368      7400
 1369              	.LASF14:
 1370 0242 63686172 		.ascii	"char\000"
 1370      00
 1371              	.LASF25:
 1372 0247 66726571 		.ascii	"freq\000"
 1372      00
 1373              	.LASF22:
 1374 024c 636C6B43 		.ascii	"clkCnfRetValue\000"
 1374      6E665265 
 1374      7456616C 
 1374      756500
 1375              	.LASF33:
 1376 025b 43795379 		.ascii	"CySysFlashClockRestore\000"
 1376      73466C61 
 1376      7368436C 
 1376      6F636B52 
 1376      6573746F 
 1377              	.LASF32:
 1378 0272 43795379 		.ascii	"CySysFlashClockBackup\000"
 1378      73466C61 
 1378      7368436C 
 1378      6F636B42 
 1378      61636B75 
 1379              	.LASF4:
 1380 0288 6C6F6E67 		.ascii	"long int\000"
 1380      20696E74 
 1380      00
 1381              	.LASF17:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsFk6qM.s 			page 41


 1382 0291 6C6F6E67 		.ascii	"long double\000"
 1382      20646F75 
 1382      626C6500 
 1383              	.LASF0:
 1384 029d 7369676E 		.ascii	"signed char\000"
 1384      65642063 
 1384      68617200 
 1385              	.LASF26:
 1386 02a9 43795379 		.ascii	"CySysFlashWriteRow\000"
 1386      73466C61 
 1386      73685772 
 1386      69746552 
 1386      6F7700
 1387              	.LASF31:
 1388 02bc 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1388      73466C61 
 1388      73685365 
 1388      74576169 
 1388      74437963 
 1389              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
