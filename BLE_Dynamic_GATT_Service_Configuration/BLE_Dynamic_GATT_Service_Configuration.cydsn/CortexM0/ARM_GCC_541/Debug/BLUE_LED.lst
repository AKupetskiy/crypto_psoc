ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"BLUE_LED.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.BLUE_LED_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	BLUE_LED_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	BLUE_LED_SetDriveMode, %function
  25              	BLUE_LED_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\BLUE_LED.c"
   1:Generated_Source\PSoC4/BLUE_LED.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/BLUE_LED.c **** * File Name: BLUE_LED.c  
   3:Generated_Source\PSoC4/BLUE_LED.c **** * Version 2.20
   4:Generated_Source\PSoC4/BLUE_LED.c **** *
   5:Generated_Source\PSoC4/BLUE_LED.c **** * Description:
   6:Generated_Source\PSoC4/BLUE_LED.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/BLUE_LED.c **** *
   8:Generated_Source\PSoC4/BLUE_LED.c **** ********************************************************************************
   9:Generated_Source\PSoC4/BLUE_LED.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/BLUE_LED.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/BLUE_LED.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/BLUE_LED.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/BLUE_LED.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/BLUE_LED.c **** 
  15:Generated_Source\PSoC4/BLUE_LED.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/BLUE_LED.c **** #include "BLUE_LED.h"
  17:Generated_Source\PSoC4/BLUE_LED.c **** 
  18:Generated_Source\PSoC4/BLUE_LED.c **** 
  19:Generated_Source\PSoC4/BLUE_LED.c **** #if defined(BLUE_LED__PC)
  20:Generated_Source\PSoC4/BLUE_LED.c ****     #define BLUE_LED_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/BLUE_LED.c ****     do { \
  22:Generated_Source\PSoC4/BLUE_LED.c ****         BLUE_LED_PC =   (BLUE_LED_PC & \
  23:Generated_Source\PSoC4/BLUE_LED.c ****                                 (uint32)(~(uint32)(BLUE_LED_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/BLUE_LED.c ****                                 (BLUE_LED_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/BLUE_LED.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/BLUE_LED.c ****                                 (BLUE_LED_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/BLUE_LED.c ****     } while (0)
  28:Generated_Source\PSoC4/BLUE_LED.c **** #else
  29:Generated_Source\PSoC4/BLUE_LED.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/BLUE_LED.c ****         #define BLUE_LED_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 2


  31:Generated_Source\PSoC4/BLUE_LED.c ****         do { \
  32:Generated_Source\PSoC4/BLUE_LED.c ****             BLUE_LED_USBIO_CTRL_REG = (BLUE_LED_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/BLUE_LED.c ****                                     (uint32)(~(uint32)(BLUE_LED_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/BLUE_LED.c ****                                     (BLUE_LED_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/BLUE_LED.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/BLUE_LED.c ****                                     (BLUE_LED_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/BLUE_LED.c ****         } while (0)
  38:Generated_Source\PSoC4/BLUE_LED.c ****     #endif
  39:Generated_Source\PSoC4/BLUE_LED.c **** #endif
  40:Generated_Source\PSoC4/BLUE_LED.c ****   
  41:Generated_Source\PSoC4/BLUE_LED.c **** 
  42:Generated_Source\PSoC4/BLUE_LED.c **** #if defined(BLUE_LED__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/BLUE_LED.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/BLUE_LED.c ****     * Function Name: BLUE_LED_SetDriveMode
  45:Generated_Source\PSoC4/BLUE_LED.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/BLUE_LED.c ****     *
  47:Generated_Source\PSoC4/BLUE_LED.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/BLUE_LED.c ****     * 
  49:Generated_Source\PSoC4/BLUE_LED.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/BLUE_LED.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/BLUE_LED.c ****     *
  52:Generated_Source\PSoC4/BLUE_LED.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/BLUE_LED.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/BLUE_LED.c ****     *
  55:Generated_Source\PSoC4/BLUE_LED.c ****     * \param mode
  56:Generated_Source\PSoC4/BLUE_LED.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/BLUE_LED.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/BLUE_LED.c ****     *
  59:Generated_Source\PSoC4/BLUE_LED.c ****     * \return
  60:Generated_Source\PSoC4/BLUE_LED.c ****     *  None
  61:Generated_Source\PSoC4/BLUE_LED.c ****     *
  62:Generated_Source\PSoC4/BLUE_LED.c ****     * \sideeffect
  63:Generated_Source\PSoC4/BLUE_LED.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/BLUE_LED.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/BLUE_LED.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/BLUE_LED.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/BLUE_LED.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/BLUE_LED.c ****     *
  69:Generated_Source\PSoC4/BLUE_LED.c ****     * \funcusage
  70:Generated_Source\PSoC4/BLUE_LED.c ****     *  \snippet BLUE_LED_SUT.c usage_BLUE_LED_SetDriveMode
  71:Generated_Source\PSoC4/BLUE_LED.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/BLUE_LED.c ****     void BLUE_LED_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/BLUE_LED.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
  35 0002 0200     		movs	r2, r0
  36 0004 6B46     		mov	r3, sp
  37 0006 0733     		adds	r3, r3, #7
  38 0008 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/BLUE_LED.c **** 		BLUE_LED_SetP4PinDriveMode(BLUE_LED__0__SHIFT, mode);
  39              		.loc 1 74 0
  40 000a 074B     		ldr	r3, .L2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 3


  41 000c 064A     		ldr	r2, .L2
  42 000e 1268     		ldr	r2, [r2]
  43 0010 0649     		ldr	r1, .L2+4
  44 0012 1140     		ands	r1, r2
  45 0014 6A46     		mov	r2, sp
  46 0016 0732     		adds	r2, r2, #7
  47 0018 1278     		ldrb	r2, [r2]
  48 001a 5205     		lsls	r2, r2, #21
  49 001c 0A43     		orrs	r2, r1
  50 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/BLUE_LED.c ****     }
  51              		.loc 1 75 0
  52 0020 C046     		nop
  53 0022 02B0     		add	sp, sp, #8
  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 08030440 		.word	1074004744
  60 002c FFFF1FFF 		.word	-14680065
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	BLUE_LED_SetDriveMode, .-BLUE_LED_SetDriveMode
  64              		.section	.text.BLUE_LED_Write,"ax",%progbits
  65              		.align	2
  66              		.global	BLUE_LED_Write
  67              		.code	16
  68              		.thumb_func
  69              		.type	BLUE_LED_Write, %function
  70              	BLUE_LED_Write:
  71              	.LFB1:
  76:Generated_Source\PSoC4/BLUE_LED.c **** #endif
  77:Generated_Source\PSoC4/BLUE_LED.c **** 
  78:Generated_Source\PSoC4/BLUE_LED.c **** 
  79:Generated_Source\PSoC4/BLUE_LED.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/BLUE_LED.c **** * Function Name: BLUE_LED_Write
  81:Generated_Source\PSoC4/BLUE_LED.c **** ****************************************************************************//**
  82:Generated_Source\PSoC4/BLUE_LED.c **** *
  83:Generated_Source\PSoC4/BLUE_LED.c **** * \brief Writes the value to the physical port (data output register), masking
  84:Generated_Source\PSoC4/BLUE_LED.c **** *  and shifting the bits appropriately. 
  85:Generated_Source\PSoC4/BLUE_LED.c **** *
  86:Generated_Source\PSoC4/BLUE_LED.c **** * The data output register controls the signal applied to the physical pin in 
  87:Generated_Source\PSoC4/BLUE_LED.c **** * conjunction with the drive mode parameter. This function avoids changing 
  88:Generated_Source\PSoC4/BLUE_LED.c **** * other bits in the port by using the appropriate method (read-modify-write or
  89:Generated_Source\PSoC4/BLUE_LED.c **** * bit banding).
  90:Generated_Source\PSoC4/BLUE_LED.c **** *
  91:Generated_Source\PSoC4/BLUE_LED.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  92:Generated_Source\PSoC4/BLUE_LED.c **** * as it is driven by the hardware signal attached to it.
  93:Generated_Source\PSoC4/BLUE_LED.c **** *
  94:Generated_Source\PSoC4/BLUE_LED.c **** * \param value
  95:Generated_Source\PSoC4/BLUE_LED.c **** *  Value to write to the component instance.
  96:Generated_Source\PSoC4/BLUE_LED.c **** *
  97:Generated_Source\PSoC4/BLUE_LED.c **** * \return 
  98:Generated_Source\PSoC4/BLUE_LED.c **** *  None 
  99:Generated_Source\PSoC4/BLUE_LED.c **** *
 100:Generated_Source\PSoC4/BLUE_LED.c **** * \sideeffect
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 4


 101:Generated_Source\PSoC4/BLUE_LED.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 102:Generated_Source\PSoC4/BLUE_LED.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 103:Generated_Source\PSoC4/BLUE_LED.c **** *  interrupts this function and performs writes to the Pins component data 
 104:Generated_Source\PSoC4/BLUE_LED.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 105:Generated_Source\PSoC4/BLUE_LED.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 106:Generated_Source\PSoC4/BLUE_LED.c **** *  this function.
 107:Generated_Source\PSoC4/BLUE_LED.c **** *
 108:Generated_Source\PSoC4/BLUE_LED.c **** * \funcusage
 109:Generated_Source\PSoC4/BLUE_LED.c **** *  \snippet BLUE_LED_SUT.c usage_BLUE_LED_Write
 110:Generated_Source\PSoC4/BLUE_LED.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/BLUE_LED.c **** void BLUE_LED_Write(uint8 value)
 112:Generated_Source\PSoC4/BLUE_LED.c **** {
  72              		.loc 1 112 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 84B0     		sub	sp, sp, #16
  78              		.cfi_def_cfa_offset 16
  79 0002 0200     		movs	r2, r0
  80 0004 6B46     		mov	r3, sp
  81 0006 0733     		adds	r3, r3, #7
  82 0008 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC4/BLUE_LED.c ****     uint8 drVal = (uint8)(BLUE_LED_DR & (uint8)(~BLUE_LED_MASK));
  83              		.loc 1 113 0
  84 000a 0E4B     		ldr	r3, .L5
  85 000c 1B68     		ldr	r3, [r3]
  86 000e DAB2     		uxtb	r2, r3
  87 0010 0F23     		movs	r3, #15
  88 0012 6B44     		add	r3, r3, sp
  89 0014 7F21     		movs	r1, #127
  90 0016 0A40     		ands	r2, r1
  91 0018 1A70     		strb	r2, [r3]
 114:Generated_Source\PSoC4/BLUE_LED.c ****     drVal = (drVal | ((uint8)(value << BLUE_LED_SHIFT) & BLUE_LED_MASK));
  92              		.loc 1 114 0
  93 001a 6B46     		mov	r3, sp
  94 001c 0733     		adds	r3, r3, #7
  95 001e 1B78     		ldrb	r3, [r3]
  96 0020 DB01     		lsls	r3, r3, #7
  97 0022 D9B2     		uxtb	r1, r3
  98 0024 0F23     		movs	r3, #15
  99 0026 6B44     		add	r3, r3, sp
 100 0028 0F22     		movs	r2, #15
 101 002a 6A44     		add	r2, r2, sp
 102 002c 1278     		ldrb	r2, [r2]
 103 002e 0A43     		orrs	r2, r1
 104 0030 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/BLUE_LED.c ****     BLUE_LED_DR = (uint32)drVal;
 105              		.loc 1 115 0
 106 0032 044B     		ldr	r3, .L5
 107 0034 0F22     		movs	r2, #15
 108 0036 6A44     		add	r2, r2, sp
 109 0038 1278     		ldrb	r2, [r2]
 110 003a 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/BLUE_LED.c **** }
 111              		.loc 1 116 0
 112 003c C046     		nop
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 5


 113 003e 04B0     		add	sp, sp, #16
 114              		@ sp needed
 115 0040 7047     		bx	lr
 116              	.L6:
 117 0042 C046     		.align	2
 118              	.L5:
 119 0044 00030440 		.word	1074004736
 120              		.cfi_endproc
 121              	.LFE1:
 122              		.size	BLUE_LED_Write, .-BLUE_LED_Write
 123              		.section	.text.BLUE_LED_Read,"ax",%progbits
 124              		.align	2
 125              		.global	BLUE_LED_Read
 126              		.code	16
 127              		.thumb_func
 128              		.type	BLUE_LED_Read, %function
 129              	BLUE_LED_Read:
 130              	.LFB2:
 117:Generated_Source\PSoC4/BLUE_LED.c **** 
 118:Generated_Source\PSoC4/BLUE_LED.c **** 
 119:Generated_Source\PSoC4/BLUE_LED.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/BLUE_LED.c **** * Function Name: BLUE_LED_Read
 121:Generated_Source\PSoC4/BLUE_LED.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/BLUE_LED.c **** *
 123:Generated_Source\PSoC4/BLUE_LED.c **** * \brief Reads the associated physical port (pin status register) and masks 
 124:Generated_Source\PSoC4/BLUE_LED.c **** *  the required bits according to the width and bit position of the component
 125:Generated_Source\PSoC4/BLUE_LED.c **** *  instance. 
 126:Generated_Source\PSoC4/BLUE_LED.c **** *
 127:Generated_Source\PSoC4/BLUE_LED.c **** * The pin's status register returns the current logic level present on the 
 128:Generated_Source\PSoC4/BLUE_LED.c **** * physical pin.
 129:Generated_Source\PSoC4/BLUE_LED.c **** *
 130:Generated_Source\PSoC4/BLUE_LED.c **** * \return 
 131:Generated_Source\PSoC4/BLUE_LED.c **** *  The current value for the pins in the component as a right justified number.
 132:Generated_Source\PSoC4/BLUE_LED.c **** *
 133:Generated_Source\PSoC4/BLUE_LED.c **** * \funcusage
 134:Generated_Source\PSoC4/BLUE_LED.c **** *  \snippet BLUE_LED_SUT.c usage_BLUE_LED_Read  
 135:Generated_Source\PSoC4/BLUE_LED.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/BLUE_LED.c **** uint8 BLUE_LED_Read(void)
 137:Generated_Source\PSoC4/BLUE_LED.c **** {
 131              		.loc 1 137 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 138:Generated_Source\PSoC4/BLUE_LED.c ****     return (uint8)((BLUE_LED_PS & BLUE_LED_MASK) >> BLUE_LED_SHIFT);
 136              		.loc 1 138 0
 137 0000 034B     		ldr	r3, .L9
 138 0002 1B68     		ldr	r3, [r3]
 139 0004 8022     		movs	r2, #128
 140 0006 1340     		ands	r3, r2
 141 0008 DB09     		lsrs	r3, r3, #7
 142 000a DBB2     		uxtb	r3, r3
 139:Generated_Source\PSoC4/BLUE_LED.c **** }
 143              		.loc 1 139 0
 144 000c 1800     		movs	r0, r3
 145              		@ sp needed
 146 000e 7047     		bx	lr
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 6


 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0010 04030440 		.word	1074004740
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	BLUE_LED_Read, .-BLUE_LED_Read
 154              		.section	.text.BLUE_LED_ReadDataReg,"ax",%progbits
 155              		.align	2
 156              		.global	BLUE_LED_ReadDataReg
 157              		.code	16
 158              		.thumb_func
 159              		.type	BLUE_LED_ReadDataReg, %function
 160              	BLUE_LED_ReadDataReg:
 161              	.LFB3:
 140:Generated_Source\PSoC4/BLUE_LED.c **** 
 141:Generated_Source\PSoC4/BLUE_LED.c **** 
 142:Generated_Source\PSoC4/BLUE_LED.c **** /*******************************************************************************
 143:Generated_Source\PSoC4/BLUE_LED.c **** * Function Name: BLUE_LED_ReadDataReg
 144:Generated_Source\PSoC4/BLUE_LED.c **** ****************************************************************************//**
 145:Generated_Source\PSoC4/BLUE_LED.c **** *
 146:Generated_Source\PSoC4/BLUE_LED.c **** * \brief Reads the associated physical port's data output register and masks 
 147:Generated_Source\PSoC4/BLUE_LED.c **** *  the correct bits according to the width and bit position of the component 
 148:Generated_Source\PSoC4/BLUE_LED.c **** *  instance. 
 149:Generated_Source\PSoC4/BLUE_LED.c **** *
 150:Generated_Source\PSoC4/BLUE_LED.c **** * The data output register controls the signal applied to the physical pin in 
 151:Generated_Source\PSoC4/BLUE_LED.c **** * conjunction with the drive mode parameter. This is not the same as the 
 152:Generated_Source\PSoC4/BLUE_LED.c **** * preferred BLUE_LED_Read() API because the 
 153:Generated_Source\PSoC4/BLUE_LED.c **** * BLUE_LED_ReadDataReg() reads the data register instead of the status 
 154:Generated_Source\PSoC4/BLUE_LED.c **** * register. For output pins this is a useful function to determine the value 
 155:Generated_Source\PSoC4/BLUE_LED.c **** * just written to the pin.
 156:Generated_Source\PSoC4/BLUE_LED.c **** *
 157:Generated_Source\PSoC4/BLUE_LED.c **** * \return 
 158:Generated_Source\PSoC4/BLUE_LED.c **** *  The current value of the data register masked and shifted into a right 
 159:Generated_Source\PSoC4/BLUE_LED.c **** *  justified number for the component instance.
 160:Generated_Source\PSoC4/BLUE_LED.c **** *
 161:Generated_Source\PSoC4/BLUE_LED.c **** * \funcusage
 162:Generated_Source\PSoC4/BLUE_LED.c **** *  \snippet BLUE_LED_SUT.c usage_BLUE_LED_ReadDataReg 
 163:Generated_Source\PSoC4/BLUE_LED.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/BLUE_LED.c **** uint8 BLUE_LED_ReadDataReg(void)
 165:Generated_Source\PSoC4/BLUE_LED.c **** {
 162              		.loc 1 165 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 166:Generated_Source\PSoC4/BLUE_LED.c ****     return (uint8)((BLUE_LED_DR & BLUE_LED_MASK) >> BLUE_LED_SHIFT);
 167              		.loc 1 166 0
 168 0000 034B     		ldr	r3, .L13
 169 0002 1B68     		ldr	r3, [r3]
 170 0004 8022     		movs	r2, #128
 171 0006 1340     		ands	r3, r2
 172 0008 DB09     		lsrs	r3, r3, #7
 173 000a DBB2     		uxtb	r3, r3
 167:Generated_Source\PSoC4/BLUE_LED.c **** }
 174              		.loc 1 167 0
 175 000c 1800     		movs	r0, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 7


 176              		@ sp needed
 177 000e 7047     		bx	lr
 178              	.L14:
 179              		.align	2
 180              	.L13:
 181 0010 00030440 		.word	1074004736
 182              		.cfi_endproc
 183              	.LFE3:
 184              		.size	BLUE_LED_ReadDataReg, .-BLUE_LED_ReadDataReg
 185              		.section	.text.BLUE_LED_SetInterruptMode,"ax",%progbits
 186              		.align	2
 187              		.global	BLUE_LED_SetInterruptMode
 188              		.code	16
 189              		.thumb_func
 190              		.type	BLUE_LED_SetInterruptMode, %function
 191              	BLUE_LED_SetInterruptMode:
 192              	.LFB4:
 168:Generated_Source\PSoC4/BLUE_LED.c **** 
 169:Generated_Source\PSoC4/BLUE_LED.c **** 
 170:Generated_Source\PSoC4/BLUE_LED.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/BLUE_LED.c **** * Function Name: BLUE_LED_SetInterruptMode
 172:Generated_Source\PSoC4/BLUE_LED.c **** ****************************************************************************//**
 173:Generated_Source\PSoC4/BLUE_LED.c **** *
 174:Generated_Source\PSoC4/BLUE_LED.c **** * \brief Configures the interrupt mode for each of the Pins component's
 175:Generated_Source\PSoC4/BLUE_LED.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 176:Generated_Source\PSoC4/BLUE_LED.c **** *  specified in the Pins component.
 177:Generated_Source\PSoC4/BLUE_LED.c **** *
 178:Generated_Source\PSoC4/BLUE_LED.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 179:Generated_Source\PSoC4/BLUE_LED.c **** *  interrupt may trigger it.
 180:Generated_Source\PSoC4/BLUE_LED.c **** *
 181:Generated_Source\PSoC4/BLUE_LED.c **** * \param position
 182:Generated_Source\PSoC4/BLUE_LED.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 183:Generated_Source\PSoC4/BLUE_LED.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 184:Generated_Source\PSoC4/BLUE_LED.c **** *  component. Or you may use BLUE_LED_INTR_ALL to configure the
 185:Generated_Source\PSoC4/BLUE_LED.c **** *  interrupt mode of all the pins in the Pins component.       
 186:Generated_Source\PSoC4/BLUE_LED.c **** *  - BLUE_LED_0_INTR       (First pin in the list)
 187:Generated_Source\PSoC4/BLUE_LED.c **** *  - BLUE_LED_1_INTR       (Second pin in the list)
 188:Generated_Source\PSoC4/BLUE_LED.c **** *  - ...
 189:Generated_Source\PSoC4/BLUE_LED.c **** *  - BLUE_LED_INTR_ALL     (All pins in Pins component)
 190:Generated_Source\PSoC4/BLUE_LED.c **** *
 191:Generated_Source\PSoC4/BLUE_LED.c **** * \param mode
 192:Generated_Source\PSoC4/BLUE_LED.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 193:Generated_Source\PSoC4/BLUE_LED.c **** *  \ref intrMode.
 194:Generated_Source\PSoC4/BLUE_LED.c **** *
 195:Generated_Source\PSoC4/BLUE_LED.c **** * \return 
 196:Generated_Source\PSoC4/BLUE_LED.c **** *  None
 197:Generated_Source\PSoC4/BLUE_LED.c **** *  
 198:Generated_Source\PSoC4/BLUE_LED.c **** * \sideeffect
 199:Generated_Source\PSoC4/BLUE_LED.c **** *  It is recommended that the interrupt be disabled before calling this 
 200:Generated_Source\PSoC4/BLUE_LED.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 201:Generated_Source\PSoC4/BLUE_LED.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 202:Generated_Source\PSoC4/BLUE_LED.c **** *  port.
 203:Generated_Source\PSoC4/BLUE_LED.c **** *
 204:Generated_Source\PSoC4/BLUE_LED.c **** * \funcusage
 205:Generated_Source\PSoC4/BLUE_LED.c **** *  \snippet BLUE_LED_SUT.c usage_BLUE_LED_SetInterruptMode
 206:Generated_Source\PSoC4/BLUE_LED.c **** *******************************************************************************/
 207:Generated_Source\PSoC4/BLUE_LED.c **** void BLUE_LED_SetInterruptMode(uint16 position, uint16 mode)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 8


 208:Generated_Source\PSoC4/BLUE_LED.c **** {
 193              		.loc 1 208 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 16
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198 0000 84B0     		sub	sp, sp, #16
 199              		.cfi_def_cfa_offset 16
 200 0002 0200     		movs	r2, r0
 201 0004 6B46     		mov	r3, sp
 202 0006 0633     		adds	r3, r3, #6
 203 0008 1A80     		strh	r2, [r3]
 204 000a 01AB     		add	r3, sp, #4
 205 000c 0A1C     		adds	r2, r1, #0
 206 000e 1A80     		strh	r2, [r3]
 209:Generated_Source\PSoC4/BLUE_LED.c ****     uint32 intrCfg;
 210:Generated_Source\PSoC4/BLUE_LED.c ****     
 211:Generated_Source\PSoC4/BLUE_LED.c ****     intrCfg =  BLUE_LED_INTCFG & (uint32)(~(uint32)position);
 207              		.loc 1 211 0
 208 0010 0B4B     		ldr	r3, .L16
 209 0012 1B68     		ldr	r3, [r3]
 210 0014 6A46     		mov	r2, sp
 211 0016 0632     		adds	r2, r2, #6
 212 0018 1288     		ldrh	r2, [r2]
 213 001a D243     		mvns	r2, r2
 214 001c 1340     		ands	r3, r2
 215 001e 0393     		str	r3, [sp, #12]
 212:Generated_Source\PSoC4/BLUE_LED.c ****     BLUE_LED_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 216              		.loc 1 212 0
 217 0020 074B     		ldr	r3, .L16
 218 0022 6A46     		mov	r2, sp
 219 0024 0632     		adds	r2, r2, #6
 220 0026 01A9     		add	r1, sp, #4
 221 0028 1288     		ldrh	r2, [r2]
 222 002a 0988     		ldrh	r1, [r1]
 223 002c 0A40     		ands	r2, r1
 224 002e 92B2     		uxth	r2, r2
 225 0030 1100     		movs	r1, r2
 226 0032 039A     		ldr	r2, [sp, #12]
 227 0034 0A43     		orrs	r2, r1
 228 0036 1A60     		str	r2, [r3]
 213:Generated_Source\PSoC4/BLUE_LED.c **** }
 229              		.loc 1 213 0
 230 0038 C046     		nop
 231 003a 04B0     		add	sp, sp, #16
 232              		@ sp needed
 233 003c 7047     		bx	lr
 234              	.L17:
 235 003e C046     		.align	2
 236              	.L16:
 237 0040 0C030440 		.word	1074004748
 238              		.cfi_endproc
 239              	.LFE4:
 240              		.size	BLUE_LED_SetInterruptMode, .-BLUE_LED_SetInterruptMode
 241              		.section	.text.BLUE_LED_ClearInterrupt,"ax",%progbits
 242              		.align	2
 243              		.global	BLUE_LED_ClearInterrupt
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 9


 244              		.code	16
 245              		.thumb_func
 246              		.type	BLUE_LED_ClearInterrupt, %function
 247              	BLUE_LED_ClearInterrupt:
 248              	.LFB5:
 214:Generated_Source\PSoC4/BLUE_LED.c **** 
 215:Generated_Source\PSoC4/BLUE_LED.c **** 
 216:Generated_Source\PSoC4/BLUE_LED.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/BLUE_LED.c **** * Function Name: BLUE_LED_ClearInterrupt
 218:Generated_Source\PSoC4/BLUE_LED.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/BLUE_LED.c **** *
 220:Generated_Source\PSoC4/BLUE_LED.c **** * \brief Clears any active interrupts attached with the component and returns 
 221:Generated_Source\PSoC4/BLUE_LED.c **** *  the value of the interrupt status register allowing determination of which
 222:Generated_Source\PSoC4/BLUE_LED.c **** *  pins generated an interrupt event.
 223:Generated_Source\PSoC4/BLUE_LED.c **** *
 224:Generated_Source\PSoC4/BLUE_LED.c **** * \return 
 225:Generated_Source\PSoC4/BLUE_LED.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 226:Generated_Source\PSoC4/BLUE_LED.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 227:Generated_Source\PSoC4/BLUE_LED.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 228:Generated_Source\PSoC4/BLUE_LED.c **** *  
 229:Generated_Source\PSoC4/BLUE_LED.c **** * \sideeffect
 230:Generated_Source\PSoC4/BLUE_LED.c **** *  Clears all bits of the physical port's interrupt status register, not just
 231:Generated_Source\PSoC4/BLUE_LED.c **** *  those associated with the Pins component.
 232:Generated_Source\PSoC4/BLUE_LED.c **** *
 233:Generated_Source\PSoC4/BLUE_LED.c **** * \funcusage
 234:Generated_Source\PSoC4/BLUE_LED.c **** *  \snippet BLUE_LED_SUT.c usage_BLUE_LED_ClearInterrupt
 235:Generated_Source\PSoC4/BLUE_LED.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/BLUE_LED.c **** uint8 BLUE_LED_ClearInterrupt(void)
 237:Generated_Source\PSoC4/BLUE_LED.c **** {
 249              		.loc 1 237 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 82B0     		sub	sp, sp, #8
 255              		.cfi_def_cfa_offset 8
 238:Generated_Source\PSoC4/BLUE_LED.c **** 	uint8 maskedStatus = (uint8)(BLUE_LED_INTSTAT & BLUE_LED_MASK);
 256              		.loc 1 238 0
 257 0002 0A4B     		ldr	r3, .L20
 258 0004 1B68     		ldr	r3, [r3]
 259 0006 DAB2     		uxtb	r2, r3
 260 0008 6B46     		mov	r3, sp
 261 000a 0733     		adds	r3, r3, #7
 262 000c 7F21     		movs	r1, #127
 263 000e 8A43     		bics	r2, r1
 264 0010 1A70     		strb	r2, [r3]
 239:Generated_Source\PSoC4/BLUE_LED.c **** 	BLUE_LED_INTSTAT = maskedStatus;
 265              		.loc 1 239 0
 266 0012 064B     		ldr	r3, .L20
 267 0014 6A46     		mov	r2, sp
 268 0016 0732     		adds	r2, r2, #7
 269 0018 1278     		ldrb	r2, [r2]
 270 001a 1A60     		str	r2, [r3]
 240:Generated_Source\PSoC4/BLUE_LED.c ****     return maskedStatus >> BLUE_LED_SHIFT;
 271              		.loc 1 240 0
 272 001c 6B46     		mov	r3, sp
 273 001e 0733     		adds	r3, r3, #7
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 10


 274 0020 1B78     		ldrb	r3, [r3]
 275 0022 DB09     		lsrs	r3, r3, #7
 276 0024 DBB2     		uxtb	r3, r3
 241:Generated_Source\PSoC4/BLUE_LED.c **** }
 277              		.loc 1 241 0
 278 0026 1800     		movs	r0, r3
 279 0028 02B0     		add	sp, sp, #8
 280              		@ sp needed
 281 002a 7047     		bx	lr
 282              	.L21:
 283              		.align	2
 284              	.L20:
 285 002c 10030440 		.word	1074004752
 286              		.cfi_endproc
 287              	.LFE5:
 288              		.size	BLUE_LED_ClearInterrupt, .-BLUE_LED_ClearInterrupt
 289              		.text
 290              	.Letext0:
 291              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 292              		.section	.debug_info,"",%progbits
 293              	.Ldebug_info0:
 294 0000 96010000 		.4byte	0x196
 295 0004 0400     		.2byte	0x4
 296 0006 00000000 		.4byte	.Ldebug_abbrev0
 297 000a 04       		.byte	0x4
 298 000b 01       		.uleb128 0x1
 299 000c 06000000 		.4byte	.LASF28
 300 0010 0C       		.byte	0xc
 301 0011 57020000 		.4byte	.LASF29
 302 0015 C9000000 		.4byte	.LASF30
 303 0019 00000000 		.4byte	.Ldebug_ranges0+0
 304 001d 00000000 		.4byte	0
 305 0021 00000000 		.4byte	.Ldebug_line0
 306 0025 02       		.uleb128 0x2
 307 0026 01       		.byte	0x1
 308 0027 06       		.byte	0x6
 309 0028 88020000 		.4byte	.LASF0
 310 002c 02       		.uleb128 0x2
 311 002d 01       		.byte	0x1
 312 002e 08       		.byte	0x8
 313 002f 82010000 		.4byte	.LASF1
 314 0033 02       		.uleb128 0x2
 315 0034 02       		.byte	0x2
 316 0035 05       		.byte	0x5
 317 0036 4D020000 		.4byte	.LASF2
 318 003a 02       		.uleb128 0x2
 319 003b 02       		.byte	0x2
 320 003c 07       		.byte	0x7
 321 003d A8010000 		.4byte	.LASF3
 322 0041 02       		.uleb128 0x2
 323 0042 04       		.byte	0x4
 324 0043 05       		.byte	0x5
 325 0044 7F020000 		.4byte	.LASF4
 326 0048 02       		.uleb128 0x2
 327 0049 04       		.byte	0x4
 328 004a 07       		.byte	0x7
 329 004b 96010000 		.4byte	.LASF5
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 11


 330 004f 02       		.uleb128 0x2
 331 0050 08       		.byte	0x8
 332 0051 05       		.byte	0x5
 333 0052 2D020000 		.4byte	.LASF6
 334 0056 02       		.uleb128 0x2
 335 0057 08       		.byte	0x8
 336 0058 07       		.byte	0x7
 337 0059 11020000 		.4byte	.LASF7
 338 005d 03       		.uleb128 0x3
 339 005e 04       		.byte	0x4
 340 005f 05       		.byte	0x5
 341 0060 696E7400 		.ascii	"int\000"
 342 0064 02       		.uleb128 0x2
 343 0065 04       		.byte	0x4
 344 0066 07       		.byte	0x7
 345 0067 04020000 		.4byte	.LASF8
 346 006b 04       		.uleb128 0x4
 347 006c 79020000 		.4byte	.LASF9
 348 0070 02       		.byte	0x2
 349 0071 D201     		.2byte	0x1d2
 350 0073 2C000000 		.4byte	0x2c
 351 0077 04       		.uleb128 0x4
 352 0078 D7010000 		.4byte	.LASF10
 353 007c 02       		.byte	0x2
 354 007d D301     		.2byte	0x1d3
 355 007f 3A000000 		.4byte	0x3a
 356 0083 04       		.uleb128 0x4
 357 0084 E7010000 		.4byte	.LASF11
 358 0088 02       		.byte	0x2
 359 0089 D401     		.2byte	0x1d4
 360 008b 48000000 		.4byte	0x48
 361 008f 02       		.uleb128 0x2
 362 0090 04       		.byte	0x4
 363 0091 04       		.byte	0x4
 364 0092 7C010000 		.4byte	.LASF12
 365 0096 02       		.uleb128 0x2
 366 0097 08       		.byte	0x8
 367 0098 04       		.byte	0x4
 368 0099 D0010000 		.4byte	.LASF13
 369 009d 02       		.uleb128 0x2
 370 009e 01       		.byte	0x1
 371 009f 08       		.byte	0x8
 372 00a0 48020000 		.4byte	.LASF14
 373 00a4 04       		.uleb128 0x4
 374 00a5 00000000 		.4byte	.LASF15
 375 00a9 02       		.byte	0x2
 376 00aa 7E02     		.2byte	0x27e
 377 00ac B0000000 		.4byte	0xb0
 378 00b0 05       		.uleb128 0x5
 379 00b1 83000000 		.4byte	0x83
 380 00b5 06       		.uleb128 0x6
 381 00b6 94020000 		.4byte	.LASF16
 382 00ba 01       		.byte	0x1
 383 00bb 48       		.byte	0x48
 384 00bc 00000000 		.4byte	.LFB0
 385 00c0 30000000 		.4byte	.LFE0-.LFB0
 386 00c4 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 12


 387 00c5 9C       		.byte	0x9c
 388 00c6 D9000000 		.4byte	0xd9
 389 00ca 07       		.uleb128 0x7
 390 00cb 28020000 		.4byte	.LASF18
 391 00cf 01       		.byte	0x1
 392 00d0 48       		.byte	0x48
 393 00d1 6B000000 		.4byte	0x6b
 394 00d5 02       		.uleb128 0x2
 395 00d6 91       		.byte	0x91
 396 00d7 7F       		.sleb128 -1
 397 00d8 00       		.byte	0
 398 00d9 06       		.uleb128 0x6
 399 00da 55010000 		.4byte	.LASF17
 400 00de 01       		.byte	0x1
 401 00df 6F       		.byte	0x6f
 402 00e0 00000000 		.4byte	.LFB1
 403 00e4 48000000 		.4byte	.LFE1-.LFB1
 404 00e8 01       		.uleb128 0x1
 405 00e9 9C       		.byte	0x9c
 406 00ea 0B010000 		.4byte	0x10b
 407 00ee 07       		.uleb128 0x7
 408 00ef A9000000 		.4byte	.LASF19
 409 00f3 01       		.byte	0x1
 410 00f4 6F       		.byte	0x6f
 411 00f5 6B000000 		.4byte	0x6b
 412 00f9 02       		.uleb128 0x2
 413 00fa 91       		.byte	0x91
 414 00fb 77       		.sleb128 -9
 415 00fc 08       		.uleb128 0x8
 416 00fd 90010000 		.4byte	.LASF24
 417 0101 01       		.byte	0x1
 418 0102 71       		.byte	0x71
 419 0103 6B000000 		.4byte	0x6b
 420 0107 02       		.uleb128 0x2
 421 0108 91       		.byte	0x91
 422 0109 7F       		.sleb128 -1
 423 010a 00       		.byte	0
 424 010b 09       		.uleb128 0x9
 425 010c EE010000 		.4byte	.LASF20
 426 0110 01       		.byte	0x1
 427 0111 88       		.byte	0x88
 428 0112 6B000000 		.4byte	0x6b
 429 0116 00000000 		.4byte	.LFB2
 430 011a 14000000 		.4byte	.LFE2-.LFB2
 431 011e 01       		.uleb128 0x1
 432 011f 9C       		.byte	0x9c
 433 0120 09       		.uleb128 0x9
 434 0121 BB010000 		.4byte	.LASF21
 435 0125 01       		.byte	0x1
 436 0126 A4       		.byte	0xa4
 437 0127 6B000000 		.4byte	0x6b
 438 012b 00000000 		.4byte	.LFB3
 439 012f 14000000 		.4byte	.LFE3-.LFB3
 440 0133 01       		.uleb128 0x1
 441 0134 9C       		.byte	0x9c
 442 0135 06       		.uleb128 0x6
 443 0136 AF000000 		.4byte	.LASF22
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 13


 444 013a 01       		.byte	0x1
 445 013b CF       		.byte	0xcf
 446 013c 00000000 		.4byte	.LFB4
 447 0140 44000000 		.4byte	.LFE4-.LFB4
 448 0144 01       		.uleb128 0x1
 449 0145 9C       		.byte	0x9c
 450 0146 75010000 		.4byte	0x175
 451 014a 07       		.uleb128 0x7
 452 014b DE010000 		.4byte	.LASF23
 453 014f 01       		.byte	0x1
 454 0150 CF       		.byte	0xcf
 455 0151 77000000 		.4byte	0x77
 456 0155 02       		.uleb128 0x2
 457 0156 91       		.byte	0x91
 458 0157 76       		.sleb128 -10
 459 0158 07       		.uleb128 0x7
 460 0159 28020000 		.4byte	.LASF18
 461 015d 01       		.byte	0x1
 462 015e CF       		.byte	0xcf
 463 015f 77000000 		.4byte	0x77
 464 0163 02       		.uleb128 0x2
 465 0164 91       		.byte	0x91
 466 0165 74       		.sleb128 -12
 467 0166 08       		.uleb128 0x8
 468 0167 FC010000 		.4byte	.LASF25
 469 016b 01       		.byte	0x1
 470 016c D1       		.byte	0xd1
 471 016d 83000000 		.4byte	0x83
 472 0171 02       		.uleb128 0x2
 473 0172 91       		.byte	0x91
 474 0173 7C       		.sleb128 -4
 475 0174 00       		.byte	0
 476 0175 0A       		.uleb128 0xa
 477 0176 64010000 		.4byte	.LASF26
 478 017a 01       		.byte	0x1
 479 017b EC       		.byte	0xec
 480 017c 6B000000 		.4byte	0x6b
 481 0180 00000000 		.4byte	.LFB5
 482 0184 30000000 		.4byte	.LFE5-.LFB5
 483 0188 01       		.uleb128 0x1
 484 0189 9C       		.byte	0x9c
 485 018a 08       		.uleb128 0x8
 486 018b 3B020000 		.4byte	.LASF27
 487 018f 01       		.byte	0x1
 488 0190 EE       		.byte	0xee
 489 0191 6B000000 		.4byte	0x6b
 490 0195 02       		.uleb128 0x2
 491 0196 91       		.byte	0x91
 492 0197 7F       		.sleb128 -1
 493 0198 00       		.byte	0
 494 0199 00       		.byte	0
 495              		.section	.debug_abbrev,"",%progbits
 496              	.Ldebug_abbrev0:
 497 0000 01       		.uleb128 0x1
 498 0001 11       		.uleb128 0x11
 499 0002 01       		.byte	0x1
 500 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 14


 501 0004 0E       		.uleb128 0xe
 502 0005 13       		.uleb128 0x13
 503 0006 0B       		.uleb128 0xb
 504 0007 03       		.uleb128 0x3
 505 0008 0E       		.uleb128 0xe
 506 0009 1B       		.uleb128 0x1b
 507 000a 0E       		.uleb128 0xe
 508 000b 55       		.uleb128 0x55
 509 000c 17       		.uleb128 0x17
 510 000d 11       		.uleb128 0x11
 511 000e 01       		.uleb128 0x1
 512 000f 10       		.uleb128 0x10
 513 0010 17       		.uleb128 0x17
 514 0011 00       		.byte	0
 515 0012 00       		.byte	0
 516 0013 02       		.uleb128 0x2
 517 0014 24       		.uleb128 0x24
 518 0015 00       		.byte	0
 519 0016 0B       		.uleb128 0xb
 520 0017 0B       		.uleb128 0xb
 521 0018 3E       		.uleb128 0x3e
 522 0019 0B       		.uleb128 0xb
 523 001a 03       		.uleb128 0x3
 524 001b 0E       		.uleb128 0xe
 525 001c 00       		.byte	0
 526 001d 00       		.byte	0
 527 001e 03       		.uleb128 0x3
 528 001f 24       		.uleb128 0x24
 529 0020 00       		.byte	0
 530 0021 0B       		.uleb128 0xb
 531 0022 0B       		.uleb128 0xb
 532 0023 3E       		.uleb128 0x3e
 533 0024 0B       		.uleb128 0xb
 534 0025 03       		.uleb128 0x3
 535 0026 08       		.uleb128 0x8
 536 0027 00       		.byte	0
 537 0028 00       		.byte	0
 538 0029 04       		.uleb128 0x4
 539 002a 16       		.uleb128 0x16
 540 002b 00       		.byte	0
 541 002c 03       		.uleb128 0x3
 542 002d 0E       		.uleb128 0xe
 543 002e 3A       		.uleb128 0x3a
 544 002f 0B       		.uleb128 0xb
 545 0030 3B       		.uleb128 0x3b
 546 0031 05       		.uleb128 0x5
 547 0032 49       		.uleb128 0x49
 548 0033 13       		.uleb128 0x13
 549 0034 00       		.byte	0
 550 0035 00       		.byte	0
 551 0036 05       		.uleb128 0x5
 552 0037 35       		.uleb128 0x35
 553 0038 00       		.byte	0
 554 0039 49       		.uleb128 0x49
 555 003a 13       		.uleb128 0x13
 556 003b 00       		.byte	0
 557 003c 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 15


 558 003d 06       		.uleb128 0x6
 559 003e 2E       		.uleb128 0x2e
 560 003f 01       		.byte	0x1
 561 0040 3F       		.uleb128 0x3f
 562 0041 19       		.uleb128 0x19
 563 0042 03       		.uleb128 0x3
 564 0043 0E       		.uleb128 0xe
 565 0044 3A       		.uleb128 0x3a
 566 0045 0B       		.uleb128 0xb
 567 0046 3B       		.uleb128 0x3b
 568 0047 0B       		.uleb128 0xb
 569 0048 27       		.uleb128 0x27
 570 0049 19       		.uleb128 0x19
 571 004a 11       		.uleb128 0x11
 572 004b 01       		.uleb128 0x1
 573 004c 12       		.uleb128 0x12
 574 004d 06       		.uleb128 0x6
 575 004e 40       		.uleb128 0x40
 576 004f 18       		.uleb128 0x18
 577 0050 9742     		.uleb128 0x2117
 578 0052 19       		.uleb128 0x19
 579 0053 01       		.uleb128 0x1
 580 0054 13       		.uleb128 0x13
 581 0055 00       		.byte	0
 582 0056 00       		.byte	0
 583 0057 07       		.uleb128 0x7
 584 0058 05       		.uleb128 0x5
 585 0059 00       		.byte	0
 586 005a 03       		.uleb128 0x3
 587 005b 0E       		.uleb128 0xe
 588 005c 3A       		.uleb128 0x3a
 589 005d 0B       		.uleb128 0xb
 590 005e 3B       		.uleb128 0x3b
 591 005f 0B       		.uleb128 0xb
 592 0060 49       		.uleb128 0x49
 593 0061 13       		.uleb128 0x13
 594 0062 02       		.uleb128 0x2
 595 0063 18       		.uleb128 0x18
 596 0064 00       		.byte	0
 597 0065 00       		.byte	0
 598 0066 08       		.uleb128 0x8
 599 0067 34       		.uleb128 0x34
 600 0068 00       		.byte	0
 601 0069 03       		.uleb128 0x3
 602 006a 0E       		.uleb128 0xe
 603 006b 3A       		.uleb128 0x3a
 604 006c 0B       		.uleb128 0xb
 605 006d 3B       		.uleb128 0x3b
 606 006e 0B       		.uleb128 0xb
 607 006f 49       		.uleb128 0x49
 608 0070 13       		.uleb128 0x13
 609 0071 02       		.uleb128 0x2
 610 0072 18       		.uleb128 0x18
 611 0073 00       		.byte	0
 612 0074 00       		.byte	0
 613 0075 09       		.uleb128 0x9
 614 0076 2E       		.uleb128 0x2e
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 16


 615 0077 00       		.byte	0
 616 0078 3F       		.uleb128 0x3f
 617 0079 19       		.uleb128 0x19
 618 007a 03       		.uleb128 0x3
 619 007b 0E       		.uleb128 0xe
 620 007c 3A       		.uleb128 0x3a
 621 007d 0B       		.uleb128 0xb
 622 007e 3B       		.uleb128 0x3b
 623 007f 0B       		.uleb128 0xb
 624 0080 27       		.uleb128 0x27
 625 0081 19       		.uleb128 0x19
 626 0082 49       		.uleb128 0x49
 627 0083 13       		.uleb128 0x13
 628 0084 11       		.uleb128 0x11
 629 0085 01       		.uleb128 0x1
 630 0086 12       		.uleb128 0x12
 631 0087 06       		.uleb128 0x6
 632 0088 40       		.uleb128 0x40
 633 0089 18       		.uleb128 0x18
 634 008a 9742     		.uleb128 0x2117
 635 008c 19       		.uleb128 0x19
 636 008d 00       		.byte	0
 637 008e 00       		.byte	0
 638 008f 0A       		.uleb128 0xa
 639 0090 2E       		.uleb128 0x2e
 640 0091 01       		.byte	0x1
 641 0092 3F       		.uleb128 0x3f
 642 0093 19       		.uleb128 0x19
 643 0094 03       		.uleb128 0x3
 644 0095 0E       		.uleb128 0xe
 645 0096 3A       		.uleb128 0x3a
 646 0097 0B       		.uleb128 0xb
 647 0098 3B       		.uleb128 0x3b
 648 0099 0B       		.uleb128 0xb
 649 009a 27       		.uleb128 0x27
 650 009b 19       		.uleb128 0x19
 651 009c 49       		.uleb128 0x49
 652 009d 13       		.uleb128 0x13
 653 009e 11       		.uleb128 0x11
 654 009f 01       		.uleb128 0x1
 655 00a0 12       		.uleb128 0x12
 656 00a1 06       		.uleb128 0x6
 657 00a2 40       		.uleb128 0x40
 658 00a3 18       		.uleb128 0x18
 659 00a4 9742     		.uleb128 0x2117
 660 00a6 19       		.uleb128 0x19
 661 00a7 00       		.byte	0
 662 00a8 00       		.byte	0
 663 00a9 00       		.byte	0
 664              		.section	.debug_aranges,"",%progbits
 665 0000 44000000 		.4byte	0x44
 666 0004 0200     		.2byte	0x2
 667 0006 00000000 		.4byte	.Ldebug_info0
 668 000a 04       		.byte	0x4
 669 000b 00       		.byte	0
 670 000c 0000     		.2byte	0
 671 000e 0000     		.2byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 17


 672 0010 00000000 		.4byte	.LFB0
 673 0014 30000000 		.4byte	.LFE0-.LFB0
 674 0018 00000000 		.4byte	.LFB1
 675 001c 48000000 		.4byte	.LFE1-.LFB1
 676 0020 00000000 		.4byte	.LFB2
 677 0024 14000000 		.4byte	.LFE2-.LFB2
 678 0028 00000000 		.4byte	.LFB3
 679 002c 14000000 		.4byte	.LFE3-.LFB3
 680 0030 00000000 		.4byte	.LFB4
 681 0034 44000000 		.4byte	.LFE4-.LFB4
 682 0038 00000000 		.4byte	.LFB5
 683 003c 30000000 		.4byte	.LFE5-.LFB5
 684 0040 00000000 		.4byte	0
 685 0044 00000000 		.4byte	0
 686              		.section	.debug_ranges,"",%progbits
 687              	.Ldebug_ranges0:
 688 0000 00000000 		.4byte	.LFB0
 689 0004 30000000 		.4byte	.LFE0
 690 0008 00000000 		.4byte	.LFB1
 691 000c 48000000 		.4byte	.LFE1
 692 0010 00000000 		.4byte	.LFB2
 693 0014 14000000 		.4byte	.LFE2
 694 0018 00000000 		.4byte	.LFB3
 695 001c 14000000 		.4byte	.LFE3
 696 0020 00000000 		.4byte	.LFB4
 697 0024 44000000 		.4byte	.LFE4
 698 0028 00000000 		.4byte	.LFB5
 699 002c 30000000 		.4byte	.LFE5
 700 0030 00000000 		.4byte	0
 701 0034 00000000 		.4byte	0
 702              		.section	.debug_line,"",%progbits
 703              	.Ldebug_line0:
 704 0000 BC000000 		.section	.debug_str,"MS",%progbits,1
 704      02004500 
 704      00000201 
 704      FB0E0D00 
 704      01010101 
 705              	.LASF15:
 706 0000 72656733 		.ascii	"reg32\000"
 706      3200
 707              	.LASF28:
 708 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 708      43313120 
 708      352E342E 
 708      31203230 
 708      31363036 
 709 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 709      20726576 
 709      6973696F 
 709      6E203233 
 709      37373135 
 710 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 710      66756E63 
 710      74696F6E 
 710      2D736563 
 710      74696F6E 
 711 009f 652D706F 		.ascii	"e-pointer\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 18


 711      696E7465 
 711      7200
 712              	.LASF19:
 713 00a9 76616C75 		.ascii	"value\000"
 713      6500
 714              	.LASF22:
 715 00af 424C5545 		.ascii	"BLUE_LED_SetInterruptMode\000"
 715      5F4C4544 
 715      5F536574 
 715      496E7465 
 715      72727570 
 716              	.LASF30:
 717 00c9 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 717      726F7062 
 717      6F785C36 
 717      5F6B7572 
 717      735C6469 
 718 00f8 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 718      41424C45 
 718      5C424C45 
 718      5F44796E 
 718      616D6963 
 719 0129 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 719      796E616D 
 719      69635F47 
 719      4154545F 
 719      53657276 
 720              	.LASF17:
 721 0155 424C5545 		.ascii	"BLUE_LED_Write\000"
 721      5F4C4544 
 721      5F577269 
 721      746500
 722              	.LASF26:
 723 0164 424C5545 		.ascii	"BLUE_LED_ClearInterrupt\000"
 723      5F4C4544 
 723      5F436C65 
 723      6172496E 
 723      74657272 
 724              	.LASF12:
 725 017c 666C6F61 		.ascii	"float\000"
 725      7400
 726              	.LASF1:
 727 0182 756E7369 		.ascii	"unsigned char\000"
 727      676E6564 
 727      20636861 
 727      7200
 728              	.LASF24:
 729 0190 64725661 		.ascii	"drVal\000"
 729      6C00
 730              	.LASF5:
 731 0196 6C6F6E67 		.ascii	"long unsigned int\000"
 731      20756E73 
 731      69676E65 
 731      6420696E 
 731      7400
 732              	.LASF3:
 733 01a8 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 19


 733      7420756E 
 733      7369676E 
 733      65642069 
 733      6E7400
 734              	.LASF21:
 735 01bb 424C5545 		.ascii	"BLUE_LED_ReadDataReg\000"
 735      5F4C4544 
 735      5F526561 
 735      64446174 
 735      61526567 
 736              	.LASF13:
 737 01d0 646F7562 		.ascii	"double\000"
 737      6C6500
 738              	.LASF10:
 739 01d7 75696E74 		.ascii	"uint16\000"
 739      313600
 740              	.LASF23:
 741 01de 706F7369 		.ascii	"position\000"
 741      74696F6E 
 741      00
 742              	.LASF11:
 743 01e7 75696E74 		.ascii	"uint32\000"
 743      333200
 744              	.LASF20:
 745 01ee 424C5545 		.ascii	"BLUE_LED_Read\000"
 745      5F4C4544 
 745      5F526561 
 745      6400
 746              	.LASF25:
 747 01fc 696E7472 		.ascii	"intrCfg\000"
 747      43666700 
 748              	.LASF8:
 749 0204 756E7369 		.ascii	"unsigned int\000"
 749      676E6564 
 749      20696E74 
 749      00
 750              	.LASF7:
 751 0211 6C6F6E67 		.ascii	"long long unsigned int\000"
 751      206C6F6E 
 751      6720756E 
 751      7369676E 
 751      65642069 
 752              	.LASF18:
 753 0228 6D6F6465 		.ascii	"mode\000"
 753      00
 754              	.LASF6:
 755 022d 6C6F6E67 		.ascii	"long long int\000"
 755      206C6F6E 
 755      6720696E 
 755      7400
 756              	.LASF27:
 757 023b 6D61736B 		.ascii	"maskedStatus\000"
 757      65645374 
 757      61747573 
 757      00
 758              	.LASF14:
 759 0248 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccRBS4IJ.s 			page 20


 759      00
 760              	.LASF2:
 761 024d 73686F72 		.ascii	"short int\000"
 761      7420696E 
 761      7400
 762              	.LASF29:
 763 0257 47656E65 		.ascii	"Generated_Source\\PSoC4\\BLUE_LED.c\000"
 763      72617465 
 763      645F536F 
 763      75726365 
 763      5C50536F 
 764              	.LASF9:
 765 0279 75696E74 		.ascii	"uint8\000"
 765      3800
 766              	.LASF4:
 767 027f 6C6F6E67 		.ascii	"long int\000"
 767      20696E74 
 767      00
 768              	.LASF0:
 769 0288 7369676E 		.ascii	"signed char\000"
 769      65642063 
 769      68617200 
 770              	.LASF16:
 771 0294 424C5545 		.ascii	"BLUE_LED_SetDriveMode\000"
 771      5F4C4544 
 771      5F536574 
 771      44726976 
 771      654D6F64 
 772              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
