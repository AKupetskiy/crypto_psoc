ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cbcmac.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mem_clean,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	mem_clean, %function
  24              	mem_clean:
  25              	.LFB0:
  26              		.file 1 "handy.h"
   1:handy.h       **** #ifndef HANDY_H
   2:handy.h       **** #define HANDY_H
   3:handy.h       **** 
   4:handy.h       **** #include <stddef.h>
   5:handy.h       **** #include <stdint.h>
   6:handy.h       **** #include <string.h>
   7:handy.h       **** 
   8:handy.h       **** /*
   9:handy.h       ****  * Handy CPP defines and C inline functions.
  10:handy.h       ****  */
  11:handy.h       **** 
  12:handy.h       **** /* Evaluates to the number of items in array-type variable arr. */
  13:handy.h       **** #define ARRAYCOUNT(arr) (sizeof arr / sizeof arr[0])
  14:handy.h       **** 
  15:handy.h       **** /* Normal MIN/MAX macros.  Evaluate argument expressions only once. */
  16:handy.h       **** #ifndef MIN
  17:handy.h       ****   #define MIN(x, y) \
  18:handy.h       ****     ({ typeof (x) __x = (x); \
  19:handy.h       ****        typeof (y) __y = (y); \
  20:handy.h       ****        __x < __y ? __x : __y; })
  21:handy.h       **** #endif
  22:handy.h       **** #ifndef MAX
  23:handy.h       ****   #define MAX(x, y) \
  24:handy.h       ****     ({ typeof (x) __x = (x); \
  25:handy.h       ****        typeof (y) __y = (y); \
  26:handy.h       ****        __x > __y ? __x : __y; })
  27:handy.h       **** #endif
  28:handy.h       **** 
  29:handy.h       **** /* Swap two values.  Uses GCC type inference magic. */
  30:handy.h       **** #ifndef SWAP
  31:handy.h       ****   #define SWAP(x, y) \
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 2


  32:handy.h       ****     do { \
  33:handy.h       ****       typeof (x) __tmp = (x); \
  34:handy.h       ****       (x) = (y); \
  35:handy.h       ****       (y) = __tmp; \
  36:handy.h       ****     } while (0)
  37:handy.h       **** #endif
  38:handy.h       **** 
  39:handy.h       **** /** Stringify its argument. */
  40:handy.h       **** #define STRINGIFY(x) STRINGIFY_(x)
  41:handy.h       **** #define STRINGIFY_(x) #x
  42:handy.h       **** 
  43:handy.h       **** /* Error handling macros.
  44:handy.h       ****  *
  45:handy.h       ****  * These expect a zero = success, non-zero = error convention.
  46:handy.h       ****  */
  47:handy.h       **** 
  48:handy.h       **** /** Error: return. 
  49:handy.h       ****  *  
  50:handy.h       ****  *  If the expression fails, return the error from this function. */
  51:handy.h       **** #define ER(expr) do { typeof (expr) err_ = (expr); if (err_) return err_; } while (0)
  52:handy.h       **** 
  53:handy.h       **** /** Error: goto.
  54:handy.h       ****  *
  55:handy.h       ****  *  If the expression fails, goto x_err.  Assumes defn of label
  56:handy.h       ****  *  x_err and 'error_type err'. */
  57:handy.h       **** #define EG(expr) do { err = (expr); if (err) goto x_err; } while (0)
  58:handy.h       **** 
  59:handy.h       **** /** Like memset(ptr, 0, len), but not allowed to be removed by
  60:handy.h       ****  *  compilers. */
  61:handy.h       **** static inline void mem_clean(volatile void *v, size_t len)
  62:handy.h       **** {
  27              		.loc 1 62 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              		.cfi_def_cfa_offset 16
  36 0004 0190     		str	r0, [sp, #4]
  37 0006 0091     		str	r1, [sp]
  63:handy.h       ****   if (len)
  38              		.loc 1 63 0
  39 0008 009B     		ldr	r3, [sp]
  40 000a 002B     		cmp	r3, #0
  41 000c 07D0     		beq	.L3
  64:handy.h       ****   {
  65:handy.h       ****     memset((void *) v, 0, len);
  42              		.loc 1 65 0
  43 000e 009A     		ldr	r2, [sp]
  44 0010 019B     		ldr	r3, [sp, #4]
  45 0012 0021     		movs	r1, #0
  46 0014 1800     		movs	r0, r3
  47 0016 FFF7FEFF 		bl	memset
  66:handy.h       ****     (void) *((volatile uint8_t *) v);
  48              		.loc 1 66 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 3


  49 001a 019B     		ldr	r3, [sp, #4]
  50 001c 1B78     		ldrb	r3, [r3]
  51              	.L3:
  67:handy.h       ****   }
  68:handy.h       **** }
  52              		.loc 1 68 0
  53 001e C046     		nop
  54 0020 03B0     		add	sp, sp, #12
  55              		@ sp needed
  56 0022 00BD     		pop	{pc}
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	mem_clean, .-mem_clean
  60              		.section	.text.cf_cbcmac_stream_init,"ax",%progbits
  61              		.align	2
  62              		.global	cf_cbcmac_stream_init
  63              		.code	16
  64              		.thumb_func
  65              		.type	cf_cbcmac_stream_init, %function
  66              	cf_cbcmac_stream_init:
  67              	.LFB27:
  68              		.file 2 "cbcmac.c"
   1:cbcmac.c      **** /*
   2:cbcmac.c      ****  * cifra - embedded cryptography library
   3:cbcmac.c      ****  * Written in 2014 by Joseph Birr-Pixton <jpixton@gmail.com>
   4:cbcmac.c      ****  *
   5:cbcmac.c      ****  * To the extent possible under law, the author(s) have dedicated all
   6:cbcmac.c      ****  * copyright and related and neighboring rights to this software to the
   7:cbcmac.c      ****  * public domain worldwide. This software is distributed without any
   8:cbcmac.c      ****  * warranty.
   9:cbcmac.c      ****  *
  10:cbcmac.c      ****  * You should have received a copy of the CC0 Public Domain Dedication
  11:cbcmac.c      ****  * along with this software. If not, see
  12:cbcmac.c      ****  * <http://creativecommons.org/publicdomain/zero/1.0/>.
  13:cbcmac.c      ****  */
  14:cbcmac.c      **** 
  15:cbcmac.c      **** #include "handy.h"
  16:cbcmac.c      **** #include "prp.h"
  17:cbcmac.c      **** #include "modes.h"
  18:cbcmac.c      **** #include "bitops.h"
  19:cbcmac.c      **** #include "blockwise.h"
  20:cbcmac.c      **** #include "gf128.h"
  21:cbcmac.c      **** #include "tassert.h"
  22:cbcmac.c      **** 
  23:cbcmac.c      **** #include <string.h>
  24:cbcmac.c      **** 
  25:cbcmac.c      **** void cf_cbcmac_stream_init(cf_cbcmac_stream *ctx, const cf_prp *prp, void *prpctx)
  26:cbcmac.c      **** {
  69              		.loc 2 26 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 16
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 00B5     		push	{lr}
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 85B0     		sub	sp, sp, #20
  77              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 4


  78 0004 0390     		str	r0, [sp, #12]
  79 0006 0291     		str	r1, [sp, #8]
  80 0008 0192     		str	r2, [sp, #4]
  27:cbcmac.c      ****   memset(ctx, 0, sizeof *ctx);
  81              		.loc 2 27 0
  82 000a 039B     		ldr	r3, [sp, #12]
  83 000c 3422     		movs	r2, #52
  84 000e 0021     		movs	r1, #0
  85 0010 1800     		movs	r0, r3
  86 0012 FFF7FEFF 		bl	memset
  28:cbcmac.c      ****   ctx->prp = prp;
  87              		.loc 2 28 0
  88 0016 039B     		ldr	r3, [sp, #12]
  89 0018 029A     		ldr	r2, [sp, #8]
  90 001a 1A60     		str	r2, [r3]
  29:cbcmac.c      ****   ctx->prpctx = prpctx;
  91              		.loc 2 29 0
  92 001c 039B     		ldr	r3, [sp, #12]
  93 001e 019A     		ldr	r2, [sp, #4]
  94 0020 5A60     		str	r2, [r3, #4]
  30:cbcmac.c      ****   cf_cbcmac_stream_reset(ctx);
  95              		.loc 2 30 0
  96 0022 039B     		ldr	r3, [sp, #12]
  97 0024 1800     		movs	r0, r3
  98 0026 FFF7FEFF 		bl	cf_cbcmac_stream_reset
  31:cbcmac.c      **** }
  99              		.loc 2 31 0
 100 002a C046     		nop
 101 002c 05B0     		add	sp, sp, #20
 102              		@ sp needed
 103 002e 00BD     		pop	{pc}
 104              		.cfi_endproc
 105              	.LFE27:
 106              		.size	cf_cbcmac_stream_init, .-cf_cbcmac_stream_init
 107              		.section	.text.cf_cbcmac_stream_reset,"ax",%progbits
 108              		.align	2
 109              		.global	cf_cbcmac_stream_reset
 110              		.code	16
 111              		.thumb_func
 112              		.type	cf_cbcmac_stream_reset, %function
 113              	cf_cbcmac_stream_reset:
 114              	.LFB28:
  32:cbcmac.c      **** 
  33:cbcmac.c      **** void cf_cbcmac_stream_reset(cf_cbcmac_stream *ctx)
  34:cbcmac.c      **** {
 115              		.loc 2 34 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 24
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119 0000 00B5     		push	{lr}
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 14, -4
 122 0002 87B0     		sub	sp, sp, #28
 123              		.cfi_def_cfa_offset 32
 124 0004 0190     		str	r0, [sp, #4]
  35:cbcmac.c      ****   uint8_t iv_zero[CF_MAXBLOCK] = { 0 };
 125              		.loc 2 35 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 5


 126 0006 02AB     		add	r3, sp, #8
 127 0008 1800     		movs	r0, r3
 128 000a 1023     		movs	r3, #16
 129 000c 1A00     		movs	r2, r3
 130 000e 0021     		movs	r1, #0
 131 0010 FFF7FEFF 		bl	memset
  36:cbcmac.c      ****   cf_cbc_init(&ctx->cbc, ctx->prp, ctx->prpctx, iv_zero);
 132              		.loc 2 36 0
 133 0014 019B     		ldr	r3, [sp, #4]
 134 0016 0833     		adds	r3, r3, #8
 135 0018 1800     		movs	r0, r3
 136 001a 019B     		ldr	r3, [sp, #4]
 137 001c 1968     		ldr	r1, [r3]
 138 001e 019B     		ldr	r3, [sp, #4]
 139 0020 5A68     		ldr	r2, [r3, #4]
 140 0022 02AB     		add	r3, sp, #8
 141 0024 FFF7FEFF 		bl	cf_cbc_init
  37:cbcmac.c      ****   mem_clean(ctx->buffer, sizeof ctx->buffer);
 142              		.loc 2 37 0
 143 0028 019B     		ldr	r3, [sp, #4]
 144 002a 2033     		adds	r3, r3, #32
 145 002c 1021     		movs	r1, #16
 146 002e 1800     		movs	r0, r3
 147 0030 FFF7FEFF 		bl	mem_clean
  38:cbcmac.c      ****   ctx->used = 0;
 148              		.loc 2 38 0
 149 0034 019B     		ldr	r3, [sp, #4]
 150 0036 0022     		movs	r2, #0
 151 0038 1A63     		str	r2, [r3, #48]
  39:cbcmac.c      **** }
 152              		.loc 2 39 0
 153 003a C046     		nop
 154 003c 07B0     		add	sp, sp, #28
 155              		@ sp needed
 156 003e 00BD     		pop	{pc}
 157              		.cfi_endproc
 158              	.LFE28:
 159              		.size	cf_cbcmac_stream_reset, .-cf_cbcmac_stream_reset
 160              		.section	.text.cbcmac_process,"ax",%progbits
 161              		.align	2
 162              		.code	16
 163              		.thumb_func
 164              		.type	cbcmac_process, %function
 165              	cbcmac_process:
 166              	.LFB29:
  40:cbcmac.c      **** 
  41:cbcmac.c      **** static void cbcmac_process(void *vctx, const uint8_t *block)
  42:cbcmac.c      **** {
 167              		.loc 2 42 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 32
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 00B5     		push	{lr}
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 14, -4
 174 0002 89B0     		sub	sp, sp, #36
 175              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 6


 176 0004 0190     		str	r0, [sp, #4]
 177 0006 0091     		str	r1, [sp]
  43:cbcmac.c      ****   cf_cbcmac_stream *ctx = vctx;
 178              		.loc 2 43 0
 179 0008 019B     		ldr	r3, [sp, #4]
 180 000a 0793     		str	r3, [sp, #28]
  44:cbcmac.c      ****   uint8_t output[CF_MAXBLOCK];
  45:cbcmac.c      ****   cf_cbc_encrypt(&ctx->cbc, block, output, 1);
 181              		.loc 2 45 0
 182 000c 079B     		ldr	r3, [sp, #28]
 183 000e 0833     		adds	r3, r3, #8
 184 0010 1800     		movs	r0, r3
 185 0012 03AA     		add	r2, sp, #12
 186 0014 0099     		ldr	r1, [sp]
 187 0016 0123     		movs	r3, #1
 188 0018 FFF7FEFF 		bl	cf_cbc_encrypt
  46:cbcmac.c      **** }
 189              		.loc 2 46 0
 190 001c C046     		nop
 191 001e 09B0     		add	sp, sp, #36
 192              		@ sp needed
 193 0020 00BD     		pop	{pc}
 194              		.cfi_endproc
 195              	.LFE29:
 196              		.size	cbcmac_process, .-cbcmac_process
 197 0022 C046     		.section	.text.cf_cbcmac_stream_update,"ax",%progbits
 198              		.align	2
 199              		.global	cf_cbcmac_stream_update
 200              		.code	16
 201              		.thumb_func
 202              		.type	cf_cbcmac_stream_update, %function
 203              	cf_cbcmac_stream_update:
 204              	.LFB30:
  47:cbcmac.c      **** 
  48:cbcmac.c      **** void cf_cbcmac_stream_update(cf_cbcmac_stream *ctx, const uint8_t *data, size_t len)
  49:cbcmac.c      **** {
 205              		.loc 2 49 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 16
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 10B5     		push	{r4, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 213 0002 88B0     		sub	sp, sp, #32
 214              		.cfi_def_cfa_offset 40
 215 0004 0790     		str	r0, [sp, #28]
 216 0006 0691     		str	r1, [sp, #24]
 217 0008 0592     		str	r2, [sp, #20]
  50:cbcmac.c      ****   cf_blockwise_accumulate(ctx->buffer, &ctx->used, ctx->prp->blocksz,
 218              		.loc 2 50 0
 219 000a 079B     		ldr	r3, [sp, #28]
 220 000c 2033     		adds	r3, r3, #32
 221 000e 1800     		movs	r0, r3
 222 0010 079B     		ldr	r3, [sp, #28]
 223 0012 3033     		adds	r3, r3, #48
 224 0014 1900     		movs	r1, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 7


 225 0016 079B     		ldr	r3, [sp, #28]
 226 0018 1B68     		ldr	r3, [r3]
 227 001a 1A68     		ldr	r2, [r3]
 228 001c 069C     		ldr	r4, [sp, #24]
 229 001e 079B     		ldr	r3, [sp, #28]
 230 0020 0293     		str	r3, [sp, #8]
 231 0022 054B     		ldr	r3, .L8
 232 0024 0193     		str	r3, [sp, #4]
 233 0026 059B     		ldr	r3, [sp, #20]
 234 0028 0093     		str	r3, [sp]
 235 002a 2300     		movs	r3, r4
 236 002c FFF7FEFF 		bl	cf_blockwise_accumulate
  51:cbcmac.c      ****                           data, len,
  52:cbcmac.c      ****                           cbcmac_process,
  53:cbcmac.c      ****                           ctx);
  54:cbcmac.c      **** }
 237              		.loc 2 54 0
 238 0030 C046     		nop
 239 0032 08B0     		add	sp, sp, #32
 240              		@ sp needed
 241 0034 10BD     		pop	{r4, pc}
 242              	.L9:
 243 0036 C046     		.align	2
 244              	.L8:
 245 0038 00000000 		.word	cbcmac_process
 246              		.cfi_endproc
 247              	.LFE30:
 248              		.size	cf_cbcmac_stream_update, .-cf_cbcmac_stream_update
 249              		.section	.text.cf_cbcmac_stream_finish_block_zero,"ax",%progbits
 250              		.align	2
 251              		.global	cf_cbcmac_stream_finish_block_zero
 252              		.code	16
 253              		.thumb_func
 254              		.type	cf_cbcmac_stream_finish_block_zero, %function
 255              	cf_cbcmac_stream_finish_block_zero:
 256              	.LFB31:
  55:cbcmac.c      **** 
  56:cbcmac.c      **** void cf_cbcmac_stream_finish_block_zero(cf_cbcmac_stream *ctx)
  57:cbcmac.c      **** {
 257              		.loc 2 57 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 00B5     		push	{lr}
 262              		.cfi_def_cfa_offset 4
 263              		.cfi_offset 14, -4
 264 0002 83B0     		sub	sp, sp, #12
 265              		.cfi_def_cfa_offset 16
 266 0004 0190     		str	r0, [sp, #4]
  58:cbcmac.c      ****   if (ctx->used == 0)
 267              		.loc 2 58 0
 268 0006 019B     		ldr	r3, [sp, #4]
 269 0008 1B6B     		ldr	r3, [r3, #48]
 270 000a 002B     		cmp	r3, #0
 271 000c 1BD0     		beq	.L13
  59:cbcmac.c      ****     return;
  60:cbcmac.c      **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 8


  61:cbcmac.c      ****   memset(ctx->buffer + ctx->used, 0, ctx->prp->blocksz - ctx->used);
 272              		.loc 2 61 0
 273 000e 019B     		ldr	r3, [sp, #4]
 274 0010 2033     		adds	r3, r3, #32
 275 0012 1A00     		movs	r2, r3
 276 0014 019B     		ldr	r3, [sp, #4]
 277 0016 1B6B     		ldr	r3, [r3, #48]
 278 0018 D018     		adds	r0, r2, r3
 279 001a 019B     		ldr	r3, [sp, #4]
 280 001c 1B68     		ldr	r3, [r3]
 281 001e 1A68     		ldr	r2, [r3]
 282 0020 019B     		ldr	r3, [sp, #4]
 283 0022 1B6B     		ldr	r3, [r3, #48]
 284 0024 D31A     		subs	r3, r2, r3
 285 0026 1A00     		movs	r2, r3
 286 0028 0021     		movs	r1, #0
 287 002a FFF7FEFF 		bl	memset
  62:cbcmac.c      ****   cbcmac_process(ctx, ctx->buffer);
 288              		.loc 2 62 0
 289 002e 019B     		ldr	r3, [sp, #4]
 290 0030 2033     		adds	r3, r3, #32
 291 0032 1A00     		movs	r2, r3
 292 0034 019B     		ldr	r3, [sp, #4]
 293 0036 1100     		movs	r1, r2
 294 0038 1800     		movs	r0, r3
 295 003a FFF7FEFF 		bl	cbcmac_process
  63:cbcmac.c      ****   ctx->used = 0;
 296              		.loc 2 63 0
 297 003e 019B     		ldr	r3, [sp, #4]
 298 0040 0022     		movs	r2, #0
 299 0042 1A63     		str	r2, [r3, #48]
 300 0044 00E0     		b	.L10
 301              	.L13:
  59:cbcmac.c      ****     return;
 302              		.loc 2 59 0
 303 0046 C046     		nop
 304              	.L10:
  64:cbcmac.c      **** }
 305              		.loc 2 64 0
 306 0048 03B0     		add	sp, sp, #12
 307              		@ sp needed
 308 004a 00BD     		pop	{pc}
 309              		.cfi_endproc
 310              	.LFE31:
 311              		.size	cf_cbcmac_stream_finish_block_zero, .-cf_cbcmac_stream_finish_block_zero
 312              		.section	.text.cf_cbcmac_stream_nopad_final,"ax",%progbits
 313              		.align	2
 314              		.global	cf_cbcmac_stream_nopad_final
 315              		.code	16
 316              		.thumb_func
 317              		.type	cf_cbcmac_stream_nopad_final, %function
 318              	cf_cbcmac_stream_nopad_final:
 319              	.LFB32:
  65:cbcmac.c      **** 
  66:cbcmac.c      **** void cf_cbcmac_stream_nopad_final(cf_cbcmac_stream *ctx, uint8_t out[CF_MAXBLOCK])
  67:cbcmac.c      **** {
 320              		.loc 2 67 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 9


 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 8
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 00B5     		push	{lr}
 325              		.cfi_def_cfa_offset 4
 326              		.cfi_offset 14, -4
 327 0002 83B0     		sub	sp, sp, #12
 328              		.cfi_def_cfa_offset 16
 329 0004 0190     		str	r0, [sp, #4]
 330 0006 0091     		str	r1, [sp]
  68:cbcmac.c      ****   assert(ctx->used == 0);
  69:cbcmac.c      ****   memcpy(out, ctx->cbc.block, ctx->prp->blocksz);
 331              		.loc 2 69 0
 332 0008 019B     		ldr	r3, [sp, #4]
 333 000a 1033     		adds	r3, r3, #16
 334 000c 1900     		movs	r1, r3
 335 000e 019B     		ldr	r3, [sp, #4]
 336 0010 1B68     		ldr	r3, [r3]
 337 0012 1A68     		ldr	r2, [r3]
 338 0014 009B     		ldr	r3, [sp]
 339 0016 1800     		movs	r0, r3
 340 0018 FFF7FEFF 		bl	memcpy
  70:cbcmac.c      **** }
 341              		.loc 2 70 0
 342 001c C046     		nop
 343 001e 03B0     		add	sp, sp, #12
 344              		@ sp needed
 345 0020 00BD     		pop	{pc}
 346              		.cfi_endproc
 347              	.LFE32:
 348              		.size	cf_cbcmac_stream_nopad_final, .-cf_cbcmac_stream_nopad_final
 349 0022 C046     		.section	.text.cf_cbcmac_stream_pad_final,"ax",%progbits
 350              		.align	2
 351              		.global	cf_cbcmac_stream_pad_final
 352              		.code	16
 353              		.thumb_func
 354              		.type	cf_cbcmac_stream_pad_final, %function
 355              	cf_cbcmac_stream_pad_final:
 356              	.LFB33:
  71:cbcmac.c      **** 
  72:cbcmac.c      **** void cf_cbcmac_stream_pad_final(cf_cbcmac_stream *ctx, uint8_t out[CF_MAXBLOCK])
  73:cbcmac.c      **** {
 357              		.loc 2 73 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 16
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 30B5     		push	{r4, r5, lr}
 362              		.cfi_def_cfa_offset 12
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 5, -8
 365              		.cfi_offset 14, -4
 366 0002 89B0     		sub	sp, sp, #36
 367              		.cfi_def_cfa_offset 48
 368 0004 0590     		str	r0, [sp, #20]
 369 0006 0491     		str	r1, [sp, #16]
  74:cbcmac.c      ****   uint8_t npad = ctx->prp->blocksz - ctx->used;
 370              		.loc 2 74 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 10


 371 0008 059B     		ldr	r3, [sp, #20]
 372 000a 1B68     		ldr	r3, [r3]
 373 000c 1B68     		ldr	r3, [r3]
 374 000e D9B2     		uxtb	r1, r3
 375 0010 059B     		ldr	r3, [sp, #20]
 376 0012 1B6B     		ldr	r3, [r3, #48]
 377 0014 DAB2     		uxtb	r2, r3
 378 0016 1F23     		movs	r3, #31
 379 0018 6B44     		add	r3, r3, sp
 380 001a 8A1A     		subs	r2, r1, r2
 381 001c 1A70     		strb	r2, [r3]
  75:cbcmac.c      ****   cf_blockwise_acc_byte(ctx->buffer, &ctx->used, ctx->prp->blocksz,
 382              		.loc 2 75 0
 383 001e 059B     		ldr	r3, [sp, #20]
 384 0020 2033     		adds	r3, r3, #32
 385 0022 1800     		movs	r0, r3
 386 0024 059B     		ldr	r3, [sp, #20]
 387 0026 3033     		adds	r3, r3, #48
 388 0028 1900     		movs	r1, r3
 389 002a 059B     		ldr	r3, [sp, #20]
 390 002c 1B68     		ldr	r3, [r3]
 391 002e 1C68     		ldr	r4, [r3]
 392 0030 1F23     		movs	r3, #31
 393 0032 6B44     		add	r3, r3, sp
 394 0034 1B78     		ldrb	r3, [r3]
 395 0036 1F22     		movs	r2, #31
 396 0038 6A44     		add	r2, r2, sp
 397 003a 1578     		ldrb	r5, [r2]
 398 003c 059A     		ldr	r2, [sp, #20]
 399 003e 0292     		str	r2, [sp, #8]
 400 0040 074A     		ldr	r2, .L16
 401 0042 0192     		str	r2, [sp, #4]
 402 0044 0093     		str	r3, [sp]
 403 0046 2B00     		movs	r3, r5
 404 0048 2200     		movs	r2, r4
 405 004a FFF7FEFF 		bl	cf_blockwise_acc_byte
  76:cbcmac.c      ****                         npad, npad,
  77:cbcmac.c      ****                         cbcmac_process, ctx);
  78:cbcmac.c      ****   cf_cbcmac_stream_nopad_final(ctx, out);
 406              		.loc 2 78 0
 407 004e 049A     		ldr	r2, [sp, #16]
 408 0050 059B     		ldr	r3, [sp, #20]
 409 0052 1100     		movs	r1, r2
 410 0054 1800     		movs	r0, r3
 411 0056 FFF7FEFF 		bl	cf_cbcmac_stream_nopad_final
  79:cbcmac.c      **** }
 412              		.loc 2 79 0
 413 005a C046     		nop
 414 005c 09B0     		add	sp, sp, #36
 415              		@ sp needed
 416 005e 30BD     		pop	{r4, r5, pc}
 417              	.L17:
 418              		.align	2
 419              	.L16:
 420 0060 00000000 		.word	cbcmac_process
 421              		.cfi_endproc
 422              	.LFE33:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 11


 423              		.size	cf_cbcmac_stream_pad_final, .-cf_cbcmac_stream_pad_final
 424              		.text
 425              	.Letext0:
 426              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 427              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 428              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 429              		.file 6 "prp.h"
 430              		.file 7 "modes.h"
 431              		.section	.debug_info,"",%progbits
 432              	.Ldebug_info0:
 433 0000 81030000 		.4byte	0x381
 434 0004 0400     		.2byte	0x4
 435 0006 00000000 		.4byte	.Ldebug_abbrev0
 436 000a 04       		.byte	0x4
 437 000b 01       		.uleb128 0x1
 438 000c 96000000 		.4byte	.LASF38
 439 0010 0C       		.byte	0xc
 440 0011 D6010000 		.4byte	.LASF39
 441 0015 00000000 		.4byte	.LASF40
 442 0019 00000000 		.4byte	.Ldebug_ranges0+0
 443 001d 00000000 		.4byte	0
 444 0021 00000000 		.4byte	.Ldebug_line0
 445 0025 02       		.uleb128 0x2
 446 0026 04       		.byte	0x4
 447 0027 05       		.byte	0x5
 448 0028 696E7400 		.ascii	"int\000"
 449 002c 03       		.uleb128 0x3
 450 002d DF010000 		.4byte	.LASF4
 451 0031 03       		.byte	0x3
 452 0032 D8       		.byte	0xd8
 453 0033 37000000 		.4byte	0x37
 454 0037 04       		.uleb128 0x4
 455 0038 04       		.byte	0x4
 456 0039 07       		.byte	0x7
 457 003a F3010000 		.4byte	.LASF0
 458 003e 04       		.uleb128 0x4
 459 003f 08       		.byte	0x8
 460 0040 05       		.byte	0x5
 461 0041 6E020000 		.4byte	.LASF1
 462 0045 04       		.uleb128 0x4
 463 0046 08       		.byte	0x8
 464 0047 04       		.byte	0x4
 465 0048 EE020000 		.4byte	.LASF2
 466 004c 04       		.uleb128 0x4
 467 004d 01       		.byte	0x1
 468 004e 06       		.byte	0x6
 469 004f FA020000 		.4byte	.LASF3
 470 0053 03       		.uleb128 0x3
 471 0054 8C000000 		.4byte	.LASF5
 472 0058 04       		.byte	0x4
 473 0059 1D       		.byte	0x1d
 474 005a 5E000000 		.4byte	0x5e
 475 005e 04       		.uleb128 0x4
 476 005f 01       		.byte	0x1
 477 0060 08       		.byte	0x8
 478 0061 AF010000 		.4byte	.LASF6
 479 0065 04       		.uleb128 0x4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 12


 480 0066 02       		.byte	0x2
 481 0067 05       		.byte	0x5
 482 0068 C7020000 		.4byte	.LASF7
 483 006c 04       		.uleb128 0x4
 484 006d 02       		.byte	0x2
 485 006e 07       		.byte	0x7
 486 006f 4D010000 		.4byte	.LASF8
 487 0073 04       		.uleb128 0x4
 488 0074 04       		.byte	0x4
 489 0075 05       		.byte	0x5
 490 0076 DD020000 		.4byte	.LASF9
 491 007a 04       		.uleb128 0x4
 492 007b 04       		.byte	0x4
 493 007c 07       		.byte	0x7
 494 007d C4010000 		.4byte	.LASF10
 495 0081 04       		.uleb128 0x4
 496 0082 08       		.byte	0x8
 497 0083 07       		.byte	0x7
 498 0084 82010000 		.4byte	.LASF11
 499 0088 03       		.uleb128 0x3
 500 0089 0C020000 		.4byte	.LASF12
 501 008d 05       		.byte	0x5
 502 008e 18       		.byte	0x18
 503 008f 53000000 		.4byte	0x53
 504 0093 04       		.uleb128 0x4
 505 0094 04       		.byte	0x4
 506 0095 07       		.byte	0x7
 507 0096 5E020000 		.4byte	.LASF13
 508 009a 05       		.uleb128 0x5
 509 009b 04       		.byte	0x4
 510 009c 04       		.uleb128 0x4
 511 009d 01       		.byte	0x1
 512 009e 08       		.byte	0x8
 513 009f 7C020000 		.4byte	.LASF14
 514 00a3 03       		.uleb128 0x3
 515 00a4 E6010000 		.4byte	.LASF15
 516 00a8 06       		.byte	0x6
 517 00a9 26       		.byte	0x26
 518 00aa AE000000 		.4byte	0xae
 519 00ae 06       		.uleb128 0x6
 520 00af 04       		.byte	0x4
 521 00b0 B4000000 		.4byte	0xb4
 522 00b4 07       		.uleb128 0x7
 523 00b5 C9000000 		.4byte	0xc9
 524 00b9 08       		.uleb128 0x8
 525 00ba 9A000000 		.4byte	0x9a
 526 00be 08       		.uleb128 0x8
 527 00bf C9000000 		.4byte	0xc9
 528 00c3 08       		.uleb128 0x8
 529 00c4 D4000000 		.4byte	0xd4
 530 00c8 00       		.byte	0
 531 00c9 06       		.uleb128 0x6
 532 00ca 04       		.byte	0x4
 533 00cb CF000000 		.4byte	0xcf
 534 00cf 09       		.uleb128 0x9
 535 00d0 88000000 		.4byte	0x88
 536 00d4 06       		.uleb128 0x6
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 13


 537 00d5 04       		.byte	0x4
 538 00d6 88000000 		.4byte	0x88
 539 00da 0A       		.uleb128 0xa
 540 00db 0C       		.byte	0xc
 541 00dc 06       		.byte	0x6
 542 00dd 34       		.byte	0x34
 543 00de 07010000 		.4byte	0x107
 544 00e2 0B       		.uleb128 0xb
 545 00e3 9C020000 		.4byte	.LASF16
 546 00e7 06       		.byte	0x6
 547 00e8 36       		.byte	0x36
 548 00e9 2C000000 		.4byte	0x2c
 549 00ed 00       		.byte	0
 550 00ee 0B       		.uleb128 0xb
 551 00ef 45010000 		.4byte	.LASF17
 552 00f3 06       		.byte	0x6
 553 00f4 37       		.byte	0x37
 554 00f5 A3000000 		.4byte	0xa3
 555 00f9 04       		.byte	0x4
 556 00fa 0B       		.uleb128 0xb
 557 00fb 65010000 		.4byte	.LASF18
 558 00ff 06       		.byte	0x6
 559 0100 38       		.byte	0x38
 560 0101 A3000000 		.4byte	0xa3
 561 0105 08       		.byte	0x8
 562 0106 00       		.byte	0
 563 0107 03       		.uleb128 0x3
 564 0108 BD010000 		.4byte	.LASF19
 565 010c 06       		.byte	0x6
 566 010d 39       		.byte	0x39
 567 010e DA000000 		.4byte	0xda
 568 0112 0A       		.uleb128 0xa
 569 0113 18       		.byte	0x18
 570 0114 07       		.byte	0x7
 571 0115 35       		.byte	0x35
 572 0116 3F010000 		.4byte	0x13f
 573 011a 0C       		.uleb128 0xc
 574 011b 70727000 		.ascii	"prp\000"
 575 011f 07       		.byte	0x7
 576 0120 37       		.byte	0x37
 577 0121 3F010000 		.4byte	0x13f
 578 0125 00       		.byte	0
 579 0126 0B       		.uleb128 0xb
 580 0127 00020000 		.4byte	.LASF20
 581 012b 07       		.byte	0x7
 582 012c 38       		.byte	0x38
 583 012d 9A000000 		.4byte	0x9a
 584 0131 04       		.byte	0x4
 585 0132 0B       		.uleb128 0xb
 586 0133 7C010000 		.4byte	.LASF21
 587 0137 07       		.byte	0x7
 588 0138 39       		.byte	0x39
 589 0139 4A010000 		.4byte	0x14a
 590 013d 08       		.byte	0x8
 591 013e 00       		.byte	0
 592 013f 06       		.uleb128 0x6
 593 0140 04       		.byte	0x4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 14


 594 0141 45010000 		.4byte	0x145
 595 0145 09       		.uleb128 0x9
 596 0146 07010000 		.4byte	0x107
 597 014a 0D       		.uleb128 0xd
 598 014b 88000000 		.4byte	0x88
 599 014f 5A010000 		.4byte	0x15a
 600 0153 0E       		.uleb128 0xe
 601 0154 93000000 		.4byte	0x93
 602 0158 0F       		.byte	0xf
 603 0159 00       		.byte	0
 604 015a 03       		.uleb128 0x3
 605 015b 67020000 		.4byte	.LASF22
 606 015f 07       		.byte	0x7
 607 0160 3A       		.byte	0x3a
 608 0161 12010000 		.4byte	0x112
 609 0165 0A       		.uleb128 0xa
 610 0166 34       		.byte	0x34
 611 0167 07       		.byte	0x7
 612 0168 B1       		.byte	0xb1
 613 0169 AA010000 		.4byte	0x1aa
 614 016d 0C       		.uleb128 0xc
 615 016e 70727000 		.ascii	"prp\000"
 616 0172 07       		.byte	0x7
 617 0173 B3       		.byte	0xb3
 618 0174 3F010000 		.4byte	0x13f
 619 0178 00       		.byte	0
 620 0179 0B       		.uleb128 0xb
 621 017a 00020000 		.4byte	.LASF20
 622 017e 07       		.byte	0x7
 623 017f B4       		.byte	0xb4
 624 0180 9A000000 		.4byte	0x9a
 625 0184 04       		.byte	0x4
 626 0185 0C       		.uleb128 0xc
 627 0186 63626300 		.ascii	"cbc\000"
 628 018a 07       		.byte	0x7
 629 018b B5       		.byte	0xb5
 630 018c 5A010000 		.4byte	0x15a
 631 0190 08       		.byte	0x8
 632 0191 0B       		.uleb128 0xb
 633 0192 39010000 		.4byte	.LASF23
 634 0196 07       		.byte	0x7
 635 0197 B6       		.byte	0xb6
 636 0198 4A010000 		.4byte	0x14a
 637 019c 20       		.byte	0x20
 638 019d 0B       		.uleb128 0xb
 639 019e 40010000 		.4byte	.LASF24
 640 01a2 07       		.byte	0x7
 641 01a3 B7       		.byte	0xb7
 642 01a4 2C000000 		.4byte	0x2c
 643 01a8 30       		.byte	0x30
 644 01a9 00       		.byte	0
 645 01aa 03       		.uleb128 0x3
 646 01ab 2B020000 		.4byte	.LASF25
 647 01af 07       		.byte	0x7
 648 01b0 B8       		.byte	0xb8
 649 01b1 65010000 		.4byte	0x165
 650 01b5 0F       		.uleb128 0xf
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 15


 651 01b6 54020000 		.4byte	.LASF28
 652 01ba 01       		.byte	0x1
 653 01bb 3D       		.byte	0x3d
 654 01bc 00000000 		.4byte	.LFB0
 655 01c0 24000000 		.4byte	.LFE0-.LFB0
 656 01c4 01       		.uleb128 0x1
 657 01c5 9C       		.byte	0x9c
 658 01c6 E5010000 		.4byte	0x1e5
 659 01ca 10       		.uleb128 0x10
 660 01cb 7600     		.ascii	"v\000"
 661 01cd 01       		.byte	0x1
 662 01ce 3D       		.byte	0x3d
 663 01cf E5010000 		.4byte	0x1e5
 664 01d3 02       		.uleb128 0x2
 665 01d4 91       		.byte	0x91
 666 01d5 74       		.sleb128 -12
 667 01d6 10       		.uleb128 0x10
 668 01d7 6C656E00 		.ascii	"len\000"
 669 01db 01       		.byte	0x1
 670 01dc 3D       		.byte	0x3d
 671 01dd 2C000000 		.4byte	0x2c
 672 01e1 02       		.uleb128 0x2
 673 01e2 91       		.byte	0x91
 674 01e3 70       		.sleb128 -16
 675 01e4 00       		.byte	0
 676 01e5 06       		.uleb128 0x6
 677 01e6 04       		.byte	0x4
 678 01e7 EB010000 		.4byte	0x1eb
 679 01eb 11       		.uleb128 0x11
 680 01ec 12       		.uleb128 0x12
 681 01ed 99010000 		.4byte	.LASF26
 682 01f1 02       		.byte	0x2
 683 01f2 19       		.byte	0x19
 684 01f3 00000000 		.4byte	.LFB27
 685 01f7 30000000 		.4byte	.LFE27-.LFB27
 686 01fb 01       		.uleb128 0x1
 687 01fc 9C       		.byte	0x9c
 688 01fd 2C020000 		.4byte	0x22c
 689 0201 10       		.uleb128 0x10
 690 0202 63747800 		.ascii	"ctx\000"
 691 0206 02       		.byte	0x2
 692 0207 19       		.byte	0x19
 693 0208 2C020000 		.4byte	0x22c
 694 020c 02       		.uleb128 0x2
 695 020d 91       		.byte	0x91
 696 020e 74       		.sleb128 -12
 697 020f 10       		.uleb128 0x10
 698 0210 70727000 		.ascii	"prp\000"
 699 0214 02       		.byte	0x2
 700 0215 19       		.byte	0x19
 701 0216 3F010000 		.4byte	0x13f
 702 021a 02       		.uleb128 0x2
 703 021b 91       		.byte	0x91
 704 021c 70       		.sleb128 -16
 705 021d 13       		.uleb128 0x13
 706 021e 00020000 		.4byte	.LASF20
 707 0222 02       		.byte	0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 16


 708 0223 19       		.byte	0x19
 709 0224 9A000000 		.4byte	0x9a
 710 0228 02       		.uleb128 0x2
 711 0229 91       		.byte	0x91
 712 022a 6C       		.sleb128 -20
 713 022b 00       		.byte	0
 714 022c 06       		.uleb128 0x6
 715 022d 04       		.byte	0x4
 716 022e AA010000 		.4byte	0x1aa
 717 0232 12       		.uleb128 0x12
 718 0233 14020000 		.4byte	.LASF27
 719 0237 02       		.byte	0x2
 720 0238 21       		.byte	0x21
 721 0239 00000000 		.4byte	.LFB28
 722 023d 40000000 		.4byte	.LFE28-.LFB28
 723 0241 01       		.uleb128 0x1
 724 0242 9C       		.byte	0x9c
 725 0243 64020000 		.4byte	0x264
 726 0247 10       		.uleb128 0x10
 727 0248 63747800 		.ascii	"ctx\000"
 728 024c 02       		.byte	0x2
 729 024d 21       		.byte	0x21
 730 024e 2C020000 		.4byte	0x22c
 731 0252 02       		.uleb128 0x2
 732 0253 91       		.byte	0x91
 733 0254 64       		.sleb128 -28
 734 0255 14       		.uleb128 0x14
 735 0256 E6020000 		.4byte	.LASF31
 736 025a 02       		.byte	0x2
 737 025b 23       		.byte	0x23
 738 025c 4A010000 		.4byte	0x14a
 739 0260 02       		.uleb128 0x2
 740 0261 91       		.byte	0x91
 741 0262 68       		.sleb128 -24
 742 0263 00       		.byte	0
 743 0264 0F       		.uleb128 0xf
 744 0265 6D010000 		.4byte	.LASF29
 745 0269 02       		.byte	0x2
 746 026a 29       		.byte	0x29
 747 026b 00000000 		.4byte	.LFB29
 748 026f 22000000 		.4byte	.LFE29-.LFB29
 749 0273 01       		.uleb128 0x1
 750 0274 9C       		.byte	0x9c
 751 0275 B2020000 		.4byte	0x2b2
 752 0279 13       		.uleb128 0x13
 753 027a D8020000 		.4byte	.LASF30
 754 027e 02       		.byte	0x2
 755 027f 29       		.byte	0x29
 756 0280 9A000000 		.4byte	0x9a
 757 0284 02       		.uleb128 0x2
 758 0285 91       		.byte	0x91
 759 0286 5C       		.sleb128 -36
 760 0287 13       		.uleb128 0x13
 761 0288 7C010000 		.4byte	.LASF21
 762 028c 02       		.byte	0x2
 763 028d 29       		.byte	0x29
 764 028e C9000000 		.4byte	0xc9
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 17


 765 0292 02       		.uleb128 0x2
 766 0293 91       		.byte	0x91
 767 0294 58       		.sleb128 -40
 768 0295 15       		.uleb128 0x15
 769 0296 63747800 		.ascii	"ctx\000"
 770 029a 02       		.byte	0x2
 771 029b 2B       		.byte	0x2b
 772 029c 2C020000 		.4byte	0x22c
 773 02a0 02       		.uleb128 0x2
 774 02a1 91       		.byte	0x91
 775 02a2 74       		.sleb128 -12
 776 02a3 14       		.uleb128 0x14
 777 02a4 D1020000 		.4byte	.LASF32
 778 02a8 02       		.byte	0x2
 779 02a9 2C       		.byte	0x2c
 780 02aa 4A010000 		.4byte	0x14a
 781 02ae 02       		.uleb128 0x2
 782 02af 91       		.byte	0x91
 783 02b0 64       		.sleb128 -28
 784 02b1 00       		.byte	0
 785 02b2 12       		.uleb128 0x12
 786 02b3 3C020000 		.4byte	.LASF33
 787 02b7 02       		.byte	0x2
 788 02b8 30       		.byte	0x30
 789 02b9 00000000 		.4byte	.LFB30
 790 02bd 3C000000 		.4byte	.LFE30-.LFB30
 791 02c1 01       		.uleb128 0x1
 792 02c2 9C       		.byte	0x9c
 793 02c3 F2020000 		.4byte	0x2f2
 794 02c7 10       		.uleb128 0x10
 795 02c8 63747800 		.ascii	"ctx\000"
 796 02cc 02       		.byte	0x2
 797 02cd 30       		.byte	0x30
 798 02ce 2C020000 		.4byte	0x22c
 799 02d2 02       		.uleb128 0x2
 800 02d3 91       		.byte	0x91
 801 02d4 74       		.sleb128 -12
 802 02d5 13       		.uleb128 0x13
 803 02d6 60010000 		.4byte	.LASF34
 804 02da 02       		.byte	0x2
 805 02db 30       		.byte	0x30
 806 02dc C9000000 		.4byte	0xc9
 807 02e0 02       		.uleb128 0x2
 808 02e1 91       		.byte	0x91
 809 02e2 70       		.sleb128 -16
 810 02e3 10       		.uleb128 0x10
 811 02e4 6C656E00 		.ascii	"len\000"
 812 02e8 02       		.byte	0x2
 813 02e9 30       		.byte	0x30
 814 02ea 2C000000 		.4byte	0x2c
 815 02ee 02       		.uleb128 0x2
 816 02ef 91       		.byte	0x91
 817 02f0 6C       		.sleb128 -20
 818 02f1 00       		.byte	0
 819 02f2 12       		.uleb128 0x12
 820 02f3 A4020000 		.4byte	.LASF35
 821 02f7 02       		.byte	0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 18


 822 02f8 38       		.byte	0x38
 823 02f9 00000000 		.4byte	.LFB31
 824 02fd 4C000000 		.4byte	.LFE31-.LFB31
 825 0301 01       		.uleb128 0x1
 826 0302 9C       		.byte	0x9c
 827 0303 16030000 		.4byte	0x316
 828 0307 10       		.uleb128 0x10
 829 0308 63747800 		.ascii	"ctx\000"
 830 030c 02       		.byte	0x2
 831 030d 38       		.byte	0x38
 832 030e 2C020000 		.4byte	0x22c
 833 0312 02       		.uleb128 0x2
 834 0313 91       		.byte	0x91
 835 0314 74       		.sleb128 -12
 836 0315 00       		.byte	0
 837 0316 12       		.uleb128 0x12
 838 0317 06030000 		.4byte	.LASF36
 839 031b 02       		.byte	0x2
 840 031c 42       		.byte	0x42
 841 031d 00000000 		.4byte	.LFB32
 842 0321 22000000 		.4byte	.LFE32-.LFB32
 843 0325 01       		.uleb128 0x1
 844 0326 9C       		.byte	0x9c
 845 0327 48030000 		.4byte	0x348
 846 032b 10       		.uleb128 0x10
 847 032c 63747800 		.ascii	"ctx\000"
 848 0330 02       		.byte	0x2
 849 0331 42       		.byte	0x42
 850 0332 2C020000 		.4byte	0x22c
 851 0336 02       		.uleb128 0x2
 852 0337 91       		.byte	0x91
 853 0338 74       		.sleb128 -12
 854 0339 10       		.uleb128 0x10
 855 033a 6F757400 		.ascii	"out\000"
 856 033e 02       		.byte	0x2
 857 033f 42       		.byte	0x42
 858 0340 D4000000 		.4byte	0xd4
 859 0344 02       		.uleb128 0x2
 860 0345 91       		.byte	0x91
 861 0346 70       		.sleb128 -16
 862 0347 00       		.byte	0
 863 0348 16       		.uleb128 0x16
 864 0349 81020000 		.4byte	.LASF41
 865 034d 02       		.byte	0x2
 866 034e 48       		.byte	0x48
 867 034f 00000000 		.4byte	.LFB33
 868 0353 64000000 		.4byte	.LFE33-.LFB33
 869 0357 01       		.uleb128 0x1
 870 0358 9C       		.byte	0x9c
 871 0359 10       		.uleb128 0x10
 872 035a 63747800 		.ascii	"ctx\000"
 873 035e 02       		.byte	0x2
 874 035f 48       		.byte	0x48
 875 0360 2C020000 		.4byte	0x22c
 876 0364 02       		.uleb128 0x2
 877 0365 91       		.byte	0x91
 878 0366 64       		.sleb128 -28
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 19


 879 0367 10       		.uleb128 0x10
 880 0368 6F757400 		.ascii	"out\000"
 881 036c 02       		.byte	0x2
 882 036d 48       		.byte	0x48
 883 036e D4000000 		.4byte	0xd4
 884 0372 02       		.uleb128 0x2
 885 0373 91       		.byte	0x91
 886 0374 60       		.sleb128 -32
 887 0375 14       		.uleb128 0x14
 888 0376 07020000 		.4byte	.LASF37
 889 037a 02       		.byte	0x2
 890 037b 4A       		.byte	0x4a
 891 037c 88000000 		.4byte	0x88
 892 0380 02       		.uleb128 0x2
 893 0381 91       		.byte	0x91
 894 0382 6F       		.sleb128 -17
 895 0383 00       		.byte	0
 896 0384 00       		.byte	0
 897              		.section	.debug_abbrev,"",%progbits
 898              	.Ldebug_abbrev0:
 899 0000 01       		.uleb128 0x1
 900 0001 11       		.uleb128 0x11
 901 0002 01       		.byte	0x1
 902 0003 25       		.uleb128 0x25
 903 0004 0E       		.uleb128 0xe
 904 0005 13       		.uleb128 0x13
 905 0006 0B       		.uleb128 0xb
 906 0007 03       		.uleb128 0x3
 907 0008 0E       		.uleb128 0xe
 908 0009 1B       		.uleb128 0x1b
 909 000a 0E       		.uleb128 0xe
 910 000b 55       		.uleb128 0x55
 911 000c 17       		.uleb128 0x17
 912 000d 11       		.uleb128 0x11
 913 000e 01       		.uleb128 0x1
 914 000f 10       		.uleb128 0x10
 915 0010 17       		.uleb128 0x17
 916 0011 00       		.byte	0
 917 0012 00       		.byte	0
 918 0013 02       		.uleb128 0x2
 919 0014 24       		.uleb128 0x24
 920 0015 00       		.byte	0
 921 0016 0B       		.uleb128 0xb
 922 0017 0B       		.uleb128 0xb
 923 0018 3E       		.uleb128 0x3e
 924 0019 0B       		.uleb128 0xb
 925 001a 03       		.uleb128 0x3
 926 001b 08       		.uleb128 0x8
 927 001c 00       		.byte	0
 928 001d 00       		.byte	0
 929 001e 03       		.uleb128 0x3
 930 001f 16       		.uleb128 0x16
 931 0020 00       		.byte	0
 932 0021 03       		.uleb128 0x3
 933 0022 0E       		.uleb128 0xe
 934 0023 3A       		.uleb128 0x3a
 935 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 20


 936 0025 3B       		.uleb128 0x3b
 937 0026 0B       		.uleb128 0xb
 938 0027 49       		.uleb128 0x49
 939 0028 13       		.uleb128 0x13
 940 0029 00       		.byte	0
 941 002a 00       		.byte	0
 942 002b 04       		.uleb128 0x4
 943 002c 24       		.uleb128 0x24
 944 002d 00       		.byte	0
 945 002e 0B       		.uleb128 0xb
 946 002f 0B       		.uleb128 0xb
 947 0030 3E       		.uleb128 0x3e
 948 0031 0B       		.uleb128 0xb
 949 0032 03       		.uleb128 0x3
 950 0033 0E       		.uleb128 0xe
 951 0034 00       		.byte	0
 952 0035 00       		.byte	0
 953 0036 05       		.uleb128 0x5
 954 0037 0F       		.uleb128 0xf
 955 0038 00       		.byte	0
 956 0039 0B       		.uleb128 0xb
 957 003a 0B       		.uleb128 0xb
 958 003b 00       		.byte	0
 959 003c 00       		.byte	0
 960 003d 06       		.uleb128 0x6
 961 003e 0F       		.uleb128 0xf
 962 003f 00       		.byte	0
 963 0040 0B       		.uleb128 0xb
 964 0041 0B       		.uleb128 0xb
 965 0042 49       		.uleb128 0x49
 966 0043 13       		.uleb128 0x13
 967 0044 00       		.byte	0
 968 0045 00       		.byte	0
 969 0046 07       		.uleb128 0x7
 970 0047 15       		.uleb128 0x15
 971 0048 01       		.byte	0x1
 972 0049 27       		.uleb128 0x27
 973 004a 19       		.uleb128 0x19
 974 004b 01       		.uleb128 0x1
 975 004c 13       		.uleb128 0x13
 976 004d 00       		.byte	0
 977 004e 00       		.byte	0
 978 004f 08       		.uleb128 0x8
 979 0050 05       		.uleb128 0x5
 980 0051 00       		.byte	0
 981 0052 49       		.uleb128 0x49
 982 0053 13       		.uleb128 0x13
 983 0054 00       		.byte	0
 984 0055 00       		.byte	0
 985 0056 09       		.uleb128 0x9
 986 0057 26       		.uleb128 0x26
 987 0058 00       		.byte	0
 988 0059 49       		.uleb128 0x49
 989 005a 13       		.uleb128 0x13
 990 005b 00       		.byte	0
 991 005c 00       		.byte	0
 992 005d 0A       		.uleb128 0xa
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 21


 993 005e 13       		.uleb128 0x13
 994 005f 01       		.byte	0x1
 995 0060 0B       		.uleb128 0xb
 996 0061 0B       		.uleb128 0xb
 997 0062 3A       		.uleb128 0x3a
 998 0063 0B       		.uleb128 0xb
 999 0064 3B       		.uleb128 0x3b
 1000 0065 0B       		.uleb128 0xb
 1001 0066 01       		.uleb128 0x1
 1002 0067 13       		.uleb128 0x13
 1003 0068 00       		.byte	0
 1004 0069 00       		.byte	0
 1005 006a 0B       		.uleb128 0xb
 1006 006b 0D       		.uleb128 0xd
 1007 006c 00       		.byte	0
 1008 006d 03       		.uleb128 0x3
 1009 006e 0E       		.uleb128 0xe
 1010 006f 3A       		.uleb128 0x3a
 1011 0070 0B       		.uleb128 0xb
 1012 0071 3B       		.uleb128 0x3b
 1013 0072 0B       		.uleb128 0xb
 1014 0073 49       		.uleb128 0x49
 1015 0074 13       		.uleb128 0x13
 1016 0075 38       		.uleb128 0x38
 1017 0076 0B       		.uleb128 0xb
 1018 0077 00       		.byte	0
 1019 0078 00       		.byte	0
 1020 0079 0C       		.uleb128 0xc
 1021 007a 0D       		.uleb128 0xd
 1022 007b 00       		.byte	0
 1023 007c 03       		.uleb128 0x3
 1024 007d 08       		.uleb128 0x8
 1025 007e 3A       		.uleb128 0x3a
 1026 007f 0B       		.uleb128 0xb
 1027 0080 3B       		.uleb128 0x3b
 1028 0081 0B       		.uleb128 0xb
 1029 0082 49       		.uleb128 0x49
 1030 0083 13       		.uleb128 0x13
 1031 0084 38       		.uleb128 0x38
 1032 0085 0B       		.uleb128 0xb
 1033 0086 00       		.byte	0
 1034 0087 00       		.byte	0
 1035 0088 0D       		.uleb128 0xd
 1036 0089 01       		.uleb128 0x1
 1037 008a 01       		.byte	0x1
 1038 008b 49       		.uleb128 0x49
 1039 008c 13       		.uleb128 0x13
 1040 008d 01       		.uleb128 0x1
 1041 008e 13       		.uleb128 0x13
 1042 008f 00       		.byte	0
 1043 0090 00       		.byte	0
 1044 0091 0E       		.uleb128 0xe
 1045 0092 21       		.uleb128 0x21
 1046 0093 00       		.byte	0
 1047 0094 49       		.uleb128 0x49
 1048 0095 13       		.uleb128 0x13
 1049 0096 2F       		.uleb128 0x2f
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 22


 1050 0097 0B       		.uleb128 0xb
 1051 0098 00       		.byte	0
 1052 0099 00       		.byte	0
 1053 009a 0F       		.uleb128 0xf
 1054 009b 2E       		.uleb128 0x2e
 1055 009c 01       		.byte	0x1
 1056 009d 03       		.uleb128 0x3
 1057 009e 0E       		.uleb128 0xe
 1058 009f 3A       		.uleb128 0x3a
 1059 00a0 0B       		.uleb128 0xb
 1060 00a1 3B       		.uleb128 0x3b
 1061 00a2 0B       		.uleb128 0xb
 1062 00a3 27       		.uleb128 0x27
 1063 00a4 19       		.uleb128 0x19
 1064 00a5 11       		.uleb128 0x11
 1065 00a6 01       		.uleb128 0x1
 1066 00a7 12       		.uleb128 0x12
 1067 00a8 06       		.uleb128 0x6
 1068 00a9 40       		.uleb128 0x40
 1069 00aa 18       		.uleb128 0x18
 1070 00ab 9642     		.uleb128 0x2116
 1071 00ad 19       		.uleb128 0x19
 1072 00ae 01       		.uleb128 0x1
 1073 00af 13       		.uleb128 0x13
 1074 00b0 00       		.byte	0
 1075 00b1 00       		.byte	0
 1076 00b2 10       		.uleb128 0x10
 1077 00b3 05       		.uleb128 0x5
 1078 00b4 00       		.byte	0
 1079 00b5 03       		.uleb128 0x3
 1080 00b6 08       		.uleb128 0x8
 1081 00b7 3A       		.uleb128 0x3a
 1082 00b8 0B       		.uleb128 0xb
 1083 00b9 3B       		.uleb128 0x3b
 1084 00ba 0B       		.uleb128 0xb
 1085 00bb 49       		.uleb128 0x49
 1086 00bc 13       		.uleb128 0x13
 1087 00bd 02       		.uleb128 0x2
 1088 00be 18       		.uleb128 0x18
 1089 00bf 00       		.byte	0
 1090 00c0 00       		.byte	0
 1091 00c1 11       		.uleb128 0x11
 1092 00c2 35       		.uleb128 0x35
 1093 00c3 00       		.byte	0
 1094 00c4 00       		.byte	0
 1095 00c5 00       		.byte	0
 1096 00c6 12       		.uleb128 0x12
 1097 00c7 2E       		.uleb128 0x2e
 1098 00c8 01       		.byte	0x1
 1099 00c9 3F       		.uleb128 0x3f
 1100 00ca 19       		.uleb128 0x19
 1101 00cb 03       		.uleb128 0x3
 1102 00cc 0E       		.uleb128 0xe
 1103 00cd 3A       		.uleb128 0x3a
 1104 00ce 0B       		.uleb128 0xb
 1105 00cf 3B       		.uleb128 0x3b
 1106 00d0 0B       		.uleb128 0xb
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 23


 1107 00d1 27       		.uleb128 0x27
 1108 00d2 19       		.uleb128 0x19
 1109 00d3 11       		.uleb128 0x11
 1110 00d4 01       		.uleb128 0x1
 1111 00d5 12       		.uleb128 0x12
 1112 00d6 06       		.uleb128 0x6
 1113 00d7 40       		.uleb128 0x40
 1114 00d8 18       		.uleb128 0x18
 1115 00d9 9642     		.uleb128 0x2116
 1116 00db 19       		.uleb128 0x19
 1117 00dc 01       		.uleb128 0x1
 1118 00dd 13       		.uleb128 0x13
 1119 00de 00       		.byte	0
 1120 00df 00       		.byte	0
 1121 00e0 13       		.uleb128 0x13
 1122 00e1 05       		.uleb128 0x5
 1123 00e2 00       		.byte	0
 1124 00e3 03       		.uleb128 0x3
 1125 00e4 0E       		.uleb128 0xe
 1126 00e5 3A       		.uleb128 0x3a
 1127 00e6 0B       		.uleb128 0xb
 1128 00e7 3B       		.uleb128 0x3b
 1129 00e8 0B       		.uleb128 0xb
 1130 00e9 49       		.uleb128 0x49
 1131 00ea 13       		.uleb128 0x13
 1132 00eb 02       		.uleb128 0x2
 1133 00ec 18       		.uleb128 0x18
 1134 00ed 00       		.byte	0
 1135 00ee 00       		.byte	0
 1136 00ef 14       		.uleb128 0x14
 1137 00f0 34       		.uleb128 0x34
 1138 00f1 00       		.byte	0
 1139 00f2 03       		.uleb128 0x3
 1140 00f3 0E       		.uleb128 0xe
 1141 00f4 3A       		.uleb128 0x3a
 1142 00f5 0B       		.uleb128 0xb
 1143 00f6 3B       		.uleb128 0x3b
 1144 00f7 0B       		.uleb128 0xb
 1145 00f8 49       		.uleb128 0x49
 1146 00f9 13       		.uleb128 0x13
 1147 00fa 02       		.uleb128 0x2
 1148 00fb 18       		.uleb128 0x18
 1149 00fc 00       		.byte	0
 1150 00fd 00       		.byte	0
 1151 00fe 15       		.uleb128 0x15
 1152 00ff 34       		.uleb128 0x34
 1153 0100 00       		.byte	0
 1154 0101 03       		.uleb128 0x3
 1155 0102 08       		.uleb128 0x8
 1156 0103 3A       		.uleb128 0x3a
 1157 0104 0B       		.uleb128 0xb
 1158 0105 3B       		.uleb128 0x3b
 1159 0106 0B       		.uleb128 0xb
 1160 0107 49       		.uleb128 0x49
 1161 0108 13       		.uleb128 0x13
 1162 0109 02       		.uleb128 0x2
 1163 010a 18       		.uleb128 0x18
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 24


 1164 010b 00       		.byte	0
 1165 010c 00       		.byte	0
 1166 010d 16       		.uleb128 0x16
 1167 010e 2E       		.uleb128 0x2e
 1168 010f 01       		.byte	0x1
 1169 0110 3F       		.uleb128 0x3f
 1170 0111 19       		.uleb128 0x19
 1171 0112 03       		.uleb128 0x3
 1172 0113 0E       		.uleb128 0xe
 1173 0114 3A       		.uleb128 0x3a
 1174 0115 0B       		.uleb128 0xb
 1175 0116 3B       		.uleb128 0x3b
 1176 0117 0B       		.uleb128 0xb
 1177 0118 27       		.uleb128 0x27
 1178 0119 19       		.uleb128 0x19
 1179 011a 11       		.uleb128 0x11
 1180 011b 01       		.uleb128 0x1
 1181 011c 12       		.uleb128 0x12
 1182 011d 06       		.uleb128 0x6
 1183 011e 40       		.uleb128 0x40
 1184 011f 18       		.uleb128 0x18
 1185 0120 9642     		.uleb128 0x2116
 1186 0122 19       		.uleb128 0x19
 1187 0123 00       		.byte	0
 1188 0124 00       		.byte	0
 1189 0125 00       		.byte	0
 1190              		.section	.debug_aranges,"",%progbits
 1191 0000 54000000 		.4byte	0x54
 1192 0004 0200     		.2byte	0x2
 1193 0006 00000000 		.4byte	.Ldebug_info0
 1194 000a 04       		.byte	0x4
 1195 000b 00       		.byte	0
 1196 000c 0000     		.2byte	0
 1197 000e 0000     		.2byte	0
 1198 0010 00000000 		.4byte	.LFB0
 1199 0014 24000000 		.4byte	.LFE0-.LFB0
 1200 0018 00000000 		.4byte	.LFB27
 1201 001c 30000000 		.4byte	.LFE27-.LFB27
 1202 0020 00000000 		.4byte	.LFB28
 1203 0024 40000000 		.4byte	.LFE28-.LFB28
 1204 0028 00000000 		.4byte	.LFB29
 1205 002c 22000000 		.4byte	.LFE29-.LFB29
 1206 0030 00000000 		.4byte	.LFB30
 1207 0034 3C000000 		.4byte	.LFE30-.LFB30
 1208 0038 00000000 		.4byte	.LFB31
 1209 003c 4C000000 		.4byte	.LFE31-.LFB31
 1210 0040 00000000 		.4byte	.LFB32
 1211 0044 22000000 		.4byte	.LFE32-.LFB32
 1212 0048 00000000 		.4byte	.LFB33
 1213 004c 64000000 		.4byte	.LFE33-.LFB33
 1214 0050 00000000 		.4byte	0
 1215 0054 00000000 		.4byte	0
 1216              		.section	.debug_ranges,"",%progbits
 1217              	.Ldebug_ranges0:
 1218 0000 00000000 		.4byte	.LFB0
 1219 0004 24000000 		.4byte	.LFE0
 1220 0008 00000000 		.4byte	.LFB27
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 25


 1221 000c 30000000 		.4byte	.LFE27
 1222 0010 00000000 		.4byte	.LFB28
 1223 0014 40000000 		.4byte	.LFE28
 1224 0018 00000000 		.4byte	.LFB29
 1225 001c 22000000 		.4byte	.LFE29
 1226 0020 00000000 		.4byte	.LFB30
 1227 0024 3C000000 		.4byte	.LFE30
 1228 0028 00000000 		.4byte	.LFB31
 1229 002c 4C000000 		.4byte	.LFE31
 1230 0030 00000000 		.4byte	.LFB32
 1231 0034 22000000 		.4byte	.LFE32
 1232 0038 00000000 		.4byte	.LFB33
 1233 003c 64000000 		.4byte	.LFE33
 1234 0040 00000000 		.4byte	0
 1235 0044 00000000 		.4byte	0
 1236              		.section	.debug_line,"",%progbits
 1237              	.Ldebug_line0:
 1238 0000 6C020000 		.section	.debug_str,"MS",%progbits,1
 1238      0200BD01 
 1238      00000201 
 1238      FB0E0D00 
 1238      01010101 
 1239              	.LASF40:
 1240 0000 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 1240      726F7062 
 1240      6F785C36 
 1240      5F6B7572 
 1240      735C6469 
 1241 002f 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 1241      41424C45 
 1241      5C424C45 
 1241      5F44796E 
 1241      616D6963 
 1242 0060 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 1242      796E616D 
 1242      69635F47 
 1242      4154545F 
 1242      53657276 
 1243              	.LASF5:
 1244 008c 5F5F7569 		.ascii	"__uint8_t\000"
 1244      6E74385F 
 1244      7400
 1245              	.LASF38:
 1246 0096 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1246      43313120 
 1246      352E342E 
 1246      31203230 
 1246      31363036 
 1247 00c9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1247      20726576 
 1247      6973696F 
 1247      6E203233 
 1247      37373135 
 1248 00fc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 1248      66756E63 
 1248      74696F6E 
 1248      2D736563 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 26


 1248      74696F6E 
 1249 012f 652D706F 		.ascii	"e-pointer\000"
 1249      696E7465 
 1249      7200
 1250              	.LASF23:
 1251 0139 62756666 		.ascii	"buffer\000"
 1251      657200
 1252              	.LASF24:
 1253 0140 75736564 		.ascii	"used\000"
 1253      00
 1254              	.LASF17:
 1255 0145 656E6372 		.ascii	"encrypt\000"
 1255      79707400 
 1256              	.LASF8:
 1257 014d 73686F72 		.ascii	"short unsigned int\000"
 1257      7420756E 
 1257      7369676E 
 1257      65642069 
 1257      6E7400
 1258              	.LASF34:
 1259 0160 64617461 		.ascii	"data\000"
 1259      00
 1260              	.LASF18:
 1261 0165 64656372 		.ascii	"decrypt\000"
 1261      79707400 
 1262              	.LASF29:
 1263 016d 6362636D 		.ascii	"cbcmac_process\000"
 1263      61635F70 
 1263      726F6365 
 1263      737300
 1264              	.LASF21:
 1265 017c 626C6F63 		.ascii	"block\000"
 1265      6B00
 1266              	.LASF11:
 1267 0182 6C6F6E67 		.ascii	"long long unsigned int\000"
 1267      206C6F6E 
 1267      6720756E 
 1267      7369676E 
 1267      65642069 
 1268              	.LASF26:
 1269 0199 63665F63 		.ascii	"cf_cbcmac_stream_init\000"
 1269      62636D61 
 1269      635F7374 
 1269      7265616D 
 1269      5F696E69 
 1270              	.LASF6:
 1271 01af 756E7369 		.ascii	"unsigned char\000"
 1271      676E6564 
 1271      20636861 
 1271      7200
 1272              	.LASF19:
 1273 01bd 63665F70 		.ascii	"cf_prp\000"
 1273      727000
 1274              	.LASF10:
 1275 01c4 6C6F6E67 		.ascii	"long unsigned int\000"
 1275      20756E73 
 1275      69676E65 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 27


 1275      6420696E 
 1275      7400
 1276              	.LASF39:
 1277 01d6 6362636D 		.ascii	"cbcmac.c\000"
 1277      61632E63 
 1277      00
 1278              	.LASF4:
 1279 01df 73697A65 		.ascii	"size_t\000"
 1279      5F7400
 1280              	.LASF15:
 1281 01e6 63665F70 		.ascii	"cf_prp_block\000"
 1281      72705F62 
 1281      6C6F636B 
 1281      00
 1282              	.LASF0:
 1283 01f3 756E7369 		.ascii	"unsigned int\000"
 1283      676E6564 
 1283      20696E74 
 1283      00
 1284              	.LASF20:
 1285 0200 70727063 		.ascii	"prpctx\000"
 1285      747800
 1286              	.LASF37:
 1287 0207 6E706164 		.ascii	"npad\000"
 1287      00
 1288              	.LASF12:
 1289 020c 75696E74 		.ascii	"uint8_t\000"
 1289      385F7400 
 1290              	.LASF27:
 1291 0214 63665F63 		.ascii	"cf_cbcmac_stream_reset\000"
 1291      62636D61 
 1291      635F7374 
 1291      7265616D 
 1291      5F726573 
 1292              	.LASF25:
 1293 022b 63665F63 		.ascii	"cf_cbcmac_stream\000"
 1293      62636D61 
 1293      635F7374 
 1293      7265616D 
 1293      00
 1294              	.LASF33:
 1295 023c 63665F63 		.ascii	"cf_cbcmac_stream_update\000"
 1295      62636D61 
 1295      635F7374 
 1295      7265616D 
 1295      5F757064 
 1296              	.LASF28:
 1297 0254 6D656D5F 		.ascii	"mem_clean\000"
 1297      636C6561 
 1297      6E00
 1298              	.LASF13:
 1299 025e 73697A65 		.ascii	"sizetype\000"
 1299      74797065 
 1299      00
 1300              	.LASF22:
 1301 0267 63665F63 		.ascii	"cf_cbc\000"
 1301      626300
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccsQDndW.s 			page 28


 1302              	.LASF1:
 1303 026e 6C6F6E67 		.ascii	"long long int\000"
 1303      206C6F6E 
 1303      6720696E 
 1303      7400
 1304              	.LASF14:
 1305 027c 63686172 		.ascii	"char\000"
 1305      00
 1306              	.LASF41:
 1307 0281 63665F63 		.ascii	"cf_cbcmac_stream_pad_final\000"
 1307      62636D61 
 1307      635F7374 
 1307      7265616D 
 1307      5F706164 
 1308              	.LASF16:
 1309 029c 626C6F63 		.ascii	"blocksz\000"
 1309      6B737A00 
 1310              	.LASF35:
 1311 02a4 63665F63 		.ascii	"cf_cbcmac_stream_finish_block_zero\000"
 1311      62636D61 
 1311      635F7374 
 1311      7265616D 
 1311      5F66696E 
 1312              	.LASF7:
 1313 02c7 73686F72 		.ascii	"short int\000"
 1313      7420696E 
 1313      7400
 1314              	.LASF32:
 1315 02d1 6F757470 		.ascii	"output\000"
 1315      757400
 1316              	.LASF30:
 1317 02d8 76637478 		.ascii	"vctx\000"
 1317      00
 1318              	.LASF9:
 1319 02dd 6C6F6E67 		.ascii	"long int\000"
 1319      20696E74 
 1319      00
 1320              	.LASF31:
 1321 02e6 69765F7A 		.ascii	"iv_zero\000"
 1321      65726F00 
 1322              	.LASF2:
 1323 02ee 6C6F6E67 		.ascii	"long double\000"
 1323      20646F75 
 1323      626C6500 
 1324              	.LASF3:
 1325 02fa 7369676E 		.ascii	"signed char\000"
 1325      65642063 
 1325      68617200 
 1326              	.LASF36:
 1327 0306 63665F63 		.ascii	"cf_cbcmac_stream_nopad_final\000"
 1327      62636D61 
 1327      635F7374 
 1327      7265616D 
 1327      5F6E6F70 
 1328              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
