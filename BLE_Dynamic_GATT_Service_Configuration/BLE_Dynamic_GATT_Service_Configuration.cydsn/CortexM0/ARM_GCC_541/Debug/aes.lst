ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"aes.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mem_clean,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	mem_clean, %function
  24              	mem_clean:
  25              	.LFB0:
  26              		.file 1 "handy.h"
   1:handy.h       **** #ifndef HANDY_H
   2:handy.h       **** #define HANDY_H
   3:handy.h       **** 
   4:handy.h       **** #include <stddef.h>
   5:handy.h       **** #include <stdint.h>
   6:handy.h       **** #include <string.h>
   7:handy.h       **** 
   8:handy.h       **** /*
   9:handy.h       ****  * Handy CPP defines and C inline functions.
  10:handy.h       ****  */
  11:handy.h       **** 
  12:handy.h       **** /* Evaluates to the number of items in array-type variable arr. */
  13:handy.h       **** #define ARRAYCOUNT(arr) (sizeof arr / sizeof arr[0])
  14:handy.h       **** 
  15:handy.h       **** /* Normal MIN/MAX macros.  Evaluate argument expressions only once. */
  16:handy.h       **** #ifndef MIN
  17:handy.h       ****   #define MIN(x, y) \
  18:handy.h       ****     ({ typeof (x) __x = (x); \
  19:handy.h       ****        typeof (y) __y = (y); \
  20:handy.h       ****        __x < __y ? __x : __y; })
  21:handy.h       **** #endif
  22:handy.h       **** #ifndef MAX
  23:handy.h       ****   #define MAX(x, y) \
  24:handy.h       ****     ({ typeof (x) __x = (x); \
  25:handy.h       ****        typeof (y) __y = (y); \
  26:handy.h       ****        __x > __y ? __x : __y; })
  27:handy.h       **** #endif
  28:handy.h       **** 
  29:handy.h       **** /* Swap two values.  Uses GCC type inference magic. */
  30:handy.h       **** #ifndef SWAP
  31:handy.h       ****   #define SWAP(x, y) \
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 2


  32:handy.h       ****     do { \
  33:handy.h       ****       typeof (x) __tmp = (x); \
  34:handy.h       ****       (x) = (y); \
  35:handy.h       ****       (y) = __tmp; \
  36:handy.h       ****     } while (0)
  37:handy.h       **** #endif
  38:handy.h       **** 
  39:handy.h       **** /** Stringify its argument. */
  40:handy.h       **** #define STRINGIFY(x) STRINGIFY_(x)
  41:handy.h       **** #define STRINGIFY_(x) #x
  42:handy.h       **** 
  43:handy.h       **** /* Error handling macros.
  44:handy.h       ****  *
  45:handy.h       ****  * These expect a zero = success, non-zero = error convention.
  46:handy.h       ****  */
  47:handy.h       **** 
  48:handy.h       **** /** Error: return. 
  49:handy.h       ****  *  
  50:handy.h       ****  *  If the expression fails, return the error from this function. */
  51:handy.h       **** #define ER(expr) do { typeof (expr) err_ = (expr); if (err_) return err_; } while (0)
  52:handy.h       **** 
  53:handy.h       **** /** Error: goto.
  54:handy.h       ****  *
  55:handy.h       ****  *  If the expression fails, goto x_err.  Assumes defn of label
  56:handy.h       ****  *  x_err and 'error_type err'. */
  57:handy.h       **** #define EG(expr) do { err = (expr); if (err) goto x_err; } while (0)
  58:handy.h       **** 
  59:handy.h       **** /** Like memset(ptr, 0, len), but not allowed to be removed by
  60:handy.h       ****  *  compilers. */
  61:handy.h       **** static inline void mem_clean(volatile void *v, size_t len)
  62:handy.h       **** {
  27              		.loc 1 62 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              		.cfi_def_cfa_offset 16
  36 0004 0190     		str	r0, [sp, #4]
  37 0006 0091     		str	r1, [sp]
  63:handy.h       ****   if (len)
  38              		.loc 1 63 0
  39 0008 009B     		ldr	r3, [sp]
  40 000a 002B     		cmp	r3, #0
  41 000c 07D0     		beq	.L3
  64:handy.h       ****   {
  65:handy.h       ****     memset((void *) v, 0, len);
  42              		.loc 1 65 0
  43 000e 009A     		ldr	r2, [sp]
  44 0010 019B     		ldr	r3, [sp, #4]
  45 0012 0021     		movs	r1, #0
  46 0014 1800     		movs	r0, r3
  47 0016 FFF7FEFF 		bl	memset
  66:handy.h       ****     (void) *((volatile uint8_t *) v);
  48              		.loc 1 66 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 3


  49 001a 019B     		ldr	r3, [sp, #4]
  50 001c 1B78     		ldrb	r3, [r3]
  51              	.L3:
  67:handy.h       ****   }
  68:handy.h       **** }
  52              		.loc 1 68 0
  53 001e C046     		nop
  54 0020 03B0     		add	sp, sp, #12
  55              		@ sp needed
  56 0022 00BD     		pop	{pc}
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	mem_clean, .-mem_clean
  60              		.section	.text.rotr32,"ax",%progbits
  61              		.align	2
  62              		.code	16
  63              		.thumb_func
  64              		.type	rotr32, %function
  65              	rotr32:
  66              	.LFB2:
  67              		.file 2 "bitops.h"
   1:bitops.h      **** /*
   2:bitops.h      ****  * cifra - embedded cryptography library
   3:bitops.h      ****  * Written in 2014 by Joseph Birr-Pixton <jpixton@gmail.com>
   4:bitops.h      ****  *
   5:bitops.h      ****  * To the extent possible under law, the author(s) have dedicated all
   6:bitops.h      ****  * copyright and related and neighboring rights to this software to the
   7:bitops.h      ****  * public domain worldwide. This software is distributed without any
   8:bitops.h      ****  * warranty.
   9:bitops.h      ****  *
  10:bitops.h      ****  * You should have received a copy of the CC0 Public Domain Dedication
  11:bitops.h      ****  * along with this software. If not, see
  12:bitops.h      ****  * <http://creativecommons.org/publicdomain/zero/1.0/>.
  13:bitops.h      ****  */
  14:bitops.h      **** 
  15:bitops.h      **** #ifndef BITOPS_H
  16:bitops.h      **** #define BITOPS_H
  17:bitops.h      **** 
  18:bitops.h      **** #include <stdint.h>
  19:bitops.h      **** #include <stddef.h>
  20:bitops.h      **** 
  21:bitops.h      **** /* Assorted bitwise and common operations used in ciphers. */
  22:bitops.h      **** 
  23:bitops.h      **** /** Circularly rotate right x by n bits.
  24:bitops.h      ****  *  0 > n > 32. */
  25:bitops.h      **** static inline uint32_t rotr32(uint32_t x, unsigned n)
  26:bitops.h      **** {
  68              		.loc 2 26 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 8
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 82B0     		sub	sp, sp, #8
  74              		.cfi_def_cfa_offset 8
  75 0002 0190     		str	r0, [sp, #4]
  76 0004 0091     		str	r1, [sp]
  27:bitops.h      ****   return (x >> n) | (x << (32 - n));
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 4


  77              		.loc 2 27 0
  78 0006 019A     		ldr	r2, [sp, #4]
  79 0008 009B     		ldr	r3, [sp]
  80 000a DA41     		rors	r2, r2, r3
  81 000c 1300     		movs	r3, r2
  28:bitops.h      **** }
  82              		.loc 2 28 0
  83 000e 1800     		movs	r0, r3
  84 0010 02B0     		add	sp, sp, #8
  85              		@ sp needed
  86 0012 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE2:
  89              		.size	rotr32, .-rotr32
  90              		.section	.text.rotl32,"ax",%progbits
  91              		.align	2
  92              		.code	16
  93              		.thumb_func
  94              		.type	rotl32, %function
  95              	rotl32:
  96              	.LFB3:
  29:bitops.h      **** 
  30:bitops.h      **** /** Circularly rotate left x by n bits.
  31:bitops.h      ****  *  0 > n > 32. */
  32:bitops.h      **** static inline uint32_t rotl32(uint32_t x, unsigned n)
  33:bitops.h      **** {
  97              		.loc 2 33 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 8
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 82B0     		sub	sp, sp, #8
 103              		.cfi_def_cfa_offset 8
 104 0002 0190     		str	r0, [sp, #4]
 105 0004 0091     		str	r1, [sp]
  34:bitops.h      ****   return (x << n) | (x >> (32 - n));
 106              		.loc 2 34 0
 107 0006 009B     		ldr	r3, [sp]
 108 0008 2022     		movs	r2, #32
 109 000a D31A     		subs	r3, r2, r3
 110 000c 019A     		ldr	r2, [sp, #4]
 111 000e DA41     		rors	r2, r2, r3
 112 0010 1300     		movs	r3, r2
  35:bitops.h      **** }
 113              		.loc 2 35 0
 114 0012 1800     		movs	r0, r3
 115 0014 02B0     		add	sp, sp, #8
 116              		@ sp needed
 117 0016 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE3:
 120              		.size	rotl32, .-rotl32
 121              		.section	.text.read32_be,"ax",%progbits
 122              		.align	2
 123              		.code	16
 124              		.thumb_func
 125              		.type	read32_be, %function
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 5


 126              	read32_be:
 127              	.LFB6:
  36:bitops.h      **** 
  37:bitops.h      **** /** Circularly rotate right x by n bits.
  38:bitops.h      ****  *  0 > n > 64. */
  39:bitops.h      **** static inline uint64_t rotr64(uint64_t x, unsigned n)
  40:bitops.h      **** {
  41:bitops.h      ****   return (x >> n) | (x << (64 - n));
  42:bitops.h      **** }
  43:bitops.h      **** 
  44:bitops.h      **** /** Circularly rotate left x by n bits.
  45:bitops.h      ****  *  0 > n > 64. */
  46:bitops.h      **** static inline uint64_t rotl64(uint64_t x, unsigned n)
  47:bitops.h      **** {
  48:bitops.h      ****   return (x << n) | (x >> (64 - n));
  49:bitops.h      **** }
  50:bitops.h      **** 
  51:bitops.h      **** /** Read 4 bytes from buf, as a 32-bit big endian quantity. */
  52:bitops.h      **** static inline uint32_t read32_be(const uint8_t buf[4])
  53:bitops.h      **** {
 128              		.loc 2 53 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 8
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0000 82B0     		sub	sp, sp, #8
 134              		.cfi_def_cfa_offset 8
 135 0002 0190     		str	r0, [sp, #4]
  54:bitops.h      ****   return (buf[0] << 24) |
 136              		.loc 2 54 0
 137 0004 019B     		ldr	r3, [sp, #4]
 138 0006 1B78     		ldrb	r3, [r3]
 139 0008 1A06     		lsls	r2, r3, #24
  55:bitops.h      ****          (buf[1] << 16) |
 140              		.loc 2 55 0
 141 000a 019B     		ldr	r3, [sp, #4]
 142 000c 0133     		adds	r3, r3, #1
 143 000e 1B78     		ldrb	r3, [r3]
 144 0010 1B04     		lsls	r3, r3, #16
  54:bitops.h      ****   return (buf[0] << 24) |
 145              		.loc 2 54 0
 146 0012 1A43     		orrs	r2, r3
  56:bitops.h      ****          (buf[2] << 8) |
 147              		.loc 2 56 0
 148 0014 019B     		ldr	r3, [sp, #4]
 149 0016 0233     		adds	r3, r3, #2
 150 0018 1B78     		ldrb	r3, [r3]
 151 001a 1B02     		lsls	r3, r3, #8
  55:bitops.h      ****          (buf[1] << 16) |
 152              		.loc 2 55 0
 153 001c 1343     		orrs	r3, r2
  57:bitops.h      ****          (buf[3]);
 154              		.loc 2 57 0
 155 001e 019A     		ldr	r2, [sp, #4]
 156 0020 0332     		adds	r2, r2, #3
 157 0022 1278     		ldrb	r2, [r2]
  56:bitops.h      ****          (buf[2] << 8) |
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 6


 158              		.loc 2 56 0
 159 0024 1343     		orrs	r3, r2
  58:bitops.h      **** }
 160              		.loc 2 58 0
 161 0026 1800     		movs	r0, r3
 162 0028 02B0     		add	sp, sp, #8
 163              		@ sp needed
 164 002a 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE6:
 167              		.size	read32_be, .-read32_be
 168              		.section	.text.write32_be,"ax",%progbits
 169              		.align	2
 170              		.code	16
 171              		.thumb_func
 172              		.type	write32_be, %function
 173              	write32_be:
 174              	.LFB10:
  59:bitops.h      **** 
  60:bitops.h      **** /** Read 4 bytes from buf, as a 32-bit little endian quantity. */
  61:bitops.h      **** static inline uint32_t read32_le(const uint8_t buf[4])
  62:bitops.h      **** {
  63:bitops.h      ****   return (buf[3] << 24) |
  64:bitops.h      ****          (buf[2] << 16) |
  65:bitops.h      ****          (buf[1] << 8) |
  66:bitops.h      ****          (buf[0]);
  67:bitops.h      **** }
  68:bitops.h      **** 
  69:bitops.h      **** /** Read 8 bytes from buf, as a 64-bit big endian quantity. */
  70:bitops.h      **** static inline uint64_t read64_be(const uint8_t buf[8])
  71:bitops.h      **** {
  72:bitops.h      ****   uint32_t hi = read32_be(buf),
  73:bitops.h      ****            lo = read32_be(buf + 4);
  74:bitops.h      ****   return ((uint64_t)hi) << 32 |
  75:bitops.h      ****          lo;
  76:bitops.h      **** }
  77:bitops.h      **** 
  78:bitops.h      **** /** Read 8 bytes from buf, as a 64-bit little endian quantity. */
  79:bitops.h      **** static inline uint64_t read64_le(const uint8_t buf[8])
  80:bitops.h      **** {
  81:bitops.h      ****   uint32_t hi = read32_le(buf + 4),
  82:bitops.h      ****            lo = read32_le(buf);
  83:bitops.h      ****   return ((uint64_t)hi) << 32 |
  84:bitops.h      ****          lo;
  85:bitops.h      **** }
  86:bitops.h      **** 
  87:bitops.h      **** /** Encode v as a 32-bit big endian quantity into buf. */
  88:bitops.h      **** static inline void write32_be(uint32_t v, uint8_t buf[4])
  89:bitops.h      **** {
 175              		.loc 2 89 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 82B0     		sub	sp, sp, #8
 181              		.cfi_def_cfa_offset 8
 182 0002 0190     		str	r0, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 7


 183 0004 0091     		str	r1, [sp]
  90:bitops.h      ****   *buf++ = (v >> 24) & 0xff;
 184              		.loc 2 90 0
 185 0006 009B     		ldr	r3, [sp]
 186 0008 5A1C     		adds	r2, r3, #1
 187 000a 0092     		str	r2, [sp]
 188 000c 019A     		ldr	r2, [sp, #4]
 189 000e 120E     		lsrs	r2, r2, #24
 190 0010 D2B2     		uxtb	r2, r2
 191 0012 1A70     		strb	r2, [r3]
  91:bitops.h      ****   *buf++ = (v >> 16) & 0xff;
 192              		.loc 2 91 0
 193 0014 009B     		ldr	r3, [sp]
 194 0016 5A1C     		adds	r2, r3, #1
 195 0018 0092     		str	r2, [sp]
 196 001a 019A     		ldr	r2, [sp, #4]
 197 001c 120C     		lsrs	r2, r2, #16
 198 001e D2B2     		uxtb	r2, r2
 199 0020 1A70     		strb	r2, [r3]
  92:bitops.h      ****   *buf++ = (v >> 8) & 0xff;
 200              		.loc 2 92 0
 201 0022 009B     		ldr	r3, [sp]
 202 0024 5A1C     		adds	r2, r3, #1
 203 0026 0092     		str	r2, [sp]
 204 0028 019A     		ldr	r2, [sp, #4]
 205 002a 120A     		lsrs	r2, r2, #8
 206 002c D2B2     		uxtb	r2, r2
 207 002e 1A70     		strb	r2, [r3]
  93:bitops.h      ****   *buf   = v & 0xff;
 208              		.loc 2 93 0
 209 0030 019B     		ldr	r3, [sp, #4]
 210 0032 DAB2     		uxtb	r2, r3
 211 0034 009B     		ldr	r3, [sp]
 212 0036 1A70     		strb	r2, [r3]
  94:bitops.h      **** }
 213              		.loc 2 94 0
 214 0038 C046     		nop
 215 003a 02B0     		add	sp, sp, #8
 216              		@ sp needed
 217 003c 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE10:
 220              		.size	write32_be, .-write32_be
 221 003e C046     		.section	.rodata
 222              		.align	2
 223              		.type	S, %object
 224              		.size	S, 256
 225              	S:
 226 0000 63       		.byte	99
 227 0001 7C       		.byte	124
 228 0002 77       		.byte	119
 229 0003 7B       		.byte	123
 230 0004 F2       		.byte	-14
 231 0005 6B       		.byte	107
 232 0006 6F       		.byte	111
 233 0007 C5       		.byte	-59
 234 0008 30       		.byte	48
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 8


 235 0009 01       		.byte	1
 236 000a 67       		.byte	103
 237 000b 2B       		.byte	43
 238 000c FE       		.byte	-2
 239 000d D7       		.byte	-41
 240 000e AB       		.byte	-85
 241 000f 76       		.byte	118
 242 0010 CA       		.byte	-54
 243 0011 82       		.byte	-126
 244 0012 C9       		.byte	-55
 245 0013 7D       		.byte	125
 246 0014 FA       		.byte	-6
 247 0015 59       		.byte	89
 248 0016 47       		.byte	71
 249 0017 F0       		.byte	-16
 250 0018 AD       		.byte	-83
 251 0019 D4       		.byte	-44
 252 001a A2       		.byte	-94
 253 001b AF       		.byte	-81
 254 001c 9C       		.byte	-100
 255 001d A4       		.byte	-92
 256 001e 72       		.byte	114
 257 001f C0       		.byte	-64
 258 0020 B7       		.byte	-73
 259 0021 FD       		.byte	-3
 260 0022 93       		.byte	-109
 261 0023 26       		.byte	38
 262 0024 36       		.byte	54
 263 0025 3F       		.byte	63
 264 0026 F7       		.byte	-9
 265 0027 CC       		.byte	-52
 266 0028 34       		.byte	52
 267 0029 A5       		.byte	-91
 268 002a E5       		.byte	-27
 269 002b F1       		.byte	-15
 270 002c 71       		.byte	113
 271 002d D8       		.byte	-40
 272 002e 31       		.byte	49
 273 002f 15       		.byte	21
 274 0030 04       		.byte	4
 275 0031 C7       		.byte	-57
 276 0032 23       		.byte	35
 277 0033 C3       		.byte	-61
 278 0034 18       		.byte	24
 279 0035 96       		.byte	-106
 280 0036 05       		.byte	5
 281 0037 9A       		.byte	-102
 282 0038 07       		.byte	7
 283 0039 12       		.byte	18
 284 003a 80       		.byte	-128
 285 003b E2       		.byte	-30
 286 003c EB       		.byte	-21
 287 003d 27       		.byte	39
 288 003e B2       		.byte	-78
 289 003f 75       		.byte	117
 290 0040 09       		.byte	9
 291 0041 83       		.byte	-125
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 9


 292 0042 2C       		.byte	44
 293 0043 1A       		.byte	26
 294 0044 1B       		.byte	27
 295 0045 6E       		.byte	110
 296 0046 5A       		.byte	90
 297 0047 A0       		.byte	-96
 298 0048 52       		.byte	82
 299 0049 3B       		.byte	59
 300 004a D6       		.byte	-42
 301 004b B3       		.byte	-77
 302 004c 29       		.byte	41
 303 004d E3       		.byte	-29
 304 004e 2F       		.byte	47
 305 004f 84       		.byte	-124
 306 0050 53       		.byte	83
 307 0051 D1       		.byte	-47
 308 0052 00       		.byte	0
 309 0053 ED       		.byte	-19
 310 0054 20       		.byte	32
 311 0055 FC       		.byte	-4
 312 0056 B1       		.byte	-79
 313 0057 5B       		.byte	91
 314 0058 6A       		.byte	106
 315 0059 CB       		.byte	-53
 316 005a BE       		.byte	-66
 317 005b 39       		.byte	57
 318 005c 4A       		.byte	74
 319 005d 4C       		.byte	76
 320 005e 58       		.byte	88
 321 005f CF       		.byte	-49
 322 0060 D0       		.byte	-48
 323 0061 EF       		.byte	-17
 324 0062 AA       		.byte	-86
 325 0063 FB       		.byte	-5
 326 0064 43       		.byte	67
 327 0065 4D       		.byte	77
 328 0066 33       		.byte	51
 329 0067 85       		.byte	-123
 330 0068 45       		.byte	69
 331 0069 F9       		.byte	-7
 332 006a 02       		.byte	2
 333 006b 7F       		.byte	127
 334 006c 50       		.byte	80
 335 006d 3C       		.byte	60
 336 006e 9F       		.byte	-97
 337 006f A8       		.byte	-88
 338 0070 51       		.byte	81
 339 0071 A3       		.byte	-93
 340 0072 40       		.byte	64
 341 0073 8F       		.byte	-113
 342 0074 92       		.byte	-110
 343 0075 9D       		.byte	-99
 344 0076 38       		.byte	56
 345 0077 F5       		.byte	-11
 346 0078 BC       		.byte	-68
 347 0079 B6       		.byte	-74
 348 007a DA       		.byte	-38
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 10


 349 007b 21       		.byte	33
 350 007c 10       		.byte	16
 351 007d FF       		.byte	-1
 352 007e F3       		.byte	-13
 353 007f D2       		.byte	-46
 354 0080 CD       		.byte	-51
 355 0081 0C       		.byte	12
 356 0082 13       		.byte	19
 357 0083 EC       		.byte	-20
 358 0084 5F       		.byte	95
 359 0085 97       		.byte	-105
 360 0086 44       		.byte	68
 361 0087 17       		.byte	23
 362 0088 C4       		.byte	-60
 363 0089 A7       		.byte	-89
 364 008a 7E       		.byte	126
 365 008b 3D       		.byte	61
 366 008c 64       		.byte	100
 367 008d 5D       		.byte	93
 368 008e 19       		.byte	25
 369 008f 73       		.byte	115
 370 0090 60       		.byte	96
 371 0091 81       		.byte	-127
 372 0092 4F       		.byte	79
 373 0093 DC       		.byte	-36
 374 0094 22       		.byte	34
 375 0095 2A       		.byte	42
 376 0096 90       		.byte	-112
 377 0097 88       		.byte	-120
 378 0098 46       		.byte	70
 379 0099 EE       		.byte	-18
 380 009a B8       		.byte	-72
 381 009b 14       		.byte	20
 382 009c DE       		.byte	-34
 383 009d 5E       		.byte	94
 384 009e 0B       		.byte	11
 385 009f DB       		.byte	-37
 386 00a0 E0       		.byte	-32
 387 00a1 32       		.byte	50
 388 00a2 3A       		.byte	58
 389 00a3 0A       		.byte	10
 390 00a4 49       		.byte	73
 391 00a5 06       		.byte	6
 392 00a6 24       		.byte	36
 393 00a7 5C       		.byte	92
 394 00a8 C2       		.byte	-62
 395 00a9 D3       		.byte	-45
 396 00aa AC       		.byte	-84
 397 00ab 62       		.byte	98
 398 00ac 91       		.byte	-111
 399 00ad 95       		.byte	-107
 400 00ae E4       		.byte	-28
 401 00af 79       		.byte	121
 402 00b0 E7       		.byte	-25
 403 00b1 C8       		.byte	-56
 404 00b2 37       		.byte	55
 405 00b3 6D       		.byte	109
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 11


 406 00b4 8D       		.byte	-115
 407 00b5 D5       		.byte	-43
 408 00b6 4E       		.byte	78
 409 00b7 A9       		.byte	-87
 410 00b8 6C       		.byte	108
 411 00b9 56       		.byte	86
 412 00ba F4       		.byte	-12
 413 00bb EA       		.byte	-22
 414 00bc 65       		.byte	101
 415 00bd 7A       		.byte	122
 416 00be AE       		.byte	-82
 417 00bf 08       		.byte	8
 418 00c0 BA       		.byte	-70
 419 00c1 78       		.byte	120
 420 00c2 25       		.byte	37
 421 00c3 2E       		.byte	46
 422 00c4 1C       		.byte	28
 423 00c5 A6       		.byte	-90
 424 00c6 B4       		.byte	-76
 425 00c7 C6       		.byte	-58
 426 00c8 E8       		.byte	-24
 427 00c9 DD       		.byte	-35
 428 00ca 74       		.byte	116
 429 00cb 1F       		.byte	31
 430 00cc 4B       		.byte	75
 431 00cd BD       		.byte	-67
 432 00ce 8B       		.byte	-117
 433 00cf 8A       		.byte	-118
 434 00d0 70       		.byte	112
 435 00d1 3E       		.byte	62
 436 00d2 B5       		.byte	-75
 437 00d3 66       		.byte	102
 438 00d4 48       		.byte	72
 439 00d5 03       		.byte	3
 440 00d6 F6       		.byte	-10
 441 00d7 0E       		.byte	14
 442 00d8 61       		.byte	97
 443 00d9 35       		.byte	53
 444 00da 57       		.byte	87
 445 00db B9       		.byte	-71
 446 00dc 86       		.byte	-122
 447 00dd C1       		.byte	-63
 448 00de 1D       		.byte	29
 449 00df 9E       		.byte	-98
 450 00e0 E1       		.byte	-31
 451 00e1 F8       		.byte	-8
 452 00e2 98       		.byte	-104
 453 00e3 11       		.byte	17
 454 00e4 69       		.byte	105
 455 00e5 D9       		.byte	-39
 456 00e6 8E       		.byte	-114
 457 00e7 94       		.byte	-108
 458 00e8 9B       		.byte	-101
 459 00e9 1E       		.byte	30
 460 00ea 87       		.byte	-121
 461 00eb E9       		.byte	-23
 462 00ec CE       		.byte	-50
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 12


 463 00ed 55       		.byte	85
 464 00ee 28       		.byte	40
 465 00ef DF       		.byte	-33
 466 00f0 8C       		.byte	-116
 467 00f1 A1       		.byte	-95
 468 00f2 89       		.byte	-119
 469 00f3 0D       		.byte	13
 470 00f4 BF       		.byte	-65
 471 00f5 E6       		.byte	-26
 472 00f6 42       		.byte	66
 473 00f7 68       		.byte	104
 474 00f8 41       		.byte	65
 475 00f9 99       		.byte	-103
 476 00fa 2D       		.byte	45
 477 00fb 0F       		.byte	15
 478 00fc B0       		.byte	-80
 479 00fd 54       		.byte	84
 480 00fe BB       		.byte	-69
 481 00ff 16       		.byte	22
 482              		.align	2
 483              		.type	Rcon, %object
 484              		.size	Rcon, 11
 485              	Rcon:
 486 0100 8D       		.byte	-115
 487 0101 01       		.byte	1
 488 0102 02       		.byte	2
 489 0103 04       		.byte	4
 490 0104 08       		.byte	8
 491 0105 10       		.byte	16
 492 0106 20       		.byte	32
 493 0107 40       		.byte	64
 494 0108 80       		.byte	-128
 495 0109 1B       		.byte	27
 496 010a 36       		.byte	54
 497              		.section	.text.sub_word,"ax",%progbits
 498              		.align	2
 499              		.code	16
 500              		.thumb_func
 501              		.type	sub_word, %function
 502              	sub_word:
 503              	.LFB27:
 504              		.file 3 "aes.c"
   1:aes.c         **** /*
   2:aes.c         ****  * cifra - embedded cryptography library
   3:aes.c         ****  * Written in 2014 by Joseph Birr-Pixton <jpixton@gmail.com>
   4:aes.c         ****  *
   5:aes.c         ****  * To the extent possible under law, the author(s) have dedicated all
   6:aes.c         ****  * copyright and related and neighboring rights to this software to the
   7:aes.c         ****  * public domain worldwide. This software is distributed without any
   8:aes.c         ****  * warranty.
   9:aes.c         ****  *
  10:aes.c         ****  * You should have received a copy of the CC0 Public Domain Dedication
  11:aes.c         ****  * along with this software. If not, see
  12:aes.c         ****  * <http://creativecommons.org/publicdomain/zero/1.0/>.
  13:aes.c         ****  */
  14:aes.c         **** 
  15:aes.c         **** #include <string.h>
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 13


  16:aes.c         **** #include <stdlib.h>
  17:aes.c         **** 
  18:aes.c         **** #include "cf_config.h"
  19:aes.c         **** #include "aes.h"
  20:aes.c         **** #include "handy.h"
  21:aes.c         **** #include "bitops.h"
  22:aes.c         **** #include "tassert.h"
  23:aes.c         **** 
  24:aes.c         **** static const uint8_t S[256] =
  25:aes.c         **** {
  26:aes.c         ****   0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe,
  27:aes.c         ****   0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4,
  28:aes.c         ****   0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7,
  29:aes.c         ****   0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3,
  30:aes.c         ****   0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09,
  31:aes.c         ****   0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3,
  32:aes.c         ****   0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe,
  33:aes.c         ****   0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85,
  34:aes.c         ****   0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92,
  35:aes.c         ****   0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c,
  36:aes.c         ****   0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19,
  37:aes.c         ****   0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,
  38:aes.c         ****   0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2,
  39:aes.c         ****   0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5,
  40:aes.c         ****   0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25,
  41:aes.c         ****   0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  42:aes.c         ****   0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86,
  43:aes.c         ****   0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e,
  44:aes.c         ****   0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42,
  45:aes.c         ****   0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16
  46:aes.c         **** };
  47:aes.c         **** 
  48:aes.c         **** static const uint8_t Rcon[11] =
  49:aes.c         **** {
  50:aes.c         ****   0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36
  51:aes.c         **** };
  52:aes.c         **** 
  53:aes.c         **** #ifdef INLINE_FUNCS
  54:aes.c         **** static inline uint32_t word4(uint8_t b0, uint8_t b1, uint8_t b2, uint8_t b3)
  55:aes.c         **** {
  56:aes.c         ****   return b0 << 24 | b1 << 16 | b2 << 8 | b3;
  57:aes.c         **** }
  58:aes.c         **** 
  59:aes.c         **** static inline uint8_t byte(uint32_t w, unsigned x)
  60:aes.c         **** {
  61:aes.c         ****   /* nb. bytes are numbered 0 (leftmost, top)
  62:aes.c         ****    * to 3 (rightmost). */
  63:aes.c         ****   x = 3 - x;
  64:aes.c         ****   return (w >> (x * 8)) & 0xff;
  65:aes.c         **** }
  66:aes.c         **** 
  67:aes.c         **** static uint32_t round_constant(uint32_t i)
  68:aes.c         **** {
  69:aes.c         ****   return Rcon[i] << 24;
  70:aes.c         **** }
  71:aes.c         **** 
  72:aes.c         **** static uint32_t rot_word(uint32_t w)
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 14


  73:aes.c         **** {
  74:aes.c         ****   /* Takes
  75:aes.c         ****    * word [a0,a1,a2,a3]
  76:aes.c         ****    * returns
  77:aes.c         ****    * word [a1,a2,a3,a0]
  78:aes.c         ****    *
  79:aes.c         ****    */
  80:aes.c         ****   return rotl32(w, 8);
  81:aes.c         **** }
  82:aes.c         **** #endif
  83:aes.c         **** 
  84:aes.c         **** #define word4(a, b, c, d) (((uint32_t)(a) << 24) | ((uint32_t)(b) << 16) | ((uint32_t)(c) << 8) | (
  85:aes.c         **** #define byte(w, x) ((w >> ((3 - (x)) << 3)) & 0xff)
  86:aes.c         **** #define round_constant(i) ((uint32_t)(Rcon[i]) << 24)
  87:aes.c         **** #define rot_word(w) rotl32((w), 8)
  88:aes.c         **** 
  89:aes.c         **** static uint32_t sub_word(uint32_t w, const uint8_t *sbox)
  90:aes.c         **** {
 505              		.loc 3 90 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 16
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 84B0     		sub	sp, sp, #16
 511              		.cfi_def_cfa_offset 16
 512 0002 0190     		str	r0, [sp, #4]
 513 0004 0091     		str	r1, [sp]
  91:aes.c         ****   uint8_t a = byte(w, 0),
 514              		.loc 3 91 0
 515 0006 019B     		ldr	r3, [sp, #4]
 516 0008 1A0E     		lsrs	r2, r3, #24
 517 000a 0F23     		movs	r3, #15
 518 000c 6B44     		add	r3, r3, sp
 519 000e 1A70     		strb	r2, [r3]
  92:aes.c         ****           b = byte(w, 1),
 520              		.loc 3 92 0
 521 0010 019B     		ldr	r3, [sp, #4]
 522 0012 1A0C     		lsrs	r2, r3, #16
 523 0014 0E23     		movs	r3, #14
 524 0016 6B44     		add	r3, r3, sp
 525 0018 1A70     		strb	r2, [r3]
  93:aes.c         ****           c = byte(w, 2),
 526              		.loc 3 93 0
 527 001a 019B     		ldr	r3, [sp, #4]
 528 001c 1A0A     		lsrs	r2, r3, #8
 529 001e 0D23     		movs	r3, #13
 530 0020 6B44     		add	r3, r3, sp
 531 0022 1A70     		strb	r2, [r3]
  94:aes.c         ****           d = byte(w, 3);
 532              		.loc 3 94 0
 533 0024 03AB     		add	r3, sp, #12
 534 0026 019A     		ldr	r2, [sp, #4]
 535 0028 1A70     		strb	r2, [r3]
  95:aes.c         **** #if CF_CACHE_SIDE_CHANNEL_PROTECTION
  96:aes.c         ****   select_u8x4(&a, &b, &c, &d, sbox, 256);
  97:aes.c         **** #else
  98:aes.c         ****   a = sbox[a];
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 15


 536              		.loc 3 98 0
 537 002a 0F23     		movs	r3, #15
 538 002c 6B44     		add	r3, r3, sp
 539 002e 1B78     		ldrb	r3, [r3]
 540 0030 009A     		ldr	r2, [sp]
 541 0032 D218     		adds	r2, r2, r3
 542 0034 0F23     		movs	r3, #15
 543 0036 6B44     		add	r3, r3, sp
 544 0038 1278     		ldrb	r2, [r2]
 545 003a 1A70     		strb	r2, [r3]
  99:aes.c         ****   b = sbox[b];
 546              		.loc 3 99 0
 547 003c 0E23     		movs	r3, #14
 548 003e 6B44     		add	r3, r3, sp
 549 0040 1B78     		ldrb	r3, [r3]
 550 0042 009A     		ldr	r2, [sp]
 551 0044 D218     		adds	r2, r2, r3
 552 0046 0E23     		movs	r3, #14
 553 0048 6B44     		add	r3, r3, sp
 554 004a 1278     		ldrb	r2, [r2]
 555 004c 1A70     		strb	r2, [r3]
 100:aes.c         ****   c = sbox[c];
 556              		.loc 3 100 0
 557 004e 0D23     		movs	r3, #13
 558 0050 6B44     		add	r3, r3, sp
 559 0052 1B78     		ldrb	r3, [r3]
 560 0054 009A     		ldr	r2, [sp]
 561 0056 D218     		adds	r2, r2, r3
 562 0058 0D23     		movs	r3, #13
 563 005a 6B44     		add	r3, r3, sp
 564 005c 1278     		ldrb	r2, [r2]
 565 005e 1A70     		strb	r2, [r3]
 101:aes.c         ****   d = sbox[d];
 566              		.loc 3 101 0
 567 0060 03AB     		add	r3, sp, #12
 568 0062 1B78     		ldrb	r3, [r3]
 569 0064 009A     		ldr	r2, [sp]
 570 0066 D218     		adds	r2, r2, r3
 571 0068 03AB     		add	r3, sp, #12
 572 006a 1278     		ldrb	r2, [r2]
 573 006c 1A70     		strb	r2, [r3]
 102:aes.c         **** #endif
 103:aes.c         ****   return word4(a, b, c, d);
 574              		.loc 3 103 0
 575 006e 0F23     		movs	r3, #15
 576 0070 6B44     		add	r3, r3, sp
 577 0072 1B78     		ldrb	r3, [r3]
 578 0074 1A06     		lsls	r2, r3, #24
 579 0076 0E23     		movs	r3, #14
 580 0078 6B44     		add	r3, r3, sp
 581 007a 1B78     		ldrb	r3, [r3]
 582 007c 1B04     		lsls	r3, r3, #16
 583 007e 1A43     		orrs	r2, r3
 584 0080 0D23     		movs	r3, #13
 585 0082 6B44     		add	r3, r3, sp
 586 0084 1B78     		ldrb	r3, [r3]
 587 0086 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 16


 588 0088 1A43     		orrs	r2, r3
 589 008a 03AB     		add	r3, sp, #12
 590 008c 1B78     		ldrb	r3, [r3]
 591 008e 1343     		orrs	r3, r2
 104:aes.c         **** }
 592              		.loc 3 104 0
 593 0090 1800     		movs	r0, r3
 594 0092 04B0     		add	sp, sp, #16
 595              		@ sp needed
 596 0094 7047     		bx	lr
 597              		.cfi_endproc
 598              	.LFE27:
 599              		.size	sub_word, .-sub_word
 600 0096 C046     		.section	.text.aes_schedule,"ax",%progbits
 601              		.align	2
 602              		.code	16
 603              		.thumb_func
 604              		.type	aes_schedule, %function
 605              	aes_schedule:
 606              	.LFB28:
 105:aes.c         **** 
 106:aes.c         **** static void aes_schedule(cf_aes_context *ctx, const uint8_t *key, size_t nkey)
 107:aes.c         **** {
 607              		.loc 3 107 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 48
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611 0000 10B5     		push	{r4, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
 615 0002 8CB0     		sub	sp, sp, #48
 616              		.cfi_def_cfa_offset 56
 617 0004 0390     		str	r0, [sp, #12]
 618 0006 0291     		str	r1, [sp, #8]
 619 0008 0192     		str	r2, [sp, #4]
 108:aes.c         ****   size_t i,
 109:aes.c         ****          nb = AES_BLOCKSZ / 4,
 620              		.loc 3 109 0
 621 000a 0423     		movs	r3, #4
 622 000c 0793     		str	r3, [sp, #28]
 110:aes.c         ****          nk = nkey / 4,
 623              		.loc 3 110 0
 624 000e 019B     		ldr	r3, [sp, #4]
 625 0010 9B08     		lsrs	r3, r3, #2
 626 0012 0693     		str	r3, [sp, #24]
 111:aes.c         ****          n = nb * (ctx->rounds + 1);
 627              		.loc 3 111 0
 628 0014 039B     		ldr	r3, [sp, #12]
 629 0016 1B68     		ldr	r3, [r3]
 630 0018 0133     		adds	r3, r3, #1
 631 001a 079A     		ldr	r2, [sp, #28]
 632 001c 5343     		muls	r3, r2
 633 001e 0593     		str	r3, [sp, #20]
 112:aes.c         ****   uint32_t *w = ctx->ks;
 634              		.loc 3 112 0
 635 0020 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 17


 636 0022 0433     		adds	r3, r3, #4
 637 0024 0493     		str	r3, [sp, #16]
 113:aes.c         **** 
 114:aes.c         ****   /* First words are just the key. */
 115:aes.c         ****   for (i = 0; i < nk; i++)
 638              		.loc 3 115 0
 639 0026 0023     		movs	r3, #0
 640 0028 0B93     		str	r3, [sp, #44]
 641 002a 0FE0     		b	.L14
 642              	.L15:
 116:aes.c         ****   {
 117:aes.c         ****     w[i] = read32_be(key + i * 4);
 643              		.loc 3 117 0 discriminator 3
 644 002c 0B9B     		ldr	r3, [sp, #44]
 645 002e 9B00     		lsls	r3, r3, #2
 646 0030 049A     		ldr	r2, [sp, #16]
 647 0032 D418     		adds	r4, r2, r3
 648 0034 0B9B     		ldr	r3, [sp, #44]
 649 0036 9B00     		lsls	r3, r3, #2
 650 0038 029A     		ldr	r2, [sp, #8]
 651 003a D318     		adds	r3, r2, r3
 652 003c 1800     		movs	r0, r3
 653 003e FFF7FEFF 		bl	read32_be
 654 0042 0300     		movs	r3, r0
 655 0044 2360     		str	r3, [r4]
 115:aes.c         ****   {
 656              		.loc 3 115 0 discriminator 3
 657 0046 0B9B     		ldr	r3, [sp, #44]
 658 0048 0133     		adds	r3, r3, #1
 659 004a 0B93     		str	r3, [sp, #44]
 660              	.L14:
 115:aes.c         ****   {
 661              		.loc 3 115 0 is_stmt 0 discriminator 1
 662 004c 0B9A     		ldr	r2, [sp, #44]
 663 004e 069B     		ldr	r3, [sp, #24]
 664 0050 9A42     		cmp	r2, r3
 665 0052 EBD3     		bcc	.L15
 118:aes.c         ****   }
 119:aes.c         **** 
 120:aes.c         ****   uint32_t i_div_nk = 1;
 666              		.loc 3 120 0 is_stmt 1
 667 0054 0123     		movs	r3, #1
 668 0056 0A93     		str	r3, [sp, #40]
 121:aes.c         ****   uint32_t i_mod_nk = 0;
 669              		.loc 3 121 0
 670 0058 0023     		movs	r3, #0
 671 005a 0993     		str	r3, [sp, #36]
 122:aes.c         **** 
 123:aes.c         ****   for (; i < n; i++, i_mod_nk++)
 672              		.loc 3 123 0
 673 005c 4AE0     		b	.L16
 674              	.L20:
 675              	.LBB2:
 124:aes.c         ****   {
 125:aes.c         ****     uint32_t temp = w[i - 1];
 676              		.loc 3 125 0
 677 005e 0B9B     		ldr	r3, [sp, #44]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 18


 678 0060 284A     		ldr	r2, .L21
 679 0062 9446     		mov	ip, r2
 680 0064 6344     		add	r3, r3, ip
 681 0066 9B00     		lsls	r3, r3, #2
 682 0068 049A     		ldr	r2, [sp, #16]
 683 006a D318     		adds	r3, r2, r3
 684 006c 1B68     		ldr	r3, [r3]
 685 006e 0893     		str	r3, [sp, #32]
 126:aes.c         ****     
 127:aes.c         ****     if (i_mod_nk == nk)
 686              		.loc 3 127 0
 687 0070 099A     		ldr	r2, [sp, #36]
 688 0072 069B     		ldr	r3, [sp, #24]
 689 0074 9A42     		cmp	r2, r3
 690 0076 04D1     		bne	.L17
 128:aes.c         ****     {
 129:aes.c         ****       i_div_nk++;
 691              		.loc 3 129 0
 692 0078 0A9B     		ldr	r3, [sp, #40]
 693 007a 0133     		adds	r3, r3, #1
 694 007c 0A93     		str	r3, [sp, #40]
 130:aes.c         ****       i_mod_nk = 0;
 695              		.loc 3 130 0
 696 007e 0023     		movs	r3, #0
 697 0080 0993     		str	r3, [sp, #36]
 698              	.L17:
 131:aes.c         ****     }
 132:aes.c         **** 
 133:aes.c         ****     if (i_mod_nk == 0)
 699              		.loc 3 133 0
 700 0082 099B     		ldr	r3, [sp, #36]
 701 0084 002B     		cmp	r3, #0
 702 0086 13D1     		bne	.L18
 134:aes.c         ****       temp = sub_word(rot_word(temp), S) ^ round_constant(i_div_nk);
 703              		.loc 3 134 0
 704 0088 089B     		ldr	r3, [sp, #32]
 705 008a 0821     		movs	r1, #8
 706 008c 1800     		movs	r0, r3
 707 008e FFF7FEFF 		bl	rotl32
 708 0092 0200     		movs	r2, r0
 709 0094 1C4B     		ldr	r3, .L21+4
 710 0096 1900     		movs	r1, r3
 711 0098 1000     		movs	r0, r2
 712 009a FFF7FEFF 		bl	sub_word
 713 009e 0100     		movs	r1, r0
 714 00a0 1A4A     		ldr	r2, .L21+8
 715 00a2 0A9B     		ldr	r3, [sp, #40]
 716 00a4 D318     		adds	r3, r2, r3
 717 00a6 1B78     		ldrb	r3, [r3]
 718 00a8 1B06     		lsls	r3, r3, #24
 719 00aa 4B40     		eors	r3, r1
 720 00ac 0893     		str	r3, [sp, #32]
 721 00ae 0DE0     		b	.L19
 722              	.L18:
 135:aes.c         ****     else if (nk > 6 && i_mod_nk == 4)
 723              		.loc 3 135 0
 724 00b0 069B     		ldr	r3, [sp, #24]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 19


 725 00b2 062B     		cmp	r3, #6
 726 00b4 0AD9     		bls	.L19
 727              		.loc 3 135 0 is_stmt 0 discriminator 1
 728 00b6 099B     		ldr	r3, [sp, #36]
 729 00b8 042B     		cmp	r3, #4
 730 00ba 07D1     		bne	.L19
 136:aes.c         ****       temp = sub_word(temp, S);
 731              		.loc 3 136 0 is_stmt 1
 732 00bc 124A     		ldr	r2, .L21+4
 733 00be 089B     		ldr	r3, [sp, #32]
 734 00c0 1100     		movs	r1, r2
 735 00c2 1800     		movs	r0, r3
 736 00c4 FFF7FEFF 		bl	sub_word
 737 00c8 0300     		movs	r3, r0
 738 00ca 0893     		str	r3, [sp, #32]
 739              	.L19:
 137:aes.c         **** 
 138:aes.c         ****     w[i] = w[i - nk] ^ temp;
 740              		.loc 3 138 0
 741 00cc 0B9B     		ldr	r3, [sp, #44]
 742 00ce 9B00     		lsls	r3, r3, #2
 743 00d0 049A     		ldr	r2, [sp, #16]
 744 00d2 D318     		adds	r3, r2, r3
 745 00d4 0B99     		ldr	r1, [sp, #44]
 746 00d6 069A     		ldr	r2, [sp, #24]
 747 00d8 8A1A     		subs	r2, r1, r2
 748 00da 9200     		lsls	r2, r2, #2
 749 00dc 0499     		ldr	r1, [sp, #16]
 750 00de 8A18     		adds	r2, r1, r2
 751 00e0 1168     		ldr	r1, [r2]
 752 00e2 089A     		ldr	r2, [sp, #32]
 753 00e4 4A40     		eors	r2, r1
 754 00e6 1A60     		str	r2, [r3]
 755              	.LBE2:
 123:aes.c         ****   {
 756              		.loc 3 123 0
 757 00e8 0B9B     		ldr	r3, [sp, #44]
 758 00ea 0133     		adds	r3, r3, #1
 759 00ec 0B93     		str	r3, [sp, #44]
 760 00ee 099B     		ldr	r3, [sp, #36]
 761 00f0 0133     		adds	r3, r3, #1
 762 00f2 0993     		str	r3, [sp, #36]
 763              	.L16:
 123:aes.c         ****   {
 764              		.loc 3 123 0 is_stmt 0 discriminator 1
 765 00f4 0B9A     		ldr	r2, [sp, #44]
 766 00f6 059B     		ldr	r3, [sp, #20]
 767 00f8 9A42     		cmp	r2, r3
 768 00fa B0D3     		bcc	.L20
 139:aes.c         ****   }
 140:aes.c         **** }
 769              		.loc 3 140 0 is_stmt 1
 770 00fc C046     		nop
 771 00fe 0CB0     		add	sp, sp, #48
 772              		@ sp needed
 773 0100 10BD     		pop	{r4, pc}
 774              	.L22:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 20


 775 0102 C046     		.align	2
 776              	.L21:
 777 0104 FFFFFF3F 		.word	1073741823
 778 0108 00000000 		.word	S
 779 010c 00010000 		.word	Rcon
 780              		.cfi_endproc
 781              	.LFE28:
 782              		.size	aes_schedule, .-aes_schedule
 783              		.section	.text.cf_aes_init,"ax",%progbits
 784              		.align	2
 785              		.global	cf_aes_init
 786              		.code	16
 787              		.thumb_func
 788              		.type	cf_aes_init, %function
 789              	cf_aes_init:
 790              	.LFB29:
 141:aes.c         **** 
 142:aes.c         **** void cf_aes_init(cf_aes_context *ctx, const uint8_t *key, size_t nkey)
 143:aes.c         **** {
 791              		.loc 3 143 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 16
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795 0000 00B5     		push	{lr}
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 14, -4
 798 0002 85B0     		sub	sp, sp, #20
 799              		.cfi_def_cfa_offset 24
 800 0004 0390     		str	r0, [sp, #12]
 801 0006 0291     		str	r1, [sp, #8]
 802 0008 0192     		str	r2, [sp, #4]
 144:aes.c         ****   memset(ctx, 0, sizeof *ctx);
 803              		.loc 3 144 0
 804 000a 039B     		ldr	r3, [sp, #12]
 805 000c F422     		movs	r2, #244
 806 000e 0021     		movs	r1, #0
 807 0010 1800     		movs	r0, r3
 808 0012 FFF7FEFF 		bl	memset
 145:aes.c         **** 
 146:aes.c         ****   switch (nkey)
 809              		.loc 3 146 0
 810 0016 019B     		ldr	r3, [sp, #4]
 811 0018 182B     		cmp	r3, #24
 812 001a 0DD0     		beq	.L25
 813 001c 202B     		cmp	r3, #32
 814 001e 15D0     		beq	.L26
 815 0020 102B     		cmp	r3, #16
 816 0022 1DD1     		bne	.L29
 147:aes.c         ****   {
 148:aes.c         **** #if CF_AES_MAXROUNDS >= AES128_ROUNDS
 149:aes.c         ****     case 16:
 150:aes.c         ****       ctx->rounds = AES128_ROUNDS;
 817              		.loc 3 150 0
 818 0024 039B     		ldr	r3, [sp, #12]
 819 0026 0A22     		movs	r2, #10
 820 0028 1A60     		str	r2, [r3]
 151:aes.c         ****       aes_schedule(ctx, key, nkey);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 21


 821              		.loc 3 151 0
 822 002a 019A     		ldr	r2, [sp, #4]
 823 002c 0299     		ldr	r1, [sp, #8]
 824 002e 039B     		ldr	r3, [sp, #12]
 825 0030 1800     		movs	r0, r3
 826 0032 FFF7FEFF 		bl	aes_schedule
 152:aes.c         ****       break;
 827              		.loc 3 152 0
 828 0036 15E0     		b	.L28
 829              	.L25:
 153:aes.c         **** #endif
 154:aes.c         **** 
 155:aes.c         **** #if CF_AES_MAXROUNDS >= AES192_ROUNDS
 156:aes.c         ****     case 24:
 157:aes.c         ****       ctx->rounds = AES192_ROUNDS;
 830              		.loc 3 157 0
 831 0038 039B     		ldr	r3, [sp, #12]
 832 003a 0C22     		movs	r2, #12
 833 003c 1A60     		str	r2, [r3]
 158:aes.c         ****       aes_schedule(ctx, key, nkey);
 834              		.loc 3 158 0
 835 003e 019A     		ldr	r2, [sp, #4]
 836 0040 0299     		ldr	r1, [sp, #8]
 837 0042 039B     		ldr	r3, [sp, #12]
 838 0044 1800     		movs	r0, r3
 839 0046 FFF7FEFF 		bl	aes_schedule
 159:aes.c         ****       break;
 840              		.loc 3 159 0
 841 004a 0BE0     		b	.L28
 842              	.L26:
 160:aes.c         **** #endif
 161:aes.c         **** 
 162:aes.c         **** #if CF_AES_MAXROUNDS >= AES256_ROUNDS
 163:aes.c         ****     case 32:
 164:aes.c         ****       ctx->rounds = AES256_ROUNDS;
 843              		.loc 3 164 0
 844 004c 039B     		ldr	r3, [sp, #12]
 845 004e 0E22     		movs	r2, #14
 846 0050 1A60     		str	r2, [r3]
 165:aes.c         ****       aes_schedule(ctx, key, nkey);
 847              		.loc 3 165 0
 848 0052 019A     		ldr	r2, [sp, #4]
 849 0054 0299     		ldr	r1, [sp, #8]
 850 0056 039B     		ldr	r3, [sp, #12]
 851 0058 1800     		movs	r0, r3
 852 005a FFF7FEFF 		bl	aes_schedule
 166:aes.c         ****       break;
 853              		.loc 3 166 0
 854 005e 01E0     		b	.L28
 855              	.L29:
 167:aes.c         **** #endif
 168:aes.c         **** 
 169:aes.c         ****     default:
 170:aes.c         ****       abort();
 856              		.loc 3 170 0
 857 0060 FFF7FEFF 		bl	abort
 858              	.L28:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 22


 171:aes.c         ****   }
 172:aes.c         **** }
 859              		.loc 3 172 0
 860 0064 C046     		nop
 861 0066 05B0     		add	sp, sp, #20
 862              		@ sp needed
 863 0068 00BD     		pop	{pc}
 864              		.cfi_endproc
 865              	.LFE29:
 866              		.size	cf_aes_init, .-cf_aes_init
 867 006a C046     		.section	.text.add_round_key,"ax",%progbits
 868              		.align	2
 869              		.code	16
 870              		.thumb_func
 871              		.type	add_round_key, %function
 872              	add_round_key:
 873              	.LFB30:
 173:aes.c         **** 
 174:aes.c         **** static void add_round_key(uint32_t state[4], const uint32_t rk[4])
 175:aes.c         **** {
 874              		.loc 3 175 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 8
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879 0000 82B0     		sub	sp, sp, #8
 880              		.cfi_def_cfa_offset 8
 881 0002 0190     		str	r0, [sp, #4]
 882 0004 0091     		str	r1, [sp]
 176:aes.c         ****   state[0] ^= rk[0];
 883              		.loc 3 176 0
 884 0006 019B     		ldr	r3, [sp, #4]
 885 0008 1A68     		ldr	r2, [r3]
 886 000a 009B     		ldr	r3, [sp]
 887 000c 1B68     		ldr	r3, [r3]
 888 000e 5A40     		eors	r2, r3
 889 0010 019B     		ldr	r3, [sp, #4]
 890 0012 1A60     		str	r2, [r3]
 177:aes.c         ****   state[1] ^= rk[1];
 891              		.loc 3 177 0
 892 0014 019B     		ldr	r3, [sp, #4]
 893 0016 0433     		adds	r3, r3, #4
 894 0018 019A     		ldr	r2, [sp, #4]
 895 001a 0432     		adds	r2, r2, #4
 896 001c 1168     		ldr	r1, [r2]
 897 001e 009A     		ldr	r2, [sp]
 898 0020 0432     		adds	r2, r2, #4
 899 0022 1268     		ldr	r2, [r2]
 900 0024 4A40     		eors	r2, r1
 901 0026 1A60     		str	r2, [r3]
 178:aes.c         ****   state[2] ^= rk[2];
 902              		.loc 3 178 0
 903 0028 019B     		ldr	r3, [sp, #4]
 904 002a 0833     		adds	r3, r3, #8
 905 002c 019A     		ldr	r2, [sp, #4]
 906 002e 0832     		adds	r2, r2, #8
 907 0030 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 23


 908 0032 009A     		ldr	r2, [sp]
 909 0034 0832     		adds	r2, r2, #8
 910 0036 1268     		ldr	r2, [r2]
 911 0038 4A40     		eors	r2, r1
 912 003a 1A60     		str	r2, [r3]
 179:aes.c         ****   state[3] ^= rk[3];
 913              		.loc 3 179 0
 914 003c 019B     		ldr	r3, [sp, #4]
 915 003e 0C33     		adds	r3, r3, #12
 916 0040 019A     		ldr	r2, [sp, #4]
 917 0042 0C32     		adds	r2, r2, #12
 918 0044 1168     		ldr	r1, [r2]
 919 0046 009A     		ldr	r2, [sp]
 920 0048 0C32     		adds	r2, r2, #12
 921 004a 1268     		ldr	r2, [r2]
 922 004c 4A40     		eors	r2, r1
 923 004e 1A60     		str	r2, [r3]
 180:aes.c         **** }
 924              		.loc 3 180 0
 925 0050 C046     		nop
 926 0052 02B0     		add	sp, sp, #8
 927              		@ sp needed
 928 0054 7047     		bx	lr
 929              		.cfi_endproc
 930              	.LFE30:
 931              		.size	add_round_key, .-add_round_key
 932 0056 C046     		.section	.text.sub_block,"ax",%progbits
 933              		.align	2
 934              		.code	16
 935              		.thumb_func
 936              		.type	sub_block, %function
 937              	sub_block:
 938              	.LFB31:
 181:aes.c         **** 
 182:aes.c         **** static void sub_block(uint32_t state[4])
 183:aes.c         **** {
 939              		.loc 3 183 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 8
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943 0000 10B5     		push	{r4, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 4, -8
 946              		.cfi_offset 14, -4
 947 0002 82B0     		sub	sp, sp, #8
 948              		.cfi_def_cfa_offset 16
 949 0004 0190     		str	r0, [sp, #4]
 184:aes.c         ****   state[0] = sub_word(state[0], S);
 950              		.loc 3 184 0
 951 0006 019B     		ldr	r3, [sp, #4]
 952 0008 1B68     		ldr	r3, [r3]
 953 000a 184A     		ldr	r2, .L32
 954 000c 1100     		movs	r1, r2
 955 000e 1800     		movs	r0, r3
 956 0010 FFF7FEFF 		bl	sub_word
 957 0014 0200     		movs	r2, r0
 958 0016 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 24


 959 0018 1A60     		str	r2, [r3]
 185:aes.c         ****   state[1] = sub_word(state[1], S);
 960              		.loc 3 185 0
 961 001a 019B     		ldr	r3, [sp, #4]
 962 001c 1C1D     		adds	r4, r3, #4
 963 001e 019B     		ldr	r3, [sp, #4]
 964 0020 0433     		adds	r3, r3, #4
 965 0022 1B68     		ldr	r3, [r3]
 966 0024 114A     		ldr	r2, .L32
 967 0026 1100     		movs	r1, r2
 968 0028 1800     		movs	r0, r3
 969 002a FFF7FEFF 		bl	sub_word
 970 002e 0300     		movs	r3, r0
 971 0030 2360     		str	r3, [r4]
 186:aes.c         ****   state[2] = sub_word(state[2], S);
 972              		.loc 3 186 0
 973 0032 019B     		ldr	r3, [sp, #4]
 974 0034 0833     		adds	r3, r3, #8
 975 0036 1C00     		movs	r4, r3
 976 0038 019B     		ldr	r3, [sp, #4]
 977 003a 0833     		adds	r3, r3, #8
 978 003c 1B68     		ldr	r3, [r3]
 979 003e 0B4A     		ldr	r2, .L32
 980 0040 1100     		movs	r1, r2
 981 0042 1800     		movs	r0, r3
 982 0044 FFF7FEFF 		bl	sub_word
 983 0048 0300     		movs	r3, r0
 984 004a 2360     		str	r3, [r4]
 187:aes.c         ****   state[3] = sub_word(state[3], S);
 985              		.loc 3 187 0
 986 004c 019B     		ldr	r3, [sp, #4]
 987 004e 0C33     		adds	r3, r3, #12
 988 0050 1C00     		movs	r4, r3
 989 0052 019B     		ldr	r3, [sp, #4]
 990 0054 0C33     		adds	r3, r3, #12
 991 0056 1B68     		ldr	r3, [r3]
 992 0058 044A     		ldr	r2, .L32
 993 005a 1100     		movs	r1, r2
 994 005c 1800     		movs	r0, r3
 995 005e FFF7FEFF 		bl	sub_word
 996 0062 0300     		movs	r3, r0
 997 0064 2360     		str	r3, [r4]
 188:aes.c         **** }
 998              		.loc 3 188 0
 999 0066 C046     		nop
 1000 0068 02B0     		add	sp, sp, #8
 1001              		@ sp needed
 1002 006a 10BD     		pop	{r4, pc}
 1003              	.L33:
 1004              		.align	2
 1005              	.L32:
 1006 006c 00000000 		.word	S
 1007              		.cfi_endproc
 1008              	.LFE31:
 1009              		.size	sub_block, .-sub_block
 1010              		.section	.text.shift_rows,"ax",%progbits
 1011              		.align	2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 25


 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	shift_rows, %function
 1015              	shift_rows:
 1016              	.LFB32:
 189:aes.c         **** 
 190:aes.c         **** static void shift_rows(uint32_t state[4])
 191:aes.c         **** {
 1017              		.loc 3 191 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 24
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 1022 0000 86B0     		sub	sp, sp, #24
 1023              		.cfi_def_cfa_offset 24
 1024 0002 0190     		str	r0, [sp, #4]
 192:aes.c         ****   uint32_t u, v, x, y;
 193:aes.c         **** 
 194:aes.c         ****   u = word4(byte(state[0], 0),
 1025              		.loc 3 194 0
 1026 0004 019B     		ldr	r3, [sp, #4]
 1027 0006 1B68     		ldr	r3, [r3]
 1028 0008 1B0E     		lsrs	r3, r3, #24
 1029 000a 1A06     		lsls	r2, r3, #24
 1030 000c 019B     		ldr	r3, [sp, #4]
 1031 000e 0433     		adds	r3, r3, #4
 1032 0010 1968     		ldr	r1, [r3]
 1033 0012 FF23     		movs	r3, #255
 1034 0014 1B04     		lsls	r3, r3, #16
 1035 0016 0B40     		ands	r3, r1
 1036 0018 1A43     		orrs	r2, r3
 1037 001a 019B     		ldr	r3, [sp, #4]
 1038 001c 0833     		adds	r3, r3, #8
 1039 001e 1968     		ldr	r1, [r3]
 1040 0020 FF23     		movs	r3, #255
 1041 0022 1B02     		lsls	r3, r3, #8
 1042 0024 0B40     		ands	r3, r1
 1043 0026 1A43     		orrs	r2, r3
 1044 0028 019B     		ldr	r3, [sp, #4]
 1045 002a 0C33     		adds	r3, r3, #12
 1046 002c 1B68     		ldr	r3, [r3]
 1047 002e FF21     		movs	r1, #255
 1048 0030 0B40     		ands	r3, r1
 1049 0032 1343     		orrs	r3, r2
 1050 0034 0593     		str	r3, [sp, #20]
 195:aes.c         ****             byte(state[1], 1),
 196:aes.c         ****             byte(state[2], 2),
 197:aes.c         ****             byte(state[3], 3));
 198:aes.c         **** 
 199:aes.c         ****   v = word4(byte(state[1], 0),
 1051              		.loc 3 199 0
 1052 0036 019B     		ldr	r3, [sp, #4]
 1053 0038 0433     		adds	r3, r3, #4
 1054 003a 1B68     		ldr	r3, [r3]
 1055 003c 1B0E     		lsrs	r3, r3, #24
 1056 003e 1A06     		lsls	r2, r3, #24
 1057 0040 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 26


 1058 0042 0833     		adds	r3, r3, #8
 1059 0044 1968     		ldr	r1, [r3]
 1060 0046 FF23     		movs	r3, #255
 1061 0048 1B04     		lsls	r3, r3, #16
 1062 004a 0B40     		ands	r3, r1
 1063 004c 1A43     		orrs	r2, r3
 1064 004e 019B     		ldr	r3, [sp, #4]
 1065 0050 0C33     		adds	r3, r3, #12
 1066 0052 1968     		ldr	r1, [r3]
 1067 0054 FF23     		movs	r3, #255
 1068 0056 1B02     		lsls	r3, r3, #8
 1069 0058 0B40     		ands	r3, r1
 1070 005a 1A43     		orrs	r2, r3
 1071 005c 019B     		ldr	r3, [sp, #4]
 1072 005e 1B68     		ldr	r3, [r3]
 1073 0060 FF21     		movs	r1, #255
 1074 0062 0B40     		ands	r3, r1
 1075 0064 1343     		orrs	r3, r2
 1076 0066 0493     		str	r3, [sp, #16]
 200:aes.c         ****             byte(state[2], 1),
 201:aes.c         ****             byte(state[3], 2),
 202:aes.c         ****             byte(state[0], 3));
 203:aes.c         **** 
 204:aes.c         ****   x = word4(byte(state[2], 0),
 1077              		.loc 3 204 0
 1078 0068 019B     		ldr	r3, [sp, #4]
 1079 006a 0833     		adds	r3, r3, #8
 1080 006c 1B68     		ldr	r3, [r3]
 1081 006e 1B0E     		lsrs	r3, r3, #24
 1082 0070 1A06     		lsls	r2, r3, #24
 1083 0072 019B     		ldr	r3, [sp, #4]
 1084 0074 0C33     		adds	r3, r3, #12
 1085 0076 1968     		ldr	r1, [r3]
 1086 0078 FF23     		movs	r3, #255
 1087 007a 1B04     		lsls	r3, r3, #16
 1088 007c 0B40     		ands	r3, r1
 1089 007e 1A43     		orrs	r2, r3
 1090 0080 019B     		ldr	r3, [sp, #4]
 1091 0082 1968     		ldr	r1, [r3]
 1092 0084 FF23     		movs	r3, #255
 1093 0086 1B02     		lsls	r3, r3, #8
 1094 0088 0B40     		ands	r3, r1
 1095 008a 1A43     		orrs	r2, r3
 1096 008c 019B     		ldr	r3, [sp, #4]
 1097 008e 0433     		adds	r3, r3, #4
 1098 0090 1B68     		ldr	r3, [r3]
 1099 0092 FF21     		movs	r1, #255
 1100 0094 0B40     		ands	r3, r1
 1101 0096 1343     		orrs	r3, r2
 1102 0098 0393     		str	r3, [sp, #12]
 205:aes.c         ****             byte(state[3], 1),
 206:aes.c         ****             byte(state[0], 2),
 207:aes.c         ****             byte(state[1], 3));
 208:aes.c         **** 
 209:aes.c         ****   y = word4(byte(state[3], 0),
 1103              		.loc 3 209 0
 1104 009a 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 27


 1105 009c 0C33     		adds	r3, r3, #12
 1106 009e 1B68     		ldr	r3, [r3]
 1107 00a0 1B0E     		lsrs	r3, r3, #24
 1108 00a2 1A06     		lsls	r2, r3, #24
 1109 00a4 019B     		ldr	r3, [sp, #4]
 1110 00a6 1968     		ldr	r1, [r3]
 1111 00a8 FF23     		movs	r3, #255
 1112 00aa 1B04     		lsls	r3, r3, #16
 1113 00ac 0B40     		ands	r3, r1
 1114 00ae 1A43     		orrs	r2, r3
 1115 00b0 019B     		ldr	r3, [sp, #4]
 1116 00b2 0433     		adds	r3, r3, #4
 1117 00b4 1968     		ldr	r1, [r3]
 1118 00b6 FF23     		movs	r3, #255
 1119 00b8 1B02     		lsls	r3, r3, #8
 1120 00ba 0B40     		ands	r3, r1
 1121 00bc 1A43     		orrs	r2, r3
 1122 00be 019B     		ldr	r3, [sp, #4]
 1123 00c0 0833     		adds	r3, r3, #8
 1124 00c2 1B68     		ldr	r3, [r3]
 1125 00c4 FF21     		movs	r1, #255
 1126 00c6 0B40     		ands	r3, r1
 1127 00c8 1343     		orrs	r3, r2
 1128 00ca 0293     		str	r3, [sp, #8]
 210:aes.c         ****             byte(state[0], 1),
 211:aes.c         ****             byte(state[1], 2),
 212:aes.c         ****             byte(state[2], 3));
 213:aes.c         **** 
 214:aes.c         ****   state[0] = u;
 1129              		.loc 3 214 0
 1130 00cc 019B     		ldr	r3, [sp, #4]
 1131 00ce 059A     		ldr	r2, [sp, #20]
 1132 00d0 1A60     		str	r2, [r3]
 215:aes.c         ****   state[1] = v;
 1133              		.loc 3 215 0
 1134 00d2 019B     		ldr	r3, [sp, #4]
 1135 00d4 0433     		adds	r3, r3, #4
 1136 00d6 049A     		ldr	r2, [sp, #16]
 1137 00d8 1A60     		str	r2, [r3]
 216:aes.c         ****   state[2] = x;
 1138              		.loc 3 216 0
 1139 00da 019B     		ldr	r3, [sp, #4]
 1140 00dc 0833     		adds	r3, r3, #8
 1141 00de 039A     		ldr	r2, [sp, #12]
 1142 00e0 1A60     		str	r2, [r3]
 217:aes.c         ****   state[3] = y;
 1143              		.loc 3 217 0
 1144 00e2 019B     		ldr	r3, [sp, #4]
 1145 00e4 0C33     		adds	r3, r3, #12
 1146 00e6 029A     		ldr	r2, [sp, #8]
 1147 00e8 1A60     		str	r2, [r3]
 218:aes.c         **** }
 1148              		.loc 3 218 0
 1149 00ea C046     		nop
 1150 00ec 06B0     		add	sp, sp, #24
 1151              		@ sp needed
 1152 00ee 7047     		bx	lr
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 28


 1153              		.cfi_endproc
 1154              	.LFE32:
 1155              		.size	shift_rows, .-shift_rows
 1156              		.section	.text.gf_poly_mul2,"ax",%progbits
 1157              		.align	2
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	gf_poly_mul2, %function
 1161              	gf_poly_mul2:
 1162              	.LFB33:
 219:aes.c         **** 
 220:aes.c         **** static uint32_t gf_poly_mul2(uint32_t x)
 221:aes.c         **** {
 1163              		.loc 3 221 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 8
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              		@ link register save eliminated.
 1168 0000 82B0     		sub	sp, sp, #8
 1169              		.cfi_def_cfa_offset 8
 1170 0002 0190     		str	r0, [sp, #4]
 222:aes.c         ****   return
 223:aes.c         ****     ((x & 0x7f7f7f7f) << 1) ^
 1171              		.loc 3 223 0
 1172 0004 019B     		ldr	r3, [sp, #4]
 1173 0006 5B00     		lsls	r3, r3, #1
 1174 0008 074A     		ldr	r2, .L37
 1175 000a 1340     		ands	r3, r2
 1176 000c 1900     		movs	r1, r3
 224:aes.c         ****     (((x & 0x80808080) >> 7) * 0x1b);
 1177              		.loc 3 224 0
 1178 000e 019B     		ldr	r3, [sp, #4]
 1179 0010 DB09     		lsrs	r3, r3, #7
 1180 0012 064A     		ldr	r2, .L37+4
 1181 0014 1A40     		ands	r2, r3
 1182 0016 1300     		movs	r3, r2
 1183 0018 5B00     		lsls	r3, r3, #1
 1184 001a 9B18     		adds	r3, r3, r2
 1185 001c DA00     		lsls	r2, r3, #3
 1186 001e 9B18     		adds	r3, r3, r2
 223:aes.c         ****     (((x & 0x80808080) >> 7) * 0x1b);
 1187              		.loc 3 223 0
 1188 0020 4B40     		eors	r3, r1
 225:aes.c         **** }
 1189              		.loc 3 225 0
 1190 0022 1800     		movs	r0, r3
 1191 0024 02B0     		add	sp, sp, #8
 1192              		@ sp needed
 1193 0026 7047     		bx	lr
 1194              	.L38:
 1195              		.align	2
 1196              	.L37:
 1197 0028 FEFEFEFE 		.word	-16843010
 1198 002c 01010101 		.word	16843009
 1199              		.cfi_endproc
 1200              	.LFE33:
 1201              		.size	gf_poly_mul2, .-gf_poly_mul2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 29


 1202              		.section	.text.mix_column,"ax",%progbits
 1203              		.align	2
 1204              		.code	16
 1205              		.thumb_func
 1206              		.type	mix_column, %function
 1207              	mix_column:
 1208              	.LFB34:
 226:aes.c         **** 
 227:aes.c         **** static uint32_t mix_column(uint32_t x)
 228:aes.c         **** {
 1209              		.loc 3 228 0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 16
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213 0000 10B5     		push	{r4, lr}
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
 1217 0002 84B0     		sub	sp, sp, #16
 1218              		.cfi_def_cfa_offset 24
 1219 0004 0190     		str	r0, [sp, #4]
 229:aes.c         ****   uint32_t x2 = gf_poly_mul2(x);
 1220              		.loc 3 229 0
 1221 0006 019B     		ldr	r3, [sp, #4]
 1222 0008 1800     		movs	r0, r3
 1223 000a FFF7FEFF 		bl	gf_poly_mul2
 1224 000e 0300     		movs	r3, r0
 1225 0010 0393     		str	r3, [sp, #12]
 230:aes.c         ****   return x2 ^ rotr32(x ^ x2, 24) ^ rotr32(x, 16) ^ rotr32(x, 8);
 1226              		.loc 3 230 0
 1227 0012 019A     		ldr	r2, [sp, #4]
 1228 0014 039B     		ldr	r3, [sp, #12]
 1229 0016 5340     		eors	r3, r2
 1230 0018 1821     		movs	r1, #24
 1231 001a 1800     		movs	r0, r3
 1232 001c FFF7FEFF 		bl	rotr32
 1233 0020 0200     		movs	r2, r0
 1234 0022 039B     		ldr	r3, [sp, #12]
 1235 0024 5A40     		eors	r2, r3
 1236 0026 1400     		movs	r4, r2
 1237 0028 019B     		ldr	r3, [sp, #4]
 1238 002a 1021     		movs	r1, #16
 1239 002c 1800     		movs	r0, r3
 1240 002e FFF7FEFF 		bl	rotr32
 1241 0032 0300     		movs	r3, r0
 1242 0034 5C40     		eors	r4, r3
 1243 0036 019B     		ldr	r3, [sp, #4]
 1244 0038 0821     		movs	r1, #8
 1245 003a 1800     		movs	r0, r3
 1246 003c FFF7FEFF 		bl	rotr32
 1247 0040 0300     		movs	r3, r0
 1248 0042 6340     		eors	r3, r4
 231:aes.c         **** }
 1249              		.loc 3 231 0
 1250 0044 1800     		movs	r0, r3
 1251 0046 04B0     		add	sp, sp, #16
 1252              		@ sp needed
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 30


 1253 0048 10BD     		pop	{r4, pc}
 1254              		.cfi_endproc
 1255              	.LFE34:
 1256              		.size	mix_column, .-mix_column
 1257 004a C046     		.section	.text.mix_columns,"ax",%progbits
 1258              		.align	2
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	mix_columns, %function
 1262              	mix_columns:
 1263              	.LFB35:
 232:aes.c         **** 
 233:aes.c         **** static void mix_columns(uint32_t state[4])
 234:aes.c         **** {
 1264              		.loc 3 234 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 8
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268 0000 10B5     		push	{r4, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 4, -8
 1271              		.cfi_offset 14, -4
 1272 0002 82B0     		sub	sp, sp, #8
 1273              		.cfi_def_cfa_offset 16
 1274 0004 0190     		str	r0, [sp, #4]
 235:aes.c         ****   state[0] = mix_column(state[0]);
 1275              		.loc 3 235 0
 1276 0006 019B     		ldr	r3, [sp, #4]
 1277 0008 1B68     		ldr	r3, [r3]
 1278 000a 1800     		movs	r0, r3
 1279 000c FFF7FEFF 		bl	mix_column
 1280 0010 0200     		movs	r2, r0
 1281 0012 019B     		ldr	r3, [sp, #4]
 1282 0014 1A60     		str	r2, [r3]
 236:aes.c         ****   state[1] = mix_column(state[1]);
 1283              		.loc 3 236 0
 1284 0016 019B     		ldr	r3, [sp, #4]
 1285 0018 1C1D     		adds	r4, r3, #4
 1286 001a 019B     		ldr	r3, [sp, #4]
 1287 001c 0433     		adds	r3, r3, #4
 1288 001e 1B68     		ldr	r3, [r3]
 1289 0020 1800     		movs	r0, r3
 1290 0022 FFF7FEFF 		bl	mix_column
 1291 0026 0300     		movs	r3, r0
 1292 0028 2360     		str	r3, [r4]
 237:aes.c         ****   state[2] = mix_column(state[2]);
 1293              		.loc 3 237 0
 1294 002a 019B     		ldr	r3, [sp, #4]
 1295 002c 0833     		adds	r3, r3, #8
 1296 002e 1C00     		movs	r4, r3
 1297 0030 019B     		ldr	r3, [sp, #4]
 1298 0032 0833     		adds	r3, r3, #8
 1299 0034 1B68     		ldr	r3, [r3]
 1300 0036 1800     		movs	r0, r3
 1301 0038 FFF7FEFF 		bl	mix_column
 1302 003c 0300     		movs	r3, r0
 1303 003e 2360     		str	r3, [r4]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 31


 238:aes.c         ****   state[3] = mix_column(state[3]);
 1304              		.loc 3 238 0
 1305 0040 019B     		ldr	r3, [sp, #4]
 1306 0042 0C33     		adds	r3, r3, #12
 1307 0044 1C00     		movs	r4, r3
 1308 0046 019B     		ldr	r3, [sp, #4]
 1309 0048 0C33     		adds	r3, r3, #12
 1310 004a 1B68     		ldr	r3, [r3]
 1311 004c 1800     		movs	r0, r3
 1312 004e FFF7FEFF 		bl	mix_column
 1313 0052 0300     		movs	r3, r0
 1314 0054 2360     		str	r3, [r4]
 239:aes.c         **** }
 1315              		.loc 3 239 0
 1316 0056 C046     		nop
 1317 0058 02B0     		add	sp, sp, #8
 1318              		@ sp needed
 1319 005a 10BD     		pop	{r4, pc}
 1320              		.cfi_endproc
 1321              	.LFE35:
 1322              		.size	mix_columns, .-mix_columns
 1323              		.section	.text.cf_aes_encrypt,"ax",%progbits
 1324              		.align	2
 1325              		.global	cf_aes_encrypt
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	cf_aes_encrypt, %function
 1329              	cf_aes_encrypt:
 1330              	.LFB36:
 240:aes.c         **** 
 241:aes.c         **** void cf_aes_encrypt(const cf_aes_context *ctx,
 242:aes.c         ****                     const uint8_t in[AES_BLOCKSZ],
 243:aes.c         ****                     uint8_t out[AES_BLOCKSZ])
 244:aes.c         **** {
 1331              		.loc 3 244 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 40
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 00B5     		push	{lr}
 1336              		.cfi_def_cfa_offset 4
 1337              		.cfi_offset 14, -4
 1338 0002 8BB0     		sub	sp, sp, #44
 1339              		.cfi_def_cfa_offset 48
 1340 0004 0390     		str	r0, [sp, #12]
 1341 0006 0291     		str	r1, [sp, #8]
 1342 0008 0192     		str	r2, [sp, #4]
 245:aes.c         ****   assert(ctx->rounds == AES128_ROUNDS ||
 1343              		.loc 3 245 0
 1344 000a 039B     		ldr	r3, [sp, #12]
 1345 000c 1B68     		ldr	r3, [r3]
 1346 000e 0A2B     		cmp	r3, #10
 1347 0010 09D0     		beq	.L43
 1348              		.loc 3 245 0 is_stmt 0 discriminator 1
 1349 0012 039B     		ldr	r3, [sp, #12]
 1350 0014 1B68     		ldr	r3, [r3]
 1351 0016 0C2B     		cmp	r3, #12
 1352 0018 05D0     		beq	.L43
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 32


 1353              		.loc 3 245 0 discriminator 2
 1354 001a 039B     		ldr	r3, [sp, #12]
 1355 001c 1B68     		ldr	r3, [r3]
 1356 001e 0E2B     		cmp	r3, #14
 1357 0020 01D0     		beq	.L43
 1358              		.loc 3 245 0 discriminator 3
 1359 0022 FFF7FEFF 		bl	abort
 1360              	.L43:
 246:aes.c         ****          ctx->rounds == AES192_ROUNDS ||
 247:aes.c         ****          ctx->rounds == AES256_ROUNDS);
 248:aes.c         **** 
 249:aes.c         ****   uint32_t state[4] = {
 250:aes.c         ****     read32_be(in + 0),
 1361              		.loc 3 250 0 is_stmt 1
 1362 0026 029B     		ldr	r3, [sp, #8]
 1363 0028 1800     		movs	r0, r3
 1364 002a FFF7FEFF 		bl	read32_be
 1365 002e 0200     		movs	r2, r0
 249:aes.c         ****     read32_be(in + 0),
 1366              		.loc 3 249 0
 1367 0030 04AB     		add	r3, sp, #16
 1368 0032 1A60     		str	r2, [r3]
 251:aes.c         ****     read32_be(in + 4),
 1369              		.loc 3 251 0
 1370 0034 029B     		ldr	r3, [sp, #8]
 1371 0036 0433     		adds	r3, r3, #4
 1372 0038 1800     		movs	r0, r3
 1373 003a FFF7FEFF 		bl	read32_be
 1374 003e 0200     		movs	r2, r0
 249:aes.c         ****     read32_be(in + 0),
 1375              		.loc 3 249 0
 1376 0040 04AB     		add	r3, sp, #16
 1377 0042 5A60     		str	r2, [r3, #4]
 252:aes.c         ****     read32_be(in + 8),
 1378              		.loc 3 252 0
 1379 0044 029B     		ldr	r3, [sp, #8]
 1380 0046 0833     		adds	r3, r3, #8
 1381 0048 1800     		movs	r0, r3
 1382 004a FFF7FEFF 		bl	read32_be
 1383 004e 0200     		movs	r2, r0
 249:aes.c         ****     read32_be(in + 0),
 1384              		.loc 3 249 0
 1385 0050 04AB     		add	r3, sp, #16
 1386 0052 9A60     		str	r2, [r3, #8]
 253:aes.c         ****     read32_be(in + 12)
 1387              		.loc 3 253 0
 1388 0054 029B     		ldr	r3, [sp, #8]
 1389 0056 0C33     		adds	r3, r3, #12
 1390 0058 1800     		movs	r0, r3
 1391 005a FFF7FEFF 		bl	read32_be
 1392 005e 0200     		movs	r2, r0
 249:aes.c         ****     read32_be(in + 0),
 1393              		.loc 3 249 0
 1394 0060 04AB     		add	r3, sp, #16
 1395 0062 DA60     		str	r2, [r3, #12]
 254:aes.c         ****   };
 255:aes.c         **** 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 33


 256:aes.c         ****   const uint32_t *round_keys = ctx->ks;
 1396              		.loc 3 256 0
 1397 0064 039B     		ldr	r3, [sp, #12]
 1398 0066 0433     		adds	r3, r3, #4
 1399 0068 0993     		str	r3, [sp, #36]
 257:aes.c         ****   add_round_key(state, round_keys);
 1400              		.loc 3 257 0
 1401 006a 099A     		ldr	r2, [sp, #36]
 1402 006c 04AB     		add	r3, sp, #16
 1403 006e 1100     		movs	r1, r2
 1404 0070 1800     		movs	r0, r3
 1405 0072 FFF7FEFF 		bl	add_round_key
 258:aes.c         ****   round_keys += 4;
 1406              		.loc 3 258 0
 1407 0076 099B     		ldr	r3, [sp, #36]
 1408 0078 1033     		adds	r3, r3, #16
 1409 007a 0993     		str	r3, [sp, #36]
 1410              	.LBB3:
 259:aes.c         **** 
 260:aes.c         ****   for (uint32_t round = 1; round < ctx->rounds; round++)
 1411              		.loc 3 260 0
 1412 007c 0123     		movs	r3, #1
 1413 007e 0893     		str	r3, [sp, #32]
 1414 0080 17E0     		b	.L44
 1415              	.L45:
 261:aes.c         ****   {
 262:aes.c         ****     sub_block(state);
 1416              		.loc 3 262 0 discriminator 3
 1417 0082 04AB     		add	r3, sp, #16
 1418 0084 1800     		movs	r0, r3
 1419 0086 FFF7FEFF 		bl	sub_block
 263:aes.c         ****     shift_rows(state);
 1420              		.loc 3 263 0 discriminator 3
 1421 008a 04AB     		add	r3, sp, #16
 1422 008c 1800     		movs	r0, r3
 1423 008e FFF7FEFF 		bl	shift_rows
 264:aes.c         ****     mix_columns(state);
 1424              		.loc 3 264 0 discriminator 3
 1425 0092 04AB     		add	r3, sp, #16
 1426 0094 1800     		movs	r0, r3
 1427 0096 FFF7FEFF 		bl	mix_columns
 265:aes.c         ****     add_round_key(state, round_keys);
 1428              		.loc 3 265 0 discriminator 3
 1429 009a 099A     		ldr	r2, [sp, #36]
 1430 009c 04AB     		add	r3, sp, #16
 1431 009e 1100     		movs	r1, r2
 1432 00a0 1800     		movs	r0, r3
 1433 00a2 FFF7FEFF 		bl	add_round_key
 266:aes.c         ****     round_keys += 4;
 1434              		.loc 3 266 0 discriminator 3
 1435 00a6 099B     		ldr	r3, [sp, #36]
 1436 00a8 1033     		adds	r3, r3, #16
 1437 00aa 0993     		str	r3, [sp, #36]
 260:aes.c         ****   {
 1438              		.loc 3 260 0 discriminator 3
 1439 00ac 089B     		ldr	r3, [sp, #32]
 1440 00ae 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 34


 1441 00b0 0893     		str	r3, [sp, #32]
 1442              	.L44:
 260:aes.c         ****   {
 1443              		.loc 3 260 0 is_stmt 0 discriminator 1
 1444 00b2 039B     		ldr	r3, [sp, #12]
 1445 00b4 1A68     		ldr	r2, [r3]
 1446 00b6 089B     		ldr	r3, [sp, #32]
 1447 00b8 9A42     		cmp	r2, r3
 1448 00ba E2D8     		bhi	.L45
 1449              	.LBE3:
 267:aes.c         ****   }
 268:aes.c         **** 
 269:aes.c         ****   sub_block(state);
 1450              		.loc 3 269 0 is_stmt 1
 1451 00bc 04AB     		add	r3, sp, #16
 1452 00be 1800     		movs	r0, r3
 1453 00c0 FFF7FEFF 		bl	sub_block
 270:aes.c         ****   shift_rows(state);
 1454              		.loc 3 270 0
 1455 00c4 04AB     		add	r3, sp, #16
 1456 00c6 1800     		movs	r0, r3
 1457 00c8 FFF7FEFF 		bl	shift_rows
 271:aes.c         ****   add_round_key(state, round_keys);
 1458              		.loc 3 271 0
 1459 00cc 099A     		ldr	r2, [sp, #36]
 1460 00ce 04AB     		add	r3, sp, #16
 1461 00d0 1100     		movs	r1, r2
 1462 00d2 1800     		movs	r0, r3
 1463 00d4 FFF7FEFF 		bl	add_round_key
 272:aes.c         **** 
 273:aes.c         ****   write32_be(state[0], out + 0);
 1464              		.loc 3 273 0
 1465 00d8 04AB     		add	r3, sp, #16
 1466 00da 1B68     		ldr	r3, [r3]
 1467 00dc 019A     		ldr	r2, [sp, #4]
 1468 00de 1100     		movs	r1, r2
 1469 00e0 1800     		movs	r0, r3
 1470 00e2 FFF7FEFF 		bl	write32_be
 274:aes.c         ****   write32_be(state[1], out + 4);
 1471              		.loc 3 274 0
 1472 00e6 04AB     		add	r3, sp, #16
 1473 00e8 5A68     		ldr	r2, [r3, #4]
 1474 00ea 019B     		ldr	r3, [sp, #4]
 1475 00ec 0433     		adds	r3, r3, #4
 1476 00ee 1900     		movs	r1, r3
 1477 00f0 1000     		movs	r0, r2
 1478 00f2 FFF7FEFF 		bl	write32_be
 275:aes.c         ****   write32_be(state[2], out + 8);
 1479              		.loc 3 275 0
 1480 00f6 04AB     		add	r3, sp, #16
 1481 00f8 9A68     		ldr	r2, [r3, #8]
 1482 00fa 019B     		ldr	r3, [sp, #4]
 1483 00fc 0833     		adds	r3, r3, #8
 1484 00fe 1900     		movs	r1, r3
 1485 0100 1000     		movs	r0, r2
 1486 0102 FFF7FEFF 		bl	write32_be
 276:aes.c         ****   write32_be(state[3], out + 12);
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 35


 1487              		.loc 3 276 0
 1488 0106 04AB     		add	r3, sp, #16
 1489 0108 DA68     		ldr	r2, [r3, #12]
 1490 010a 019B     		ldr	r3, [sp, #4]
 1491 010c 0C33     		adds	r3, r3, #12
 1492 010e 1900     		movs	r1, r3
 1493 0110 1000     		movs	r0, r2
 1494 0112 FFF7FEFF 		bl	write32_be
 277:aes.c         **** }
 1495              		.loc 3 277 0
 1496 0116 C046     		nop
 1497 0118 0BB0     		add	sp, sp, #44
 1498              		@ sp needed
 1499 011a 00BD     		pop	{pc}
 1500              		.cfi_endproc
 1501              	.LFE36:
 1502              		.size	cf_aes_encrypt, .-cf_aes_encrypt
 1503              		.section	.rodata
 1504 010b 00       		.align	2
 1505              		.type	S_inv, %object
 1506              		.size	S_inv, 256
 1507              	S_inv:
 1508 010c 52       		.byte	82
 1509 010d 09       		.byte	9
 1510 010e 6A       		.byte	106
 1511 010f D5       		.byte	-43
 1512 0110 30       		.byte	48
 1513 0111 36       		.byte	54
 1514 0112 A5       		.byte	-91
 1515 0113 38       		.byte	56
 1516 0114 BF       		.byte	-65
 1517 0115 40       		.byte	64
 1518 0116 A3       		.byte	-93
 1519 0117 9E       		.byte	-98
 1520 0118 81       		.byte	-127
 1521 0119 F3       		.byte	-13
 1522 011a D7       		.byte	-41
 1523 011b FB       		.byte	-5
 1524 011c 7C       		.byte	124
 1525 011d E3       		.byte	-29
 1526 011e 39       		.byte	57
 1527 011f 82       		.byte	-126
 1528 0120 9B       		.byte	-101
 1529 0121 2F       		.byte	47
 1530 0122 FF       		.byte	-1
 1531 0123 87       		.byte	-121
 1532 0124 34       		.byte	52
 1533 0125 8E       		.byte	-114
 1534 0126 43       		.byte	67
 1535 0127 44       		.byte	68
 1536 0128 C4       		.byte	-60
 1537 0129 DE       		.byte	-34
 1538 012a E9       		.byte	-23
 1539 012b CB       		.byte	-53
 1540 012c 54       		.byte	84
 1541 012d 7B       		.byte	123
 1542 012e 94       		.byte	-108
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 36


 1543 012f 32       		.byte	50
 1544 0130 A6       		.byte	-90
 1545 0131 C2       		.byte	-62
 1546 0132 23       		.byte	35
 1547 0133 3D       		.byte	61
 1548 0134 EE       		.byte	-18
 1549 0135 4C       		.byte	76
 1550 0136 95       		.byte	-107
 1551 0137 0B       		.byte	11
 1552 0138 42       		.byte	66
 1553 0139 FA       		.byte	-6
 1554 013a C3       		.byte	-61
 1555 013b 4E       		.byte	78
 1556 013c 08       		.byte	8
 1557 013d 2E       		.byte	46
 1558 013e A1       		.byte	-95
 1559 013f 66       		.byte	102
 1560 0140 28       		.byte	40
 1561 0141 D9       		.byte	-39
 1562 0142 24       		.byte	36
 1563 0143 B2       		.byte	-78
 1564 0144 76       		.byte	118
 1565 0145 5B       		.byte	91
 1566 0146 A2       		.byte	-94
 1567 0147 49       		.byte	73
 1568 0148 6D       		.byte	109
 1569 0149 8B       		.byte	-117
 1570 014a D1       		.byte	-47
 1571 014b 25       		.byte	37
 1572 014c 72       		.byte	114
 1573 014d F8       		.byte	-8
 1574 014e F6       		.byte	-10
 1575 014f 64       		.byte	100
 1576 0150 86       		.byte	-122
 1577 0151 68       		.byte	104
 1578 0152 98       		.byte	-104
 1579 0153 16       		.byte	22
 1580 0154 D4       		.byte	-44
 1581 0155 A4       		.byte	-92
 1582 0156 5C       		.byte	92
 1583 0157 CC       		.byte	-52
 1584 0158 5D       		.byte	93
 1585 0159 65       		.byte	101
 1586 015a B6       		.byte	-74
 1587 015b 92       		.byte	-110
 1588 015c 6C       		.byte	108
 1589 015d 70       		.byte	112
 1590 015e 48       		.byte	72
 1591 015f 50       		.byte	80
 1592 0160 FD       		.byte	-3
 1593 0161 ED       		.byte	-19
 1594 0162 B9       		.byte	-71
 1595 0163 DA       		.byte	-38
 1596 0164 5E       		.byte	94
 1597 0165 15       		.byte	21
 1598 0166 46       		.byte	70
 1599 0167 57       		.byte	87
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 37


 1600 0168 A7       		.byte	-89
 1601 0169 8D       		.byte	-115
 1602 016a 9D       		.byte	-99
 1603 016b 84       		.byte	-124
 1604 016c 90       		.byte	-112
 1605 016d D8       		.byte	-40
 1606 016e AB       		.byte	-85
 1607 016f 00       		.byte	0
 1608 0170 8C       		.byte	-116
 1609 0171 BC       		.byte	-68
 1610 0172 D3       		.byte	-45
 1611 0173 0A       		.byte	10
 1612 0174 F7       		.byte	-9
 1613 0175 E4       		.byte	-28
 1614 0176 58       		.byte	88
 1615 0177 05       		.byte	5
 1616 0178 B8       		.byte	-72
 1617 0179 B3       		.byte	-77
 1618 017a 45       		.byte	69
 1619 017b 06       		.byte	6
 1620 017c D0       		.byte	-48
 1621 017d 2C       		.byte	44
 1622 017e 1E       		.byte	30
 1623 017f 8F       		.byte	-113
 1624 0180 CA       		.byte	-54
 1625 0181 3F       		.byte	63
 1626 0182 0F       		.byte	15
 1627 0183 02       		.byte	2
 1628 0184 C1       		.byte	-63
 1629 0185 AF       		.byte	-81
 1630 0186 BD       		.byte	-67
 1631 0187 03       		.byte	3
 1632 0188 01       		.byte	1
 1633 0189 13       		.byte	19
 1634 018a 8A       		.byte	-118
 1635 018b 6B       		.byte	107
 1636 018c 3A       		.byte	58
 1637 018d 91       		.byte	-111
 1638 018e 11       		.byte	17
 1639 018f 41       		.byte	65
 1640 0190 4F       		.byte	79
 1641 0191 67       		.byte	103
 1642 0192 DC       		.byte	-36
 1643 0193 EA       		.byte	-22
 1644 0194 97       		.byte	-105
 1645 0195 F2       		.byte	-14
 1646 0196 CF       		.byte	-49
 1647 0197 CE       		.byte	-50
 1648 0198 F0       		.byte	-16
 1649 0199 B4       		.byte	-76
 1650 019a E6       		.byte	-26
 1651 019b 73       		.byte	115
 1652 019c 96       		.byte	-106
 1653 019d AC       		.byte	-84
 1654 019e 74       		.byte	116
 1655 019f 22       		.byte	34
 1656 01a0 E7       		.byte	-25
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 38


 1657 01a1 AD       		.byte	-83
 1658 01a2 35       		.byte	53
 1659 01a3 85       		.byte	-123
 1660 01a4 E2       		.byte	-30
 1661 01a5 F9       		.byte	-7
 1662 01a6 37       		.byte	55
 1663 01a7 E8       		.byte	-24
 1664 01a8 1C       		.byte	28
 1665 01a9 75       		.byte	117
 1666 01aa DF       		.byte	-33
 1667 01ab 6E       		.byte	110
 1668 01ac 47       		.byte	71
 1669 01ad F1       		.byte	-15
 1670 01ae 1A       		.byte	26
 1671 01af 71       		.byte	113
 1672 01b0 1D       		.byte	29
 1673 01b1 29       		.byte	41
 1674 01b2 C5       		.byte	-59
 1675 01b3 89       		.byte	-119
 1676 01b4 6F       		.byte	111
 1677 01b5 B7       		.byte	-73
 1678 01b6 62       		.byte	98
 1679 01b7 0E       		.byte	14
 1680 01b8 AA       		.byte	-86
 1681 01b9 18       		.byte	24
 1682 01ba BE       		.byte	-66
 1683 01bb 1B       		.byte	27
 1684 01bc FC       		.byte	-4
 1685 01bd 56       		.byte	86
 1686 01be 3E       		.byte	62
 1687 01bf 4B       		.byte	75
 1688 01c0 C6       		.byte	-58
 1689 01c1 D2       		.byte	-46
 1690 01c2 79       		.byte	121
 1691 01c3 20       		.byte	32
 1692 01c4 9A       		.byte	-102
 1693 01c5 DB       		.byte	-37
 1694 01c6 C0       		.byte	-64
 1695 01c7 FE       		.byte	-2
 1696 01c8 78       		.byte	120
 1697 01c9 CD       		.byte	-51
 1698 01ca 5A       		.byte	90
 1699 01cb F4       		.byte	-12
 1700 01cc 1F       		.byte	31
 1701 01cd DD       		.byte	-35
 1702 01ce A8       		.byte	-88
 1703 01cf 33       		.byte	51
 1704 01d0 88       		.byte	-120
 1705 01d1 07       		.byte	7
 1706 01d2 C7       		.byte	-57
 1707 01d3 31       		.byte	49
 1708 01d4 B1       		.byte	-79
 1709 01d5 12       		.byte	18
 1710 01d6 10       		.byte	16
 1711 01d7 59       		.byte	89
 1712 01d8 27       		.byte	39
 1713 01d9 80       		.byte	-128
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 39


 1714 01da EC       		.byte	-20
 1715 01db 5F       		.byte	95
 1716 01dc 60       		.byte	96
 1717 01dd 51       		.byte	81
 1718 01de 7F       		.byte	127
 1719 01df A9       		.byte	-87
 1720 01e0 19       		.byte	25
 1721 01e1 B5       		.byte	-75
 1722 01e2 4A       		.byte	74
 1723 01e3 0D       		.byte	13
 1724 01e4 2D       		.byte	45
 1725 01e5 E5       		.byte	-27
 1726 01e6 7A       		.byte	122
 1727 01e7 9F       		.byte	-97
 1728 01e8 93       		.byte	-109
 1729 01e9 C9       		.byte	-55
 1730 01ea 9C       		.byte	-100
 1731 01eb EF       		.byte	-17
 1732 01ec A0       		.byte	-96
 1733 01ed E0       		.byte	-32
 1734 01ee 3B       		.byte	59
 1735 01ef 4D       		.byte	77
 1736 01f0 AE       		.byte	-82
 1737 01f1 2A       		.byte	42
 1738 01f2 F5       		.byte	-11
 1739 01f3 B0       		.byte	-80
 1740 01f4 C8       		.byte	-56
 1741 01f5 EB       		.byte	-21
 1742 01f6 BB       		.byte	-69
 1743 01f7 3C       		.byte	60
 1744 01f8 83       		.byte	-125
 1745 01f9 53       		.byte	83
 1746 01fa 99       		.byte	-103
 1747 01fb 61       		.byte	97
 1748 01fc 17       		.byte	23
 1749 01fd 2B       		.byte	43
 1750 01fe 04       		.byte	4
 1751 01ff 7E       		.byte	126
 1752 0200 BA       		.byte	-70
 1753 0201 77       		.byte	119
 1754 0202 D6       		.byte	-42
 1755 0203 26       		.byte	38
 1756 0204 E1       		.byte	-31
 1757 0205 69       		.byte	105
 1758 0206 14       		.byte	20
 1759 0207 63       		.byte	99
 1760 0208 55       		.byte	85
 1761 0209 21       		.byte	33
 1762 020a 0C       		.byte	12
 1763 020b 7D       		.byte	125
 1764              		.section	.text.inv_sub_block,"ax",%progbits
 1765              		.align	2
 1766              		.code	16
 1767              		.thumb_func
 1768              		.type	inv_sub_block, %function
 1769              	inv_sub_block:
 1770              	.LFB37:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 40


 278:aes.c         **** 
 279:aes.c         **** #if CF_AES_ENCRYPT_ONLY == 0
 280:aes.c         **** static const uint8_t S_inv[256] =
 281:aes.c         **** {
 282:aes.c         ****   0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81,
 283:aes.c         ****   0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e,
 284:aes.c         ****   0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23,
 285:aes.c         ****   0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66,
 286:aes.c         ****   0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72,
 287:aes.c         ****   0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65,
 288:aes.c         ****   0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46,
 289:aes.c         ****   0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a,
 290:aes.c         ****   0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca,
 291:aes.c         ****   0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91,
 292:aes.c         ****   0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6,
 293:aes.c         ****   0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,
 294:aes.c         ****   0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f,
 295:aes.c         ****   0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2,
 296:aes.c         ****   0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8,
 297:aes.c         ****   0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
 298:aes.c         ****   0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93,
 299:aes.c         ****   0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb,
 300:aes.c         ****   0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6,
 301:aes.c         ****   0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d
 302:aes.c         **** };
 303:aes.c         **** 
 304:aes.c         **** static void inv_sub_block(uint32_t state[4])
 305:aes.c         **** {
 1771              		.loc 3 305 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 8
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775 0000 10B5     		push	{r4, lr}
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 4, -8
 1778              		.cfi_offset 14, -4
 1779 0002 82B0     		sub	sp, sp, #8
 1780              		.cfi_def_cfa_offset 16
 1781 0004 0190     		str	r0, [sp, #4]
 306:aes.c         ****   state[0] = sub_word(state[0], S_inv);
 1782              		.loc 3 306 0
 1783 0006 019B     		ldr	r3, [sp, #4]
 1784 0008 1B68     		ldr	r3, [r3]
 1785 000a 184A     		ldr	r2, .L47
 1786 000c 1100     		movs	r1, r2
 1787 000e 1800     		movs	r0, r3
 1788 0010 FFF7FEFF 		bl	sub_word
 1789 0014 0200     		movs	r2, r0
 1790 0016 019B     		ldr	r3, [sp, #4]
 1791 0018 1A60     		str	r2, [r3]
 307:aes.c         ****   state[1] = sub_word(state[1], S_inv);
 1792              		.loc 3 307 0
 1793 001a 019B     		ldr	r3, [sp, #4]
 1794 001c 1C1D     		adds	r4, r3, #4
 1795 001e 019B     		ldr	r3, [sp, #4]
 1796 0020 0433     		adds	r3, r3, #4
 1797 0022 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 41


 1798 0024 114A     		ldr	r2, .L47
 1799 0026 1100     		movs	r1, r2
 1800 0028 1800     		movs	r0, r3
 1801 002a FFF7FEFF 		bl	sub_word
 1802 002e 0300     		movs	r3, r0
 1803 0030 2360     		str	r3, [r4]
 308:aes.c         ****   state[2] = sub_word(state[2], S_inv);
 1804              		.loc 3 308 0
 1805 0032 019B     		ldr	r3, [sp, #4]
 1806 0034 0833     		adds	r3, r3, #8
 1807 0036 1C00     		movs	r4, r3
 1808 0038 019B     		ldr	r3, [sp, #4]
 1809 003a 0833     		adds	r3, r3, #8
 1810 003c 1B68     		ldr	r3, [r3]
 1811 003e 0B4A     		ldr	r2, .L47
 1812 0040 1100     		movs	r1, r2
 1813 0042 1800     		movs	r0, r3
 1814 0044 FFF7FEFF 		bl	sub_word
 1815 0048 0300     		movs	r3, r0
 1816 004a 2360     		str	r3, [r4]
 309:aes.c         ****   state[3] = sub_word(state[3], S_inv);
 1817              		.loc 3 309 0
 1818 004c 019B     		ldr	r3, [sp, #4]
 1819 004e 0C33     		adds	r3, r3, #12
 1820 0050 1C00     		movs	r4, r3
 1821 0052 019B     		ldr	r3, [sp, #4]
 1822 0054 0C33     		adds	r3, r3, #12
 1823 0056 1B68     		ldr	r3, [r3]
 1824 0058 044A     		ldr	r2, .L47
 1825 005a 1100     		movs	r1, r2
 1826 005c 1800     		movs	r0, r3
 1827 005e FFF7FEFF 		bl	sub_word
 1828 0062 0300     		movs	r3, r0
 1829 0064 2360     		str	r3, [r4]
 310:aes.c         **** }
 1830              		.loc 3 310 0
 1831 0066 C046     		nop
 1832 0068 02B0     		add	sp, sp, #8
 1833              		@ sp needed
 1834 006a 10BD     		pop	{r4, pc}
 1835              	.L48:
 1836              		.align	2
 1837              	.L47:
 1838 006c 0C010000 		.word	S_inv
 1839              		.cfi_endproc
 1840              	.LFE37:
 1841              		.size	inv_sub_block, .-inv_sub_block
 1842              		.section	.text.inv_shift_rows,"ax",%progbits
 1843              		.align	2
 1844              		.code	16
 1845              		.thumb_func
 1846              		.type	inv_shift_rows, %function
 1847              	inv_shift_rows:
 1848              	.LFB38:
 311:aes.c         **** 
 312:aes.c         **** static void inv_shift_rows(uint32_t state[4])
 313:aes.c         **** {
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 42


 1849              		.loc 3 313 0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 24
 1852              		@ frame_needed = 0, uses_anonymous_args = 0
 1853              		@ link register save eliminated.
 1854 0000 86B0     		sub	sp, sp, #24
 1855              		.cfi_def_cfa_offset 24
 1856 0002 0190     		str	r0, [sp, #4]
 314:aes.c         ****   uint32_t u, v, x, y;
 315:aes.c         **** 
 316:aes.c         ****   u = word4(byte(state[0], 0),
 1857              		.loc 3 316 0
 1858 0004 019B     		ldr	r3, [sp, #4]
 1859 0006 1B68     		ldr	r3, [r3]
 1860 0008 1B0E     		lsrs	r3, r3, #24
 1861 000a 1A06     		lsls	r2, r3, #24
 1862 000c 019B     		ldr	r3, [sp, #4]
 1863 000e 0C33     		adds	r3, r3, #12
 1864 0010 1968     		ldr	r1, [r3]
 1865 0012 FF23     		movs	r3, #255
 1866 0014 1B04     		lsls	r3, r3, #16
 1867 0016 0B40     		ands	r3, r1
 1868 0018 1A43     		orrs	r2, r3
 1869 001a 019B     		ldr	r3, [sp, #4]
 1870 001c 0833     		adds	r3, r3, #8
 1871 001e 1968     		ldr	r1, [r3]
 1872 0020 FF23     		movs	r3, #255
 1873 0022 1B02     		lsls	r3, r3, #8
 1874 0024 0B40     		ands	r3, r1
 1875 0026 1A43     		orrs	r2, r3
 1876 0028 019B     		ldr	r3, [sp, #4]
 1877 002a 0433     		adds	r3, r3, #4
 1878 002c 1B68     		ldr	r3, [r3]
 1879 002e FF21     		movs	r1, #255
 1880 0030 0B40     		ands	r3, r1
 1881 0032 1343     		orrs	r3, r2
 1882 0034 0593     		str	r3, [sp, #20]
 317:aes.c         ****             byte(state[3], 1),
 318:aes.c         ****             byte(state[2], 2),
 319:aes.c         ****             byte(state[1], 3));
 320:aes.c         **** 
 321:aes.c         ****   v = word4(byte(state[1], 0),
 1883              		.loc 3 321 0
 1884 0036 019B     		ldr	r3, [sp, #4]
 1885 0038 0433     		adds	r3, r3, #4
 1886 003a 1B68     		ldr	r3, [r3]
 1887 003c 1B0E     		lsrs	r3, r3, #24
 1888 003e 1A06     		lsls	r2, r3, #24
 1889 0040 019B     		ldr	r3, [sp, #4]
 1890 0042 1968     		ldr	r1, [r3]
 1891 0044 FF23     		movs	r3, #255
 1892 0046 1B04     		lsls	r3, r3, #16
 1893 0048 0B40     		ands	r3, r1
 1894 004a 1A43     		orrs	r2, r3
 1895 004c 019B     		ldr	r3, [sp, #4]
 1896 004e 0C33     		adds	r3, r3, #12
 1897 0050 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 43


 1898 0052 FF23     		movs	r3, #255
 1899 0054 1B02     		lsls	r3, r3, #8
 1900 0056 0B40     		ands	r3, r1
 1901 0058 1A43     		orrs	r2, r3
 1902 005a 019B     		ldr	r3, [sp, #4]
 1903 005c 0833     		adds	r3, r3, #8
 1904 005e 1B68     		ldr	r3, [r3]
 1905 0060 FF21     		movs	r1, #255
 1906 0062 0B40     		ands	r3, r1
 1907 0064 1343     		orrs	r3, r2
 1908 0066 0493     		str	r3, [sp, #16]
 322:aes.c         ****             byte(state[0], 1),
 323:aes.c         ****             byte(state[3], 2),
 324:aes.c         ****             byte(state[2], 3));
 325:aes.c         **** 
 326:aes.c         ****   x = word4(byte(state[2], 0),
 1909              		.loc 3 326 0
 1910 0068 019B     		ldr	r3, [sp, #4]
 1911 006a 0833     		adds	r3, r3, #8
 1912 006c 1B68     		ldr	r3, [r3]
 1913 006e 1B0E     		lsrs	r3, r3, #24
 1914 0070 1A06     		lsls	r2, r3, #24
 1915 0072 019B     		ldr	r3, [sp, #4]
 1916 0074 0433     		adds	r3, r3, #4
 1917 0076 1968     		ldr	r1, [r3]
 1918 0078 FF23     		movs	r3, #255
 1919 007a 1B04     		lsls	r3, r3, #16
 1920 007c 0B40     		ands	r3, r1
 1921 007e 1A43     		orrs	r2, r3
 1922 0080 019B     		ldr	r3, [sp, #4]
 1923 0082 1968     		ldr	r1, [r3]
 1924 0084 FF23     		movs	r3, #255
 1925 0086 1B02     		lsls	r3, r3, #8
 1926 0088 0B40     		ands	r3, r1
 1927 008a 1A43     		orrs	r2, r3
 1928 008c 019B     		ldr	r3, [sp, #4]
 1929 008e 0C33     		adds	r3, r3, #12
 1930 0090 1B68     		ldr	r3, [r3]
 1931 0092 FF21     		movs	r1, #255
 1932 0094 0B40     		ands	r3, r1
 1933 0096 1343     		orrs	r3, r2
 1934 0098 0393     		str	r3, [sp, #12]
 327:aes.c         ****             byte(state[1], 1),
 328:aes.c         ****             byte(state[0], 2),
 329:aes.c         ****             byte(state[3], 3));
 330:aes.c         **** 
 331:aes.c         ****   y = word4(byte(state[3], 0),
 1935              		.loc 3 331 0
 1936 009a 019B     		ldr	r3, [sp, #4]
 1937 009c 0C33     		adds	r3, r3, #12
 1938 009e 1B68     		ldr	r3, [r3]
 1939 00a0 1B0E     		lsrs	r3, r3, #24
 1940 00a2 1A06     		lsls	r2, r3, #24
 1941 00a4 019B     		ldr	r3, [sp, #4]
 1942 00a6 0833     		adds	r3, r3, #8
 1943 00a8 1968     		ldr	r1, [r3]
 1944 00aa FF23     		movs	r3, #255
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 44


 1945 00ac 1B04     		lsls	r3, r3, #16
 1946 00ae 0B40     		ands	r3, r1
 1947 00b0 1A43     		orrs	r2, r3
 1948 00b2 019B     		ldr	r3, [sp, #4]
 1949 00b4 0433     		adds	r3, r3, #4
 1950 00b6 1968     		ldr	r1, [r3]
 1951 00b8 FF23     		movs	r3, #255
 1952 00ba 1B02     		lsls	r3, r3, #8
 1953 00bc 0B40     		ands	r3, r1
 1954 00be 1A43     		orrs	r2, r3
 1955 00c0 019B     		ldr	r3, [sp, #4]
 1956 00c2 1B68     		ldr	r3, [r3]
 1957 00c4 FF21     		movs	r1, #255
 1958 00c6 0B40     		ands	r3, r1
 1959 00c8 1343     		orrs	r3, r2
 1960 00ca 0293     		str	r3, [sp, #8]
 332:aes.c         ****             byte(state[2], 1),
 333:aes.c         ****             byte(state[1], 2),
 334:aes.c         ****             byte(state[0], 3));
 335:aes.c         **** 
 336:aes.c         ****   state[0] = u;
 1961              		.loc 3 336 0
 1962 00cc 019B     		ldr	r3, [sp, #4]
 1963 00ce 059A     		ldr	r2, [sp, #20]
 1964 00d0 1A60     		str	r2, [r3]
 337:aes.c         ****   state[1] = v;
 1965              		.loc 3 337 0
 1966 00d2 019B     		ldr	r3, [sp, #4]
 1967 00d4 0433     		adds	r3, r3, #4
 1968 00d6 049A     		ldr	r2, [sp, #16]
 1969 00d8 1A60     		str	r2, [r3]
 338:aes.c         ****   state[2] = x;
 1970              		.loc 3 338 0
 1971 00da 019B     		ldr	r3, [sp, #4]
 1972 00dc 0833     		adds	r3, r3, #8
 1973 00de 039A     		ldr	r2, [sp, #12]
 1974 00e0 1A60     		str	r2, [r3]
 339:aes.c         ****   state[3] = y;
 1975              		.loc 3 339 0
 1976 00e2 019B     		ldr	r3, [sp, #4]
 1977 00e4 0C33     		adds	r3, r3, #12
 1978 00e6 029A     		ldr	r2, [sp, #8]
 1979 00e8 1A60     		str	r2, [r3]
 340:aes.c         **** }
 1980              		.loc 3 340 0
 1981 00ea C046     		nop
 1982 00ec 06B0     		add	sp, sp, #24
 1983              		@ sp needed
 1984 00ee 7047     		bx	lr
 1985              		.cfi_endproc
 1986              	.LFE38:
 1987              		.size	inv_shift_rows, .-inv_shift_rows
 1988              		.section	.text.inv_mix_column,"ax",%progbits
 1989              		.align	2
 1990              		.code	16
 1991              		.thumb_func
 1992              		.type	inv_mix_column, %function
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 45


 1993              	inv_mix_column:
 1994              	.LFB39:
 341:aes.c         **** 
 342:aes.c         **** static uint32_t inv_mix_column(uint32_t x)
 343:aes.c         **** {
 1995              		.loc 3 343 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 32
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999 0000 10B5     		push	{r4, lr}
 2000              		.cfi_def_cfa_offset 8
 2001              		.cfi_offset 4, -8
 2002              		.cfi_offset 14, -4
 2003 0002 88B0     		sub	sp, sp, #32
 2004              		.cfi_def_cfa_offset 40
 2005 0004 0190     		str	r0, [sp, #4]
 344:aes.c         ****   uint32_t x2 = gf_poly_mul2(x),
 2006              		.loc 3 344 0
 2007 0006 019B     		ldr	r3, [sp, #4]
 2008 0008 1800     		movs	r0, r3
 2009 000a FFF7FEFF 		bl	gf_poly_mul2
 2010 000e 0300     		movs	r3, r0
 2011 0010 0793     		str	r3, [sp, #28]
 345:aes.c         ****            x4 = gf_poly_mul2(x2),
 2012              		.loc 3 345 0
 2013 0012 079B     		ldr	r3, [sp, #28]
 2014 0014 1800     		movs	r0, r3
 2015 0016 FFF7FEFF 		bl	gf_poly_mul2
 2016 001a 0300     		movs	r3, r0
 2017 001c 0693     		str	r3, [sp, #24]
 346:aes.c         ****            x9 = x ^ gf_poly_mul2(x4),
 2018              		.loc 3 346 0
 2019 001e 069B     		ldr	r3, [sp, #24]
 2020 0020 1800     		movs	r0, r3
 2021 0022 FFF7FEFF 		bl	gf_poly_mul2
 2022 0026 0200     		movs	r2, r0
 2023 0028 019B     		ldr	r3, [sp, #4]
 2024 002a 5340     		eors	r3, r2
 2025 002c 0593     		str	r3, [sp, #20]
 347:aes.c         ****            x11 = x2 ^ x9,
 2026              		.loc 3 347 0
 2027 002e 079A     		ldr	r2, [sp, #28]
 2028 0030 059B     		ldr	r3, [sp, #20]
 2029 0032 5340     		eors	r3, r2
 2030 0034 0493     		str	r3, [sp, #16]
 348:aes.c         ****            x13 = x4 ^ x9;
 2031              		.loc 3 348 0
 2032 0036 069A     		ldr	r2, [sp, #24]
 2033 0038 059B     		ldr	r3, [sp, #20]
 2034 003a 5340     		eors	r3, r2
 2035 003c 0393     		str	r3, [sp, #12]
 349:aes.c         **** 
 350:aes.c         ****   return x ^ x2 ^ x13 ^ rotr32(x11, 24) ^ rotr32(x13, 16) ^ rotr32(x9, 8);
 2036              		.loc 3 350 0
 2037 003e 019A     		ldr	r2, [sp, #4]
 2038 0040 079B     		ldr	r3, [sp, #28]
 2039 0042 5A40     		eors	r2, r3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 46


 2040 0044 039B     		ldr	r3, [sp, #12]
 2041 0046 5A40     		eors	r2, r3
 2042 0048 1400     		movs	r4, r2
 2043 004a 049B     		ldr	r3, [sp, #16]
 2044 004c 1821     		movs	r1, #24
 2045 004e 1800     		movs	r0, r3
 2046 0050 FFF7FEFF 		bl	rotr32
 2047 0054 0300     		movs	r3, r0
 2048 0056 5C40     		eors	r4, r3
 2049 0058 039B     		ldr	r3, [sp, #12]
 2050 005a 1021     		movs	r1, #16
 2051 005c 1800     		movs	r0, r3
 2052 005e FFF7FEFF 		bl	rotr32
 2053 0062 0300     		movs	r3, r0
 2054 0064 5C40     		eors	r4, r3
 2055 0066 059B     		ldr	r3, [sp, #20]
 2056 0068 0821     		movs	r1, #8
 2057 006a 1800     		movs	r0, r3
 2058 006c FFF7FEFF 		bl	rotr32
 2059 0070 0300     		movs	r3, r0
 2060 0072 6340     		eors	r3, r4
 351:aes.c         **** }
 2061              		.loc 3 351 0
 2062 0074 1800     		movs	r0, r3
 2063 0076 08B0     		add	sp, sp, #32
 2064              		@ sp needed
 2065 0078 10BD     		pop	{r4, pc}
 2066              		.cfi_endproc
 2067              	.LFE39:
 2068              		.size	inv_mix_column, .-inv_mix_column
 2069 007a C046     		.section	.text.inv_mix_columns,"ax",%progbits
 2070              		.align	2
 2071              		.code	16
 2072              		.thumb_func
 2073              		.type	inv_mix_columns, %function
 2074              	inv_mix_columns:
 2075              	.LFB40:
 352:aes.c         **** 
 353:aes.c         **** static void inv_mix_columns(uint32_t state[4])
 354:aes.c         **** {
 2076              		.loc 3 354 0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 8
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080 0000 10B5     		push	{r4, lr}
 2081              		.cfi_def_cfa_offset 8
 2082              		.cfi_offset 4, -8
 2083              		.cfi_offset 14, -4
 2084 0002 82B0     		sub	sp, sp, #8
 2085              		.cfi_def_cfa_offset 16
 2086 0004 0190     		str	r0, [sp, #4]
 355:aes.c         ****   state[0] = inv_mix_column(state[0]);
 2087              		.loc 3 355 0
 2088 0006 019B     		ldr	r3, [sp, #4]
 2089 0008 1B68     		ldr	r3, [r3]
 2090 000a 1800     		movs	r0, r3
 2091 000c FFF7FEFF 		bl	inv_mix_column
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 47


 2092 0010 0200     		movs	r2, r0
 2093 0012 019B     		ldr	r3, [sp, #4]
 2094 0014 1A60     		str	r2, [r3]
 356:aes.c         ****   state[1] = inv_mix_column(state[1]);
 2095              		.loc 3 356 0
 2096 0016 019B     		ldr	r3, [sp, #4]
 2097 0018 1C1D     		adds	r4, r3, #4
 2098 001a 019B     		ldr	r3, [sp, #4]
 2099 001c 0433     		adds	r3, r3, #4
 2100 001e 1B68     		ldr	r3, [r3]
 2101 0020 1800     		movs	r0, r3
 2102 0022 FFF7FEFF 		bl	inv_mix_column
 2103 0026 0300     		movs	r3, r0
 2104 0028 2360     		str	r3, [r4]
 357:aes.c         ****   state[2] = inv_mix_column(state[2]);
 2105              		.loc 3 357 0
 2106 002a 019B     		ldr	r3, [sp, #4]
 2107 002c 0833     		adds	r3, r3, #8
 2108 002e 1C00     		movs	r4, r3
 2109 0030 019B     		ldr	r3, [sp, #4]
 2110 0032 0833     		adds	r3, r3, #8
 2111 0034 1B68     		ldr	r3, [r3]
 2112 0036 1800     		movs	r0, r3
 2113 0038 FFF7FEFF 		bl	inv_mix_column
 2114 003c 0300     		movs	r3, r0
 2115 003e 2360     		str	r3, [r4]
 358:aes.c         ****   state[3] = inv_mix_column(state[3]);
 2116              		.loc 3 358 0
 2117 0040 019B     		ldr	r3, [sp, #4]
 2118 0042 0C33     		adds	r3, r3, #12
 2119 0044 1C00     		movs	r4, r3
 2120 0046 019B     		ldr	r3, [sp, #4]
 2121 0048 0C33     		adds	r3, r3, #12
 2122 004a 1B68     		ldr	r3, [r3]
 2123 004c 1800     		movs	r0, r3
 2124 004e FFF7FEFF 		bl	inv_mix_column
 2125 0052 0300     		movs	r3, r0
 2126 0054 2360     		str	r3, [r4]
 359:aes.c         **** }
 2127              		.loc 3 359 0
 2128 0056 C046     		nop
 2129 0058 02B0     		add	sp, sp, #8
 2130              		@ sp needed
 2131 005a 10BD     		pop	{r4, pc}
 2132              		.cfi_endproc
 2133              	.LFE40:
 2134              		.size	inv_mix_columns, .-inv_mix_columns
 2135              		.section	.text.cf_aes_decrypt,"ax",%progbits
 2136              		.align	2
 2137              		.global	cf_aes_decrypt
 2138              		.code	16
 2139              		.thumb_func
 2140              		.type	cf_aes_decrypt, %function
 2141              	cf_aes_decrypt:
 2142              	.LFB41:
 360:aes.c         **** 
 361:aes.c         **** void cf_aes_decrypt(const cf_aes_context *ctx,
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 48


 362:aes.c         ****                     const uint8_t in[AES_BLOCKSZ],
 363:aes.c         ****                     uint8_t out[AES_BLOCKSZ])
 364:aes.c         **** {
 2143              		.loc 3 364 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 40
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147 0000 00B5     		push	{lr}
 2148              		.cfi_def_cfa_offset 4
 2149              		.cfi_offset 14, -4
 2150 0002 8BB0     		sub	sp, sp, #44
 2151              		.cfi_def_cfa_offset 48
 2152 0004 0390     		str	r0, [sp, #12]
 2153 0006 0291     		str	r1, [sp, #8]
 2154 0008 0192     		str	r2, [sp, #4]
 365:aes.c         ****   assert(ctx->rounds == AES128_ROUNDS ||
 2155              		.loc 3 365 0
 2156 000a 039B     		ldr	r3, [sp, #12]
 2157 000c 1B68     		ldr	r3, [r3]
 2158 000e 0A2B     		cmp	r3, #10
 2159 0010 09D0     		beq	.L54
 2160              		.loc 3 365 0 is_stmt 0 discriminator 1
 2161 0012 039B     		ldr	r3, [sp, #12]
 2162 0014 1B68     		ldr	r3, [r3]
 2163 0016 0C2B     		cmp	r3, #12
 2164 0018 05D0     		beq	.L54
 2165              		.loc 3 365 0 discriminator 2
 2166 001a 039B     		ldr	r3, [sp, #12]
 2167 001c 1B68     		ldr	r3, [r3]
 2168 001e 0E2B     		cmp	r3, #14
 2169 0020 01D0     		beq	.L54
 2170              		.loc 3 365 0 discriminator 3
 2171 0022 FFF7FEFF 		bl	abort
 2172              	.L54:
 366:aes.c         ****          ctx->rounds == AES192_ROUNDS ||
 367:aes.c         ****          ctx->rounds == AES256_ROUNDS);
 368:aes.c         **** 
 369:aes.c         ****   uint32_t state[4] = {
 370:aes.c         ****     read32_be(in + 0),
 2173              		.loc 3 370 0 is_stmt 1
 2174 0026 029B     		ldr	r3, [sp, #8]
 2175 0028 1800     		movs	r0, r3
 2176 002a FFF7FEFF 		bl	read32_be
 2177 002e 0200     		movs	r2, r0
 369:aes.c         ****     read32_be(in + 0),
 2178              		.loc 3 369 0
 2179 0030 04AB     		add	r3, sp, #16
 2180 0032 1A60     		str	r2, [r3]
 371:aes.c         ****     read32_be(in + 4),
 2181              		.loc 3 371 0
 2182 0034 029B     		ldr	r3, [sp, #8]
 2183 0036 0433     		adds	r3, r3, #4
 2184 0038 1800     		movs	r0, r3
 2185 003a FFF7FEFF 		bl	read32_be
 2186 003e 0200     		movs	r2, r0
 369:aes.c         ****     read32_be(in + 0),
 2187              		.loc 3 369 0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 49


 2188 0040 04AB     		add	r3, sp, #16
 2189 0042 5A60     		str	r2, [r3, #4]
 372:aes.c         ****     read32_be(in + 8),
 2190              		.loc 3 372 0
 2191 0044 029B     		ldr	r3, [sp, #8]
 2192 0046 0833     		adds	r3, r3, #8
 2193 0048 1800     		movs	r0, r3
 2194 004a FFF7FEFF 		bl	read32_be
 2195 004e 0200     		movs	r2, r0
 369:aes.c         ****     read32_be(in + 0),
 2196              		.loc 3 369 0
 2197 0050 04AB     		add	r3, sp, #16
 2198 0052 9A60     		str	r2, [r3, #8]
 373:aes.c         ****     read32_be(in + 12)
 2199              		.loc 3 373 0
 2200 0054 029B     		ldr	r3, [sp, #8]
 2201 0056 0C33     		adds	r3, r3, #12
 2202 0058 1800     		movs	r0, r3
 2203 005a FFF7FEFF 		bl	read32_be
 2204 005e 0200     		movs	r2, r0
 369:aes.c         ****     read32_be(in + 0),
 2205              		.loc 3 369 0
 2206 0060 04AB     		add	r3, sp, #16
 2207 0062 DA60     		str	r2, [r3, #12]
 374:aes.c         ****   };
 375:aes.c         **** 
 376:aes.c         ****   const uint32_t *round_keys = &ctx->ks[ctx->rounds << 2];
 2208              		.loc 3 376 0
 2209 0064 039B     		ldr	r3, [sp, #12]
 2210 0066 1B68     		ldr	r3, [r3]
 2211 0068 9B00     		lsls	r3, r3, #2
 2212 006a 9B00     		lsls	r3, r3, #2
 2213 006c 039A     		ldr	r2, [sp, #12]
 2214 006e D318     		adds	r3, r2, r3
 2215 0070 0433     		adds	r3, r3, #4
 2216 0072 0993     		str	r3, [sp, #36]
 377:aes.c         ****   add_round_key(state, round_keys);
 2217              		.loc 3 377 0
 2218 0074 099A     		ldr	r2, [sp, #36]
 2219 0076 04AB     		add	r3, sp, #16
 2220 0078 1100     		movs	r1, r2
 2221 007a 1800     		movs	r0, r3
 2222 007c FFF7FEFF 		bl	add_round_key
 378:aes.c         ****   round_keys -= 4;
 2223              		.loc 3 378 0
 2224 0080 099B     		ldr	r3, [sp, #36]
 2225 0082 103B     		subs	r3, r3, #16
 2226 0084 0993     		str	r3, [sp, #36]
 2227              	.LBB4:
 379:aes.c         **** 
 380:aes.c         ****   for (uint32_t round = ctx->rounds - 1; round != 0; round--)
 2228              		.loc 3 380 0
 2229 0086 039B     		ldr	r3, [sp, #12]
 2230 0088 1B68     		ldr	r3, [r3]
 2231 008a 013B     		subs	r3, r3, #1
 2232 008c 0893     		str	r3, [sp, #32]
 2233 008e 17E0     		b	.L55
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 50


 2234              	.L56:
 381:aes.c         ****   {
 382:aes.c         ****     inv_shift_rows(state);
 2235              		.loc 3 382 0 discriminator 3
 2236 0090 04AB     		add	r3, sp, #16
 2237 0092 1800     		movs	r0, r3
 2238 0094 FFF7FEFF 		bl	inv_shift_rows
 383:aes.c         ****     inv_sub_block(state);
 2239              		.loc 3 383 0 discriminator 3
 2240 0098 04AB     		add	r3, sp, #16
 2241 009a 1800     		movs	r0, r3
 2242 009c FFF7FEFF 		bl	inv_sub_block
 384:aes.c         ****     add_round_key(state, round_keys);
 2243              		.loc 3 384 0 discriminator 3
 2244 00a0 099A     		ldr	r2, [sp, #36]
 2245 00a2 04AB     		add	r3, sp, #16
 2246 00a4 1100     		movs	r1, r2
 2247 00a6 1800     		movs	r0, r3
 2248 00a8 FFF7FEFF 		bl	add_round_key
 385:aes.c         ****     inv_mix_columns(state);
 2249              		.loc 3 385 0 discriminator 3
 2250 00ac 04AB     		add	r3, sp, #16
 2251 00ae 1800     		movs	r0, r3
 2252 00b0 FFF7FEFF 		bl	inv_mix_columns
 386:aes.c         ****     round_keys -= 4;
 2253              		.loc 3 386 0 discriminator 3
 2254 00b4 099B     		ldr	r3, [sp, #36]
 2255 00b6 103B     		subs	r3, r3, #16
 2256 00b8 0993     		str	r3, [sp, #36]
 380:aes.c         ****   {
 2257              		.loc 3 380 0 discriminator 3
 2258 00ba 089B     		ldr	r3, [sp, #32]
 2259 00bc 013B     		subs	r3, r3, #1
 2260 00be 0893     		str	r3, [sp, #32]
 2261              	.L55:
 380:aes.c         ****   {
 2262              		.loc 3 380 0 is_stmt 0 discriminator 1
 2263 00c0 089B     		ldr	r3, [sp, #32]
 2264 00c2 002B     		cmp	r3, #0
 2265 00c4 E4D1     		bne	.L56
 2266              	.LBE4:
 387:aes.c         ****   }
 388:aes.c         **** 
 389:aes.c         ****   inv_shift_rows(state);
 2267              		.loc 3 389 0 is_stmt 1
 2268 00c6 04AB     		add	r3, sp, #16
 2269 00c8 1800     		movs	r0, r3
 2270 00ca FFF7FEFF 		bl	inv_shift_rows
 390:aes.c         ****   inv_sub_block(state);
 2271              		.loc 3 390 0
 2272 00ce 04AB     		add	r3, sp, #16
 2273 00d0 1800     		movs	r0, r3
 2274 00d2 FFF7FEFF 		bl	inv_sub_block
 391:aes.c         ****   add_round_key(state, round_keys);
 2275              		.loc 3 391 0
 2276 00d6 099A     		ldr	r2, [sp, #36]
 2277 00d8 04AB     		add	r3, sp, #16
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 51


 2278 00da 1100     		movs	r1, r2
 2279 00dc 1800     		movs	r0, r3
 2280 00de FFF7FEFF 		bl	add_round_key
 392:aes.c         ****   
 393:aes.c         ****   write32_be(state[0], out + 0);
 2281              		.loc 3 393 0
 2282 00e2 04AB     		add	r3, sp, #16
 2283 00e4 1B68     		ldr	r3, [r3]
 2284 00e6 019A     		ldr	r2, [sp, #4]
 2285 00e8 1100     		movs	r1, r2
 2286 00ea 1800     		movs	r0, r3
 2287 00ec FFF7FEFF 		bl	write32_be
 394:aes.c         ****   write32_be(state[1], out + 4);
 2288              		.loc 3 394 0
 2289 00f0 04AB     		add	r3, sp, #16
 2290 00f2 5A68     		ldr	r2, [r3, #4]
 2291 00f4 019B     		ldr	r3, [sp, #4]
 2292 00f6 0433     		adds	r3, r3, #4
 2293 00f8 1900     		movs	r1, r3
 2294 00fa 1000     		movs	r0, r2
 2295 00fc FFF7FEFF 		bl	write32_be
 395:aes.c         ****   write32_be(state[2], out + 8);
 2296              		.loc 3 395 0
 2297 0100 04AB     		add	r3, sp, #16
 2298 0102 9A68     		ldr	r2, [r3, #8]
 2299 0104 019B     		ldr	r3, [sp, #4]
 2300 0106 0833     		adds	r3, r3, #8
 2301 0108 1900     		movs	r1, r3
 2302 010a 1000     		movs	r0, r2
 2303 010c FFF7FEFF 		bl	write32_be
 396:aes.c         ****   write32_be(state[3], out + 12);
 2304              		.loc 3 396 0
 2305 0110 04AB     		add	r3, sp, #16
 2306 0112 DA68     		ldr	r2, [r3, #12]
 2307 0114 019B     		ldr	r3, [sp, #4]
 2308 0116 0C33     		adds	r3, r3, #12
 2309 0118 1900     		movs	r1, r3
 2310 011a 1000     		movs	r0, r2
 2311 011c FFF7FEFF 		bl	write32_be
 397:aes.c         **** }
 2312              		.loc 3 397 0
 2313 0120 C046     		nop
 2314 0122 0BB0     		add	sp, sp, #44
 2315              		@ sp needed
 2316 0124 00BD     		pop	{pc}
 2317              		.cfi_endproc
 2318              	.LFE41:
 2319              		.size	cf_aes_decrypt, .-cf_aes_decrypt
 2320 0126 C046     		.section	.text.cf_aes_finish,"ax",%progbits
 2321              		.align	2
 2322              		.global	cf_aes_finish
 2323              		.code	16
 2324              		.thumb_func
 2325              		.type	cf_aes_finish, %function
 2326              	cf_aes_finish:
 2327              	.LFB42:
 398:aes.c         **** #else
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 52


 399:aes.c         **** void cf_aes_decrypt(const cf_aes_context *ctx,
 400:aes.c         ****                     const uint8_t in[AES_BLOCKSZ],
 401:aes.c         ****                     uint8_t out[AES_BLOCKSZ])
 402:aes.c         **** {
 403:aes.c         ****   abort();
 404:aes.c         **** }
 405:aes.c         **** #endif
 406:aes.c         **** 
 407:aes.c         **** void cf_aes_finish(cf_aes_context *ctx)
 408:aes.c         **** {
 2328              		.loc 3 408 0
 2329              		.cfi_startproc
 2330              		@ args = 0, pretend = 0, frame = 8
 2331              		@ frame_needed = 0, uses_anonymous_args = 0
 2332 0000 00B5     		push	{lr}
 2333              		.cfi_def_cfa_offset 4
 2334              		.cfi_offset 14, -4
 2335 0002 83B0     		sub	sp, sp, #12
 2336              		.cfi_def_cfa_offset 16
 2337 0004 0190     		str	r0, [sp, #4]
 409:aes.c         ****   mem_clean(ctx, sizeof *ctx);
 2338              		.loc 3 409 0
 2339 0006 019B     		ldr	r3, [sp, #4]
 2340 0008 F421     		movs	r1, #244
 2341 000a 1800     		movs	r0, r3
 2342 000c FFF7FEFF 		bl	mem_clean
 410:aes.c         **** }
 2343              		.loc 3 410 0
 2344 0010 C046     		nop
 2345 0012 03B0     		add	sp, sp, #12
 2346              		@ sp needed
 2347 0014 00BD     		pop	{pc}
 2348              		.cfi_endproc
 2349              	.LFE42:
 2350              		.size	cf_aes_finish, .-cf_aes_finish
 2351              		.global	cf_aes
 2352 0016 C046     		.section	.rodata
 2353              		.align	2
 2354              		.type	cf_aes, %object
 2355              		.size	cf_aes, 12
 2356              	cf_aes:
 2357 020c 10000000 		.word	16
 2358 0210 00000000 		.word	cf_aes_encrypt
 2359 0214 00000000 		.word	cf_aes_decrypt
 2360              		.text
 2361              	.Letext0:
 2362              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2363              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2364              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2365              		.file 7 "prp.h"
 2366              		.file 8 "aes.h"
 2367              		.section	.debug_info,"",%progbits
 2368              	.Ldebug_info0:
 2369 0000 A4070000 		.4byte	0x7a4
 2370 0004 0400     		.2byte	0x4
 2371 0006 00000000 		.4byte	.Ldebug_abbrev0
 2372 000a 04       		.byte	0x4
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 53


 2373 000b 01       		.uleb128 0x1
 2374 000c 96010000 		.4byte	.LASF55
 2375 0010 0C       		.byte	0xc
 2376 0011 AA020000 		.4byte	.LASF56
 2377 0015 EF020000 		.4byte	.LASF57
 2378 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2379 001d 00000000 		.4byte	0
 2380 0021 00000000 		.4byte	.Ldebug_line0
 2381 0025 02       		.uleb128 0x2
 2382 0026 04       		.byte	0x4
 2383 0027 05       		.byte	0x5
 2384 0028 696E7400 		.ascii	"int\000"
 2385 002c 03       		.uleb128 0x3
 2386 002d 00000000 		.4byte	.LASF4
 2387 0031 04       		.byte	0x4
 2388 0032 D8       		.byte	0xd8
 2389 0033 37000000 		.4byte	0x37
 2390 0037 04       		.uleb128 0x4
 2391 0038 04       		.byte	0x4
 2392 0039 07       		.byte	0x7
 2393 003a EE000000 		.4byte	.LASF0
 2394 003e 04       		.uleb128 0x4
 2395 003f 08       		.byte	0x8
 2396 0040 05       		.byte	0x5
 2397 0041 56000000 		.4byte	.LASF1
 2398 0045 04       		.uleb128 0x4
 2399 0046 08       		.byte	0x8
 2400 0047 04       		.byte	0x4
 2401 0048 6B010000 		.4byte	.LASF2
 2402 004c 04       		.uleb128 0x4
 2403 004d 01       		.byte	0x1
 2404 004e 06       		.byte	0x6
 2405 004f 64000000 		.4byte	.LASF3
 2406 0053 03       		.uleb128 0x3
 2407 0054 11000000 		.4byte	.LASF5
 2408 0058 05       		.byte	0x5
 2409 0059 1D       		.byte	0x1d
 2410 005a 5E000000 		.4byte	0x5e
 2411 005e 04       		.uleb128 0x4
 2412 005f 01       		.byte	0x1
 2413 0060 08       		.byte	0x8
 2414 0061 39020000 		.4byte	.LASF6
 2415 0065 04       		.uleb128 0x4
 2416 0066 02       		.byte	0x2
 2417 0067 05       		.byte	0x5
 2418 0068 65020000 		.4byte	.LASF7
 2419 006c 04       		.uleb128 0x4
 2420 006d 02       		.byte	0x2
 2421 006e 07       		.byte	0x7
 2422 006f 15010000 		.4byte	.LASF8
 2423 0073 04       		.uleb128 0x4
 2424 0074 04       		.byte	0x4
 2425 0075 05       		.byte	0x5
 2426 0076 B3000000 		.4byte	.LASF9
 2427 007a 03       		.uleb128 0x3
 2428 007b DE000000 		.4byte	.LASF10
 2429 007f 05       		.byte	0x5
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 54


 2430 0080 41       		.byte	0x41
 2431 0081 85000000 		.4byte	0x85
 2432 0085 04       		.uleb128 0x4
 2433 0086 04       		.byte	0x4
 2434 0087 07       		.byte	0x7
 2435 0088 FB000000 		.4byte	.LASF11
 2436 008c 04       		.uleb128 0x4
 2437 008d 08       		.byte	0x8
 2438 008e 07       		.byte	0x7
 2439 008f 3F000000 		.4byte	.LASF12
 2440 0093 04       		.uleb128 0x4
 2441 0094 04       		.byte	0x4
 2442 0095 07       		.byte	0x7
 2443 0096 52010000 		.4byte	.LASF13
 2444 009a 05       		.uleb128 0x5
 2445 009b 04       		.byte	0x4
 2446 009c 04       		.uleb128 0x4
 2447 009d 01       		.byte	0x1
 2448 009e 08       		.byte	0x8
 2449 009f B0020000 		.4byte	.LASF14
 2450 00a3 03       		.uleb128 0x3
 2451 00a4 D9020000 		.4byte	.LASF15
 2452 00a8 06       		.byte	0x6
 2453 00a9 18       		.byte	0x18
 2454 00aa 53000000 		.4byte	0x53
 2455 00ae 03       		.uleb128 0x3
 2456 00af 93020000 		.4byte	.LASF16
 2457 00b3 06       		.byte	0x6
 2458 00b4 30       		.byte	0x30
 2459 00b5 7A000000 		.4byte	0x7a
 2460 00b9 03       		.uleb128 0x3
 2461 00ba B5020000 		.4byte	.LASF17
 2462 00be 07       		.byte	0x7
 2463 00bf 26       		.byte	0x26
 2464 00c0 C4000000 		.4byte	0xc4
 2465 00c4 06       		.uleb128 0x6
 2466 00c5 04       		.byte	0x4
 2467 00c6 CA000000 		.4byte	0xca
 2468 00ca 07       		.uleb128 0x7
 2469 00cb DF000000 		.4byte	0xdf
 2470 00cf 08       		.uleb128 0x8
 2471 00d0 9A000000 		.4byte	0x9a
 2472 00d4 08       		.uleb128 0x8
 2473 00d5 DF000000 		.4byte	0xdf
 2474 00d9 08       		.uleb128 0x8
 2475 00da EA000000 		.4byte	0xea
 2476 00de 00       		.byte	0
 2477 00df 06       		.uleb128 0x6
 2478 00e0 04       		.byte	0x4
 2479 00e1 E5000000 		.4byte	0xe5
 2480 00e5 09       		.uleb128 0x9
 2481 00e6 A3000000 		.4byte	0xa3
 2482 00ea 06       		.uleb128 0x6
 2483 00eb 04       		.byte	0x4
 2484 00ec A3000000 		.4byte	0xa3
 2485 00f0 0A       		.uleb128 0xa
 2486 00f1 0C       		.byte	0xc
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 55


 2487 00f2 07       		.byte	0x7
 2488 00f3 34       		.byte	0x34
 2489 00f4 1D010000 		.4byte	0x11d
 2490 00f8 0B       		.uleb128 0xb
 2491 00f9 28010000 		.4byte	.LASF18
 2492 00fd 07       		.byte	0x7
 2493 00fe 36       		.byte	0x36
 2494 00ff 2C000000 		.4byte	0x2c
 2495 0103 00       		.byte	0
 2496 0104 0B       		.uleb128 0xb
 2497 0105 0D010000 		.4byte	.LASF19
 2498 0109 07       		.byte	0x7
 2499 010a 37       		.byte	0x37
 2500 010b B9000000 		.4byte	0xb9
 2501 010f 04       		.byte	0x4
 2502 0110 0B       		.uleb128 0xb
 2503 0111 C2020000 		.4byte	.LASF20
 2504 0115 07       		.byte	0x7
 2505 0116 38       		.byte	0x38
 2506 0117 B9000000 		.4byte	0xb9
 2507 011b 08       		.byte	0x8
 2508 011c 00       		.byte	0
 2509 011d 03       		.uleb128 0x3
 2510 011e 83000000 		.4byte	.LASF21
 2511 0122 07       		.byte	0x7
 2512 0123 39       		.byte	0x39
 2513 0124 F0000000 		.4byte	0xf0
 2514 0128 0A       		.uleb128 0xa
 2515 0129 F4       		.byte	0xf4
 2516 012a 08       		.byte	0x8
 2517 012b 5F       		.byte	0x5f
 2518 012c 48010000 		.4byte	0x148
 2519 0130 0B       		.uleb128 0xb
 2520 0131 D7000000 		.4byte	.LASF22
 2521 0135 08       		.byte	0x8
 2522 0136 61       		.byte	0x61
 2523 0137 AE000000 		.4byte	0xae
 2524 013b 00       		.byte	0
 2525 013c 0C       		.uleb128 0xc
 2526 013d 6B7300   		.ascii	"ks\000"
 2527 0140 08       		.byte	0x8
 2528 0141 62       		.byte	0x62
 2529 0142 48010000 		.4byte	0x148
 2530 0146 04       		.byte	0x4
 2531 0147 00       		.byte	0
 2532 0148 0D       		.uleb128 0xd
 2533 0149 AE000000 		.4byte	0xae
 2534 014d 58010000 		.4byte	0x158
 2535 0151 0E       		.uleb128 0xe
 2536 0152 93000000 		.4byte	0x93
 2537 0156 3B       		.byte	0x3b
 2538 0157 00       		.byte	0
 2539 0158 03       		.uleb128 0x3
 2540 0159 7B030000 		.4byte	.LASF23
 2541 015d 08       		.byte	0x8
 2542 015e 63       		.byte	0x63
 2543 015f 28010000 		.4byte	0x128
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 56


 2544 0163 0F       		.uleb128 0xf
 2545 0164 9E000000 		.4byte	.LASF27
 2546 0168 01       		.byte	0x1
 2547 0169 3D       		.byte	0x3d
 2548 016a 00000000 		.4byte	.LFB0
 2549 016e 24000000 		.4byte	.LFE0-.LFB0
 2550 0172 01       		.uleb128 0x1
 2551 0173 9C       		.byte	0x9c
 2552 0174 93010000 		.4byte	0x193
 2553 0178 10       		.uleb128 0x10
 2554 0179 7600     		.ascii	"v\000"
 2555 017b 01       		.byte	0x1
 2556 017c 3D       		.byte	0x3d
 2557 017d 93010000 		.4byte	0x193
 2558 0181 02       		.uleb128 0x2
 2559 0182 91       		.byte	0x91
 2560 0183 74       		.sleb128 -12
 2561 0184 10       		.uleb128 0x10
 2562 0185 6C656E00 		.ascii	"len\000"
 2563 0189 01       		.byte	0x1
 2564 018a 3D       		.byte	0x3d
 2565 018b 2C000000 		.4byte	0x2c
 2566 018f 02       		.uleb128 0x2
 2567 0190 91       		.byte	0x91
 2568 0191 70       		.sleb128 -16
 2569 0192 00       		.byte	0
 2570 0193 06       		.uleb128 0x6
 2571 0194 04       		.byte	0x4
 2572 0195 99010000 		.4byte	0x199
 2573 0199 11       		.uleb128 0x11
 2574 019a 12       		.uleb128 0x12
 2575 019b 1B000000 		.4byte	.LASF24
 2576 019f 02       		.byte	0x2
 2577 01a0 19       		.byte	0x19
 2578 01a1 AE000000 		.4byte	0xae
 2579 01a5 00000000 		.4byte	.LFB2
 2580 01a9 14000000 		.4byte	.LFE2-.LFB2
 2581 01ad 01       		.uleb128 0x1
 2582 01ae 9C       		.byte	0x9c
 2583 01af CC010000 		.4byte	0x1cc
 2584 01b3 10       		.uleb128 0x10
 2585 01b4 7800     		.ascii	"x\000"
 2586 01b6 02       		.byte	0x2
 2587 01b7 19       		.byte	0x19
 2588 01b8 AE000000 		.4byte	0xae
 2589 01bc 02       		.uleb128 0x2
 2590 01bd 91       		.byte	0x91
 2591 01be 7C       		.sleb128 -4
 2592 01bf 10       		.uleb128 0x10
 2593 01c0 6E00     		.ascii	"n\000"
 2594 01c2 02       		.byte	0x2
 2595 01c3 19       		.byte	0x19
 2596 01c4 37000000 		.4byte	0x37
 2597 01c8 02       		.uleb128 0x2
 2598 01c9 91       		.byte	0x91
 2599 01ca 78       		.sleb128 -8
 2600 01cb 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 57


 2601 01cc 12       		.uleb128 0x12
 2602 01cd 7C000000 		.4byte	.LASF25
 2603 01d1 02       		.byte	0x2
 2604 01d2 20       		.byte	0x20
 2605 01d3 AE000000 		.4byte	0xae
 2606 01d7 00000000 		.4byte	.LFB3
 2607 01db 18000000 		.4byte	.LFE3-.LFB3
 2608 01df 01       		.uleb128 0x1
 2609 01e0 9C       		.byte	0x9c
 2610 01e1 FE010000 		.4byte	0x1fe
 2611 01e5 10       		.uleb128 0x10
 2612 01e6 7800     		.ascii	"x\000"
 2613 01e8 02       		.byte	0x2
 2614 01e9 20       		.byte	0x20
 2615 01ea AE000000 		.4byte	0xae
 2616 01ee 02       		.uleb128 0x2
 2617 01ef 91       		.byte	0x91
 2618 01f0 7C       		.sleb128 -4
 2619 01f1 10       		.uleb128 0x10
 2620 01f2 6E00     		.ascii	"n\000"
 2621 01f4 02       		.byte	0x2
 2622 01f5 20       		.byte	0x20
 2623 01f6 37000000 		.4byte	0x37
 2624 01fa 02       		.uleb128 0x2
 2625 01fb 91       		.byte	0x91
 2626 01fc 78       		.sleb128 -8
 2627 01fd 00       		.byte	0
 2628 01fe 12       		.uleb128 0x12
 2629 01ff 07000000 		.4byte	.LASF26
 2630 0203 02       		.byte	0x2
 2631 0204 34       		.byte	0x34
 2632 0205 AE000000 		.4byte	0xae
 2633 0209 00000000 		.4byte	.LFB6
 2634 020d 2C000000 		.4byte	.LFE6-.LFB6
 2635 0211 01       		.uleb128 0x1
 2636 0212 9C       		.byte	0x9c
 2637 0213 26020000 		.4byte	0x226
 2638 0217 10       		.uleb128 0x10
 2639 0218 62756600 		.ascii	"buf\000"
 2640 021c 02       		.byte	0x2
 2641 021d 34       		.byte	0x34
 2642 021e DF000000 		.4byte	0xdf
 2643 0222 02       		.uleb128 0x2
 2644 0223 91       		.byte	0x91
 2645 0224 7C       		.sleb128 -4
 2646 0225 00       		.byte	0
 2647 0226 13       		.uleb128 0x13
 2648 0227 8B010000 		.4byte	.LASF28
 2649 022b 02       		.byte	0x2
 2650 022c 58       		.byte	0x58
 2651 022d 00000000 		.4byte	.LFB10
 2652 0231 3E000000 		.4byte	.LFE10-.LFB10
 2653 0235 01       		.uleb128 0x1
 2654 0236 9C       		.byte	0x9c
 2655 0237 56020000 		.4byte	0x256
 2656 023b 10       		.uleb128 0x10
 2657 023c 7600     		.ascii	"v\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 58


 2658 023e 02       		.byte	0x2
 2659 023f 58       		.byte	0x58
 2660 0240 AE000000 		.4byte	0xae
 2661 0244 02       		.uleb128 0x2
 2662 0245 91       		.byte	0x91
 2663 0246 7C       		.sleb128 -4
 2664 0247 10       		.uleb128 0x10
 2665 0248 62756600 		.ascii	"buf\000"
 2666 024c 02       		.byte	0x2
 2667 024d 58       		.byte	0x58
 2668 024e EA000000 		.4byte	0xea
 2669 0252 02       		.uleb128 0x2
 2670 0253 91       		.byte	0x91
 2671 0254 78       		.sleb128 -8
 2672 0255 00       		.byte	0
 2673 0256 12       		.uleb128 0x12
 2674 0257 D0020000 		.4byte	.LASF29
 2675 025b 03       		.byte	0x3
 2676 025c 59       		.byte	0x59
 2677 025d AE000000 		.4byte	0xae
 2678 0261 00000000 		.4byte	.LFB27
 2679 0265 96000000 		.4byte	.LFE27-.LFB27
 2680 0269 01       		.uleb128 0x1
 2681 026a 9C       		.byte	0x9c
 2682 026b BA020000 		.4byte	0x2ba
 2683 026f 10       		.uleb128 0x10
 2684 0270 7700     		.ascii	"w\000"
 2685 0272 03       		.byte	0x3
 2686 0273 59       		.byte	0x59
 2687 0274 AE000000 		.4byte	0xae
 2688 0278 02       		.uleb128 0x2
 2689 0279 91       		.byte	0x91
 2690 027a 74       		.sleb128 -12
 2691 027b 14       		.uleb128 0x14
 2692 027c D2000000 		.4byte	.LASF30
 2693 0280 03       		.byte	0x3
 2694 0281 59       		.byte	0x59
 2695 0282 DF000000 		.4byte	0xdf
 2696 0286 02       		.uleb128 0x2
 2697 0287 91       		.byte	0x91
 2698 0288 70       		.sleb128 -16
 2699 0289 15       		.uleb128 0x15
 2700 028a 6100     		.ascii	"a\000"
 2701 028c 03       		.byte	0x3
 2702 028d 5B       		.byte	0x5b
 2703 028e A3000000 		.4byte	0xa3
 2704 0292 02       		.uleb128 0x2
 2705 0293 91       		.byte	0x91
 2706 0294 7F       		.sleb128 -1
 2707 0295 15       		.uleb128 0x15
 2708 0296 6200     		.ascii	"b\000"
 2709 0298 03       		.byte	0x3
 2710 0299 5C       		.byte	0x5c
 2711 029a A3000000 		.4byte	0xa3
 2712 029e 02       		.uleb128 0x2
 2713 029f 91       		.byte	0x91
 2714 02a0 7E       		.sleb128 -2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 59


 2715 02a1 15       		.uleb128 0x15
 2716 02a2 6300     		.ascii	"c\000"
 2717 02a4 03       		.byte	0x3
 2718 02a5 5D       		.byte	0x5d
 2719 02a6 A3000000 		.4byte	0xa3
 2720 02aa 02       		.uleb128 0x2
 2721 02ab 91       		.byte	0x91
 2722 02ac 7D       		.sleb128 -3
 2723 02ad 15       		.uleb128 0x15
 2724 02ae 6400     		.ascii	"d\000"
 2725 02b0 03       		.byte	0x3
 2726 02b1 5E       		.byte	0x5e
 2727 02b2 A3000000 		.4byte	0xa3
 2728 02b6 02       		.uleb128 0x2
 2729 02b7 91       		.byte	0x91
 2730 02b8 7C       		.sleb128 -4
 2731 02b9 00       		.byte	0
 2732 02ba 0F       		.uleb128 0xf
 2733 02bb 8A000000 		.4byte	.LASF31
 2734 02bf 03       		.byte	0x3
 2735 02c0 6A       		.byte	0x6a
 2736 02c1 00000000 		.4byte	.LFB28
 2737 02c5 10010000 		.4byte	.LFE28-.LFB28
 2738 02c9 01       		.uleb128 0x1
 2739 02ca 9C       		.byte	0x9c
 2740 02cb 6C030000 		.4byte	0x36c
 2741 02cf 10       		.uleb128 0x10
 2742 02d0 63747800 		.ascii	"ctx\000"
 2743 02d4 03       		.byte	0x3
 2744 02d5 6A       		.byte	0x6a
 2745 02d6 6C030000 		.4byte	0x36c
 2746 02da 02       		.uleb128 0x2
 2747 02db 91       		.byte	0x91
 2748 02dc 54       		.sleb128 -44
 2749 02dd 10       		.uleb128 0x10
 2750 02de 6B657900 		.ascii	"key\000"
 2751 02e2 03       		.byte	0x3
 2752 02e3 6A       		.byte	0x6a
 2753 02e4 DF000000 		.4byte	0xdf
 2754 02e8 02       		.uleb128 0x2
 2755 02e9 91       		.byte	0x91
 2756 02ea 50       		.sleb128 -48
 2757 02eb 14       		.uleb128 0x14
 2758 02ec 86010000 		.4byte	.LASF32
 2759 02f0 03       		.byte	0x3
 2760 02f1 6A       		.byte	0x6a
 2761 02f2 2C000000 		.4byte	0x2c
 2762 02f6 02       		.uleb128 0x2
 2763 02f7 91       		.byte	0x91
 2764 02f8 4C       		.sleb128 -52
 2765 02f9 15       		.uleb128 0x15
 2766 02fa 6900     		.ascii	"i\000"
 2767 02fc 03       		.byte	0x3
 2768 02fd 6C       		.byte	0x6c
 2769 02fe 2C000000 		.4byte	0x2c
 2770 0302 02       		.uleb128 0x2
 2771 0303 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 60


 2772 0304 74       		.sleb128 -12
 2773 0305 15       		.uleb128 0x15
 2774 0306 6E6200   		.ascii	"nb\000"
 2775 0309 03       		.byte	0x3
 2776 030a 6D       		.byte	0x6d
 2777 030b 2C000000 		.4byte	0x2c
 2778 030f 02       		.uleb128 0x2
 2779 0310 91       		.byte	0x91
 2780 0311 64       		.sleb128 -28
 2781 0312 15       		.uleb128 0x15
 2782 0313 6E6B00   		.ascii	"nk\000"
 2783 0316 03       		.byte	0x3
 2784 0317 6E       		.byte	0x6e
 2785 0318 2C000000 		.4byte	0x2c
 2786 031c 02       		.uleb128 0x2
 2787 031d 91       		.byte	0x91
 2788 031e 60       		.sleb128 -32
 2789 031f 15       		.uleb128 0x15
 2790 0320 6E00     		.ascii	"n\000"
 2791 0322 03       		.byte	0x3
 2792 0323 6F       		.byte	0x6f
 2793 0324 2C000000 		.4byte	0x2c
 2794 0328 02       		.uleb128 0x2
 2795 0329 91       		.byte	0x91
 2796 032a 5C       		.sleb128 -36
 2797 032b 15       		.uleb128 0x15
 2798 032c 7700     		.ascii	"w\000"
 2799 032e 03       		.byte	0x3
 2800 032f 70       		.byte	0x70
 2801 0330 72030000 		.4byte	0x372
 2802 0334 02       		.uleb128 0x2
 2803 0335 91       		.byte	0x91
 2804 0336 58       		.sleb128 -40
 2805 0337 16       		.uleb128 0x16
 2806 0338 7F020000 		.4byte	.LASF33
 2807 033c 03       		.byte	0x3
 2808 033d 78       		.byte	0x78
 2809 033e AE000000 		.4byte	0xae
 2810 0342 02       		.uleb128 0x2
 2811 0343 91       		.byte	0x91
 2812 0344 70       		.sleb128 -16
 2813 0345 16       		.uleb128 0x16
 2814 0346 49010000 		.4byte	.LASF34
 2815 034a 03       		.byte	0x3
 2816 034b 79       		.byte	0x79
 2817 034c AE000000 		.4byte	0xae
 2818 0350 02       		.uleb128 0x2
 2819 0351 91       		.byte	0x91
 2820 0352 6C       		.sleb128 -20
 2821 0353 17       		.uleb128 0x17
 2822 0354 5E000000 		.4byte	.LBB2
 2823 0358 8A000000 		.4byte	.LBE2-.LBB2
 2824 035c 16       		.uleb128 0x16
 2825 035d E9000000 		.4byte	.LASF35
 2826 0361 03       		.byte	0x3
 2827 0362 7D       		.byte	0x7d
 2828 0363 AE000000 		.4byte	0xae
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 61


 2829 0367 02       		.uleb128 0x2
 2830 0368 91       		.byte	0x91
 2831 0369 68       		.sleb128 -24
 2832 036a 00       		.byte	0
 2833 036b 00       		.byte	0
 2834 036c 06       		.uleb128 0x6
 2835 036d 04       		.byte	0x4
 2836 036e 58010000 		.4byte	0x158
 2837 0372 06       		.uleb128 0x6
 2838 0373 04       		.byte	0x4
 2839 0374 AE000000 		.4byte	0xae
 2840 0378 18       		.uleb128 0x18
 2841 0379 70000000 		.4byte	.LASF43
 2842 037d 03       		.byte	0x3
 2843 037e 8E       		.byte	0x8e
 2844 037f 00000000 		.4byte	.LFB29
 2845 0383 6A000000 		.4byte	.LFE29-.LFB29
 2846 0387 01       		.uleb128 0x1
 2847 0388 9C       		.byte	0x9c
 2848 0389 B8030000 		.4byte	0x3b8
 2849 038d 10       		.uleb128 0x10
 2850 038e 63747800 		.ascii	"ctx\000"
 2851 0392 03       		.byte	0x3
 2852 0393 8E       		.byte	0x8e
 2853 0394 6C030000 		.4byte	0x36c
 2854 0398 02       		.uleb128 0x2
 2855 0399 91       		.byte	0x91
 2856 039a 74       		.sleb128 -12
 2857 039b 10       		.uleb128 0x10
 2858 039c 6B657900 		.ascii	"key\000"
 2859 03a0 03       		.byte	0x3
 2860 03a1 8E       		.byte	0x8e
 2861 03a2 DF000000 		.4byte	0xdf
 2862 03a6 02       		.uleb128 0x2
 2863 03a7 91       		.byte	0x91
 2864 03a8 70       		.sleb128 -16
 2865 03a9 14       		.uleb128 0x14
 2866 03aa 86010000 		.4byte	.LASF32
 2867 03ae 03       		.byte	0x3
 2868 03af 8E       		.byte	0x8e
 2869 03b0 2C000000 		.4byte	0x2c
 2870 03b4 02       		.uleb128 0x2
 2871 03b5 91       		.byte	0x91
 2872 03b6 6C       		.sleb128 -20
 2873 03b7 00       		.byte	0
 2874 03b8 13       		.uleb128 0x13
 2875 03b9 E1020000 		.4byte	.LASF36
 2876 03bd 03       		.byte	0x3
 2877 03be AE       		.byte	0xae
 2878 03bf 00000000 		.4byte	.LFB30
 2879 03c3 56000000 		.4byte	.LFE30-.LFB30
 2880 03c7 01       		.uleb128 0x1
 2881 03c8 9C       		.byte	0x9c
 2882 03c9 E9030000 		.4byte	0x3e9
 2883 03cd 14       		.uleb128 0x14
 2884 03ce AD000000 		.4byte	.LASF37
 2885 03d2 03       		.byte	0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 62


 2886 03d3 AE       		.byte	0xae
 2887 03d4 72030000 		.4byte	0x372
 2888 03d8 02       		.uleb128 0x2
 2889 03d9 91       		.byte	0x91
 2890 03da 7C       		.sleb128 -4
 2891 03db 10       		.uleb128 0x10
 2892 03dc 726B00   		.ascii	"rk\000"
 2893 03df 03       		.byte	0x3
 2894 03e0 AE       		.byte	0xae
 2895 03e1 E9030000 		.4byte	0x3e9
 2896 03e5 02       		.uleb128 0x2
 2897 03e6 91       		.byte	0x91
 2898 03e7 78       		.sleb128 -8
 2899 03e8 00       		.byte	0
 2900 03e9 06       		.uleb128 0x6
 2901 03ea 04       		.byte	0x4
 2902 03eb EF030000 		.4byte	0x3ef
 2903 03ef 09       		.uleb128 0x9
 2904 03f0 AE000000 		.4byte	0xae
 2905 03f4 0F       		.uleb128 0xf
 2906 03f5 6F020000 		.4byte	.LASF38
 2907 03f9 03       		.byte	0x3
 2908 03fa B6       		.byte	0xb6
 2909 03fb 00000000 		.4byte	.LFB31
 2910 03ff 70000000 		.4byte	.LFE31-.LFB31
 2911 0403 01       		.uleb128 0x1
 2912 0404 9C       		.byte	0x9c
 2913 0405 18040000 		.4byte	0x418
 2914 0409 14       		.uleb128 0x14
 2915 040a AD000000 		.4byte	.LASF37
 2916 040e 03       		.byte	0x3
 2917 040f B6       		.byte	0xb6
 2918 0410 72030000 		.4byte	0x372
 2919 0414 02       		.uleb128 0x2
 2920 0415 91       		.byte	0x91
 2921 0416 74       		.sleb128 -12
 2922 0417 00       		.byte	0
 2923 0418 13       		.uleb128 0x13
 2924 0419 BC000000 		.4byte	.LASF39
 2925 041d 03       		.byte	0x3
 2926 041e BE       		.byte	0xbe
 2927 041f 00000000 		.4byte	.LFB32
 2928 0423 F0000000 		.4byte	.LFE32-.LFB32
 2929 0427 01       		.uleb128 0x1
 2930 0428 9C       		.byte	0x9c
 2931 0429 6C040000 		.4byte	0x46c
 2932 042d 14       		.uleb128 0x14
 2933 042e AD000000 		.4byte	.LASF37
 2934 0432 03       		.byte	0x3
 2935 0433 BE       		.byte	0xbe
 2936 0434 72030000 		.4byte	0x372
 2937 0438 02       		.uleb128 0x2
 2938 0439 91       		.byte	0x91
 2939 043a 6C       		.sleb128 -20
 2940 043b 15       		.uleb128 0x15
 2941 043c 7500     		.ascii	"u\000"
 2942 043e 03       		.byte	0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 63


 2943 043f C0       		.byte	0xc0
 2944 0440 AE000000 		.4byte	0xae
 2945 0444 02       		.uleb128 0x2
 2946 0445 91       		.byte	0x91
 2947 0446 7C       		.sleb128 -4
 2948 0447 15       		.uleb128 0x15
 2949 0448 7600     		.ascii	"v\000"
 2950 044a 03       		.byte	0x3
 2951 044b C0       		.byte	0xc0
 2952 044c AE000000 		.4byte	0xae
 2953 0450 02       		.uleb128 0x2
 2954 0451 91       		.byte	0x91
 2955 0452 78       		.sleb128 -8
 2956 0453 15       		.uleb128 0x15
 2957 0454 7800     		.ascii	"x\000"
 2958 0456 03       		.byte	0x3
 2959 0457 C0       		.byte	0xc0
 2960 0458 AE000000 		.4byte	0xae
 2961 045c 02       		.uleb128 0x2
 2962 045d 91       		.byte	0x91
 2963 045e 74       		.sleb128 -12
 2964 045f 15       		.uleb128 0x15
 2965 0460 7900     		.ascii	"y\000"
 2966 0462 03       		.byte	0x3
 2967 0463 C0       		.byte	0xc0
 2968 0464 AE000000 		.4byte	0xae
 2969 0468 02       		.uleb128 0x2
 2970 0469 91       		.byte	0x91
 2971 046a 70       		.sleb128 -16
 2972 046b 00       		.byte	0
 2973 046c 12       		.uleb128 0x12
 2974 046d 30010000 		.4byte	.LASF40
 2975 0471 03       		.byte	0x3
 2976 0472 DC       		.byte	0xdc
 2977 0473 AE000000 		.4byte	0xae
 2978 0477 00000000 		.4byte	.LFB33
 2979 047b 30000000 		.4byte	.LFE33-.LFB33
 2980 047f 01       		.uleb128 0x1
 2981 0480 9C       		.byte	0x9c
 2982 0481 92040000 		.4byte	0x492
 2983 0485 10       		.uleb128 0x10
 2984 0486 7800     		.ascii	"x\000"
 2985 0488 03       		.byte	0x3
 2986 0489 DC       		.byte	0xdc
 2987 048a AE000000 		.4byte	0xae
 2988 048e 02       		.uleb128 0x2
 2989 048f 91       		.byte	0x91
 2990 0490 7C       		.sleb128 -4
 2991 0491 00       		.byte	0
 2992 0492 19       		.uleb128 0x19
 2993 0493 C7000000 		.4byte	.LASF41
 2994 0497 03       		.byte	0x3
 2995 0498 E3       		.byte	0xe3
 2996 0499 AE000000 		.4byte	0xae
 2997 049d 00000000 		.4byte	.LFB34
 2998 04a1 4A000000 		.4byte	.LFE34-.LFB34
 2999 04a5 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 64


 3000 04a6 9C       		.byte	0x9c
 3001 04a7 C5040000 		.4byte	0x4c5
 3002 04ab 10       		.uleb128 0x10
 3003 04ac 7800     		.ascii	"x\000"
 3004 04ae 03       		.byte	0x3
 3005 04af E3       		.byte	0xe3
 3006 04b0 AE000000 		.4byte	0xae
 3007 04b4 02       		.uleb128 0x2
 3008 04b5 91       		.byte	0x91
 3009 04b6 6C       		.sleb128 -20
 3010 04b7 15       		.uleb128 0x15
 3011 04b8 783200   		.ascii	"x2\000"
 3012 04bb 03       		.byte	0x3
 3013 04bc E5       		.byte	0xe5
 3014 04bd AE000000 		.4byte	0xae
 3015 04c1 02       		.uleb128 0x2
 3016 04c2 91       		.byte	0x91
 3017 04c3 74       		.sleb128 -12
 3018 04c4 00       		.byte	0
 3019 04c5 0F       		.uleb128 0xf
 3020 04c6 3D010000 		.4byte	.LASF42
 3021 04ca 03       		.byte	0x3
 3022 04cb E9       		.byte	0xe9
 3023 04cc 00000000 		.4byte	.LFB35
 3024 04d0 5C000000 		.4byte	.LFE35-.LFB35
 3025 04d4 01       		.uleb128 0x1
 3026 04d5 9C       		.byte	0x9c
 3027 04d6 E9040000 		.4byte	0x4e9
 3028 04da 14       		.uleb128 0x14
 3029 04db AD000000 		.4byte	.LASF37
 3030 04df 03       		.byte	0x3
 3031 04e0 E9       		.byte	0xe9
 3032 04e1 72030000 		.4byte	0x372
 3033 04e5 02       		.uleb128 0x2
 3034 04e6 91       		.byte	0x91
 3035 04e7 74       		.sleb128 -12
 3036 04e8 00       		.byte	0
 3037 04e9 18       		.uleb128 0x18
 3038 04ea 77010000 		.4byte	.LASF44
 3039 04ee 03       		.byte	0x3
 3040 04ef F1       		.byte	0xf1
 3041 04f0 00000000 		.4byte	.LFB36
 3042 04f4 1C010000 		.4byte	.LFE36-.LFB36
 3043 04f8 01       		.uleb128 0x1
 3044 04f9 9C       		.byte	0x9c
 3045 04fa 5E050000 		.4byte	0x55e
 3046 04fe 10       		.uleb128 0x10
 3047 04ff 63747800 		.ascii	"ctx\000"
 3048 0503 03       		.byte	0x3
 3049 0504 F1       		.byte	0xf1
 3050 0505 5E050000 		.4byte	0x55e
 3051 0509 02       		.uleb128 0x2
 3052 050a 91       		.byte	0x91
 3053 050b 5C       		.sleb128 -36
 3054 050c 10       		.uleb128 0x10
 3055 050d 696E00   		.ascii	"in\000"
 3056 0510 03       		.byte	0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 65


 3057 0511 F2       		.byte	0xf2
 3058 0512 DF000000 		.4byte	0xdf
 3059 0516 02       		.uleb128 0x2
 3060 0517 91       		.byte	0x91
 3061 0518 58       		.sleb128 -40
 3062 0519 10       		.uleb128 0x10
 3063 051a 6F757400 		.ascii	"out\000"
 3064 051e 03       		.byte	0x3
 3065 051f F3       		.byte	0xf3
 3066 0520 EA000000 		.4byte	0xea
 3067 0524 02       		.uleb128 0x2
 3068 0525 91       		.byte	0x91
 3069 0526 54       		.sleb128 -44
 3070 0527 16       		.uleb128 0x16
 3071 0528 AD000000 		.4byte	.LASF37
 3072 052c 03       		.byte	0x3
 3073 052d F9       		.byte	0xf9
 3074 052e 69050000 		.4byte	0x569
 3075 0532 02       		.uleb128 0x2
 3076 0533 91       		.byte	0x91
 3077 0534 60       		.sleb128 -32
 3078 0535 1A       		.uleb128 0x1a
 3079 0536 88020000 		.4byte	.LASF45
 3080 053a 03       		.byte	0x3
 3081 053b 0001     		.2byte	0x100
 3082 053d E9030000 		.4byte	0x3e9
 3083 0541 02       		.uleb128 0x2
 3084 0542 91       		.byte	0x91
 3085 0543 74       		.sleb128 -12
 3086 0544 17       		.uleb128 0x17
 3087 0545 7C000000 		.4byte	.LBB3
 3088 0549 40000000 		.4byte	.LBE3-.LBB3
 3089 054d 1A       		.uleb128 0x1a
 3090 054e 79020000 		.4byte	.LASF46
 3091 0552 03       		.byte	0x3
 3092 0553 0401     		.2byte	0x104
 3093 0555 AE000000 		.4byte	0xae
 3094 0559 02       		.uleb128 0x2
 3095 055a 91       		.byte	0x91
 3096 055b 70       		.sleb128 -16
 3097 055c 00       		.byte	0
 3098 055d 00       		.byte	0
 3099 055e 06       		.uleb128 0x6
 3100 055f 04       		.byte	0x4
 3101 0560 64050000 		.4byte	0x564
 3102 0564 09       		.uleb128 0x9
 3103 0565 58010000 		.4byte	0x158
 3104 0569 0D       		.uleb128 0xd
 3105 056a AE000000 		.4byte	0xae
 3106 056e 79050000 		.4byte	0x579
 3107 0572 0E       		.uleb128 0xe
 3108 0573 93000000 		.4byte	0x93
 3109 0577 03       		.byte	0x3
 3110 0578 00       		.byte	0
 3111 0579 1B       		.uleb128 0x1b
 3112 057a 22000000 		.4byte	.LASF47
 3113 057e 03       		.byte	0x3
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 66


 3114 057f 3001     		.2byte	0x130
 3115 0581 00000000 		.4byte	.LFB37
 3116 0585 70000000 		.4byte	.LFE37-.LFB37
 3117 0589 01       		.uleb128 0x1
 3118 058a 9C       		.byte	0x9c
 3119 058b 9F050000 		.4byte	0x59f
 3120 058f 1C       		.uleb128 0x1c
 3121 0590 AD000000 		.4byte	.LASF37
 3122 0594 03       		.byte	0x3
 3123 0595 3001     		.2byte	0x130
 3124 0597 72030000 		.4byte	0x372
 3125 059b 02       		.uleb128 0x2
 3126 059c 91       		.byte	0x91
 3127 059d 74       		.sleb128 -12
 3128 059e 00       		.byte	0
 3129 059f 1D       		.uleb128 0x1d
 3130 05a0 47020000 		.4byte	.LASF48
 3131 05a4 03       		.byte	0x3
 3132 05a5 3801     		.2byte	0x138
 3133 05a7 00000000 		.4byte	.LFB38
 3134 05ab F0000000 		.4byte	.LFE38-.LFB38
 3135 05af 01       		.uleb128 0x1
 3136 05b0 9C       		.byte	0x9c
 3137 05b1 F9050000 		.4byte	0x5f9
 3138 05b5 1C       		.uleb128 0x1c
 3139 05b6 AD000000 		.4byte	.LASF37
 3140 05ba 03       		.byte	0x3
 3141 05bb 3801     		.2byte	0x138
 3142 05bd 72030000 		.4byte	0x372
 3143 05c1 02       		.uleb128 0x2
 3144 05c2 91       		.byte	0x91
 3145 05c3 6C       		.sleb128 -20
 3146 05c4 1E       		.uleb128 0x1e
 3147 05c5 7500     		.ascii	"u\000"
 3148 05c7 03       		.byte	0x3
 3149 05c8 3A01     		.2byte	0x13a
 3150 05ca AE000000 		.4byte	0xae
 3151 05ce 02       		.uleb128 0x2
 3152 05cf 91       		.byte	0x91
 3153 05d0 7C       		.sleb128 -4
 3154 05d1 1E       		.uleb128 0x1e
 3155 05d2 7600     		.ascii	"v\000"
 3156 05d4 03       		.byte	0x3
 3157 05d5 3A01     		.2byte	0x13a
 3158 05d7 AE000000 		.4byte	0xae
 3159 05db 02       		.uleb128 0x2
 3160 05dc 91       		.byte	0x91
 3161 05dd 78       		.sleb128 -8
 3162 05de 1E       		.uleb128 0x1e
 3163 05df 7800     		.ascii	"x\000"
 3164 05e1 03       		.byte	0x3
 3165 05e2 3A01     		.2byte	0x13a
 3166 05e4 AE000000 		.4byte	0xae
 3167 05e8 02       		.uleb128 0x2
 3168 05e9 91       		.byte	0x91
 3169 05ea 74       		.sleb128 -12
 3170 05eb 1E       		.uleb128 0x1e
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 67


 3171 05ec 7900     		.ascii	"y\000"
 3172 05ee 03       		.byte	0x3
 3173 05ef 3A01     		.2byte	0x13a
 3174 05f1 AE000000 		.4byte	0xae
 3175 05f5 02       		.uleb128 0x2
 3176 05f6 91       		.byte	0x91
 3177 05f7 70       		.sleb128 -16
 3178 05f8 00       		.byte	0
 3179 05f9 1F       		.uleb128 0x1f
 3180 05fa 56020000 		.4byte	.LASF49
 3181 05fe 03       		.byte	0x3
 3182 05ff 5601     		.2byte	0x156
 3183 0601 AE000000 		.4byte	0xae
 3184 0605 00000000 		.4byte	.LFB39
 3185 0609 7A000000 		.4byte	.LFE39-.LFB39
 3186 060d 01       		.uleb128 0x1
 3187 060e 9C       		.byte	0x9c
 3188 060f 69060000 		.4byte	0x669
 3189 0613 20       		.uleb128 0x20
 3190 0614 7800     		.ascii	"x\000"
 3191 0616 03       		.byte	0x3
 3192 0617 5601     		.2byte	0x156
 3193 0619 AE000000 		.4byte	0xae
 3194 061d 02       		.uleb128 0x2
 3195 061e 91       		.byte	0x91
 3196 061f 5C       		.sleb128 -36
 3197 0620 1E       		.uleb128 0x1e
 3198 0621 783200   		.ascii	"x2\000"
 3199 0624 03       		.byte	0x3
 3200 0625 5801     		.2byte	0x158
 3201 0627 AE000000 		.4byte	0xae
 3202 062b 02       		.uleb128 0x2
 3203 062c 91       		.byte	0x91
 3204 062d 74       		.sleb128 -12
 3205 062e 1E       		.uleb128 0x1e
 3206 062f 783400   		.ascii	"x4\000"
 3207 0632 03       		.byte	0x3
 3208 0633 5901     		.2byte	0x159
 3209 0635 AE000000 		.4byte	0xae
 3210 0639 02       		.uleb128 0x2
 3211 063a 91       		.byte	0x91
 3212 063b 70       		.sleb128 -16
 3213 063c 1E       		.uleb128 0x1e
 3214 063d 783900   		.ascii	"x9\000"
 3215 0640 03       		.byte	0x3
 3216 0641 5A01     		.2byte	0x15a
 3217 0643 AE000000 		.4byte	0xae
 3218 0647 02       		.uleb128 0x2
 3219 0648 91       		.byte	0x91
 3220 0649 6C       		.sleb128 -20
 3221 064a 1E       		.uleb128 0x1e
 3222 064b 78313100 		.ascii	"x11\000"
 3223 064f 03       		.byte	0x3
 3224 0650 5B01     		.2byte	0x15b
 3225 0652 AE000000 		.4byte	0xae
 3226 0656 02       		.uleb128 0x2
 3227 0657 91       		.byte	0x91
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 68


 3228 0658 68       		.sleb128 -24
 3229 0659 1E       		.uleb128 0x1e
 3230 065a 78313300 		.ascii	"x13\000"
 3231 065e 03       		.byte	0x3
 3232 065f 5C01     		.2byte	0x15c
 3233 0661 AE000000 		.4byte	0xae
 3234 0665 02       		.uleb128 0x2
 3235 0666 91       		.byte	0x91
 3236 0667 64       		.sleb128 -28
 3237 0668 00       		.byte	0
 3238 0669 1B       		.uleb128 0x1b
 3239 066a 5B010000 		.4byte	.LASF50
 3240 066e 03       		.byte	0x3
 3241 066f 6101     		.2byte	0x161
 3242 0671 00000000 		.4byte	.LFB40
 3243 0675 5C000000 		.4byte	.LFE40-.LFB40
 3244 0679 01       		.uleb128 0x1
 3245 067a 9C       		.byte	0x9c
 3246 067b 8F060000 		.4byte	0x68f
 3247 067f 1C       		.uleb128 0x1c
 3248 0680 AD000000 		.4byte	.LASF37
 3249 0684 03       		.byte	0x3
 3250 0685 6101     		.2byte	0x161
 3251 0687 72030000 		.4byte	0x372
 3252 068b 02       		.uleb128 0x2
 3253 068c 91       		.byte	0x91
 3254 068d 74       		.sleb128 -12
 3255 068e 00       		.byte	0
 3256 068f 21       		.uleb128 0x21
 3257 0690 30000000 		.4byte	.LASF51
 3258 0694 03       		.byte	0x3
 3259 0695 6901     		.2byte	0x169
 3260 0697 00000000 		.4byte	.LFB41
 3261 069b 26010000 		.4byte	.LFE41-.LFB41
 3262 069f 01       		.uleb128 0x1
 3263 06a0 9C       		.byte	0x9c
 3264 06a1 09070000 		.4byte	0x709
 3265 06a5 20       		.uleb128 0x20
 3266 06a6 63747800 		.ascii	"ctx\000"
 3267 06aa 03       		.byte	0x3
 3268 06ab 6901     		.2byte	0x169
 3269 06ad 5E050000 		.4byte	0x55e
 3270 06b1 02       		.uleb128 0x2
 3271 06b2 91       		.byte	0x91
 3272 06b3 5C       		.sleb128 -36
 3273 06b4 20       		.uleb128 0x20
 3274 06b5 696E00   		.ascii	"in\000"
 3275 06b8 03       		.byte	0x3
 3276 06b9 6A01     		.2byte	0x16a
 3277 06bb DF000000 		.4byte	0xdf
 3278 06bf 02       		.uleb128 0x2
 3279 06c0 91       		.byte	0x91
 3280 06c1 58       		.sleb128 -40
 3281 06c2 20       		.uleb128 0x20
 3282 06c3 6F757400 		.ascii	"out\000"
 3283 06c7 03       		.byte	0x3
 3284 06c8 6B01     		.2byte	0x16b
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 69


 3285 06ca EA000000 		.4byte	0xea
 3286 06ce 02       		.uleb128 0x2
 3287 06cf 91       		.byte	0x91
 3288 06d0 54       		.sleb128 -44
 3289 06d1 1A       		.uleb128 0x1a
 3290 06d2 AD000000 		.4byte	.LASF37
 3291 06d6 03       		.byte	0x3
 3292 06d7 7101     		.2byte	0x171
 3293 06d9 69050000 		.4byte	0x569
 3294 06dd 02       		.uleb128 0x2
 3295 06de 91       		.byte	0x91
 3296 06df 60       		.sleb128 -32
 3297 06e0 1A       		.uleb128 0x1a
 3298 06e1 88020000 		.4byte	.LASF45
 3299 06e5 03       		.byte	0x3
 3300 06e6 7801     		.2byte	0x178
 3301 06e8 E9030000 		.4byte	0x3e9
 3302 06ec 02       		.uleb128 0x2
 3303 06ed 91       		.byte	0x91
 3304 06ee 74       		.sleb128 -12
 3305 06ef 17       		.uleb128 0x17
 3306 06f0 86000000 		.4byte	.LBB4
 3307 06f4 40000000 		.4byte	.LBE4-.LBB4
 3308 06f8 1A       		.uleb128 0x1a
 3309 06f9 79020000 		.4byte	.LASF46
 3310 06fd 03       		.byte	0x3
 3311 06fe 7C01     		.2byte	0x17c
 3312 0700 AE000000 		.4byte	0xae
 3313 0704 02       		.uleb128 0x2
 3314 0705 91       		.byte	0x91
 3315 0706 70       		.sleb128 -16
 3316 0707 00       		.byte	0
 3317 0708 00       		.byte	0
 3318 0709 21       		.uleb128 0x21
 3319 070a 9C020000 		.4byte	.LASF52
 3320 070e 03       		.byte	0x3
 3321 070f 9701     		.2byte	0x197
 3322 0711 00000000 		.4byte	.LFB42
 3323 0715 16000000 		.4byte	.LFE42-.LFB42
 3324 0719 01       		.uleb128 0x1
 3325 071a 9C       		.byte	0x9c
 3326 071b 2F070000 		.4byte	0x72f
 3327 071f 20       		.uleb128 0x20
 3328 0720 63747800 		.ascii	"ctx\000"
 3329 0724 03       		.byte	0x3
 3330 0725 9701     		.2byte	0x197
 3331 0727 6C030000 		.4byte	0x36c
 3332 072b 02       		.uleb128 0x2
 3333 072c 91       		.byte	0x91
 3334 072d 74       		.sleb128 -12
 3335 072e 00       		.byte	0
 3336 072f 0D       		.uleb128 0xd
 3337 0730 E5000000 		.4byte	0xe5
 3338 0734 3F070000 		.4byte	0x73f
 3339 0738 0E       		.uleb128 0xe
 3340 0739 93000000 		.4byte	0x93
 3341 073d FF       		.byte	0xff
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 70


 3342 073e 00       		.byte	0
 3343 073f 15       		.uleb128 0x15
 3344 0740 5300     		.ascii	"S\000"
 3345 0742 03       		.byte	0x3
 3346 0743 18       		.byte	0x18
 3347 0744 4E070000 		.4byte	0x74e
 3348 0748 05       		.uleb128 0x5
 3349 0749 03       		.byte	0x3
 3350 074a 00000000 		.4byte	S
 3351 074e 09       		.uleb128 0x9
 3352 074f 2F070000 		.4byte	0x72f
 3353 0753 0D       		.uleb128 0xd
 3354 0754 E5000000 		.4byte	0xe5
 3355 0758 63070000 		.4byte	0x763
 3356 075c 0E       		.uleb128 0xe
 3357 075d 93000000 		.4byte	0x93
 3358 0761 0A       		.byte	0xa
 3359 0762 00       		.byte	0
 3360 0763 16       		.uleb128 0x16
 3361 0764 A8000000 		.4byte	.LASF53
 3362 0768 03       		.byte	0x3
 3363 0769 30       		.byte	0x30
 3364 076a 74070000 		.4byte	0x774
 3365 076e 05       		.uleb128 0x5
 3366 076f 03       		.byte	0x3
 3367 0770 00010000 		.4byte	Rcon
 3368 0774 09       		.uleb128 0x9
 3369 0775 53070000 		.4byte	0x753
 3370 0779 1A       		.uleb128 0x1a
 3371 077a CA020000 		.4byte	.LASF54
 3372 077e 03       		.byte	0x3
 3373 077f 1801     		.2byte	0x118
 3374 0781 8B070000 		.4byte	0x78b
 3375 0785 05       		.uleb128 0x5
 3376 0786 03       		.byte	0x3
 3377 0787 0C010000 		.4byte	S_inv
 3378 078b 09       		.uleb128 0x9
 3379 078c 2F070000 		.4byte	0x72f
 3380 0790 22       		.uleb128 0x22
 3381 0791 97000000 		.4byte	.LASF58
 3382 0795 03       		.byte	0x3
 3383 0796 9C01     		.2byte	0x19c
 3384 0798 A2070000 		.4byte	0x7a2
 3385 079c 05       		.uleb128 0x5
 3386 079d 03       		.byte	0x3
 3387 079e 00000000 		.4byte	cf_aes
 3388 07a2 09       		.uleb128 0x9
 3389 07a3 1D010000 		.4byte	0x11d
 3390 07a7 00       		.byte	0
 3391              		.section	.debug_abbrev,"",%progbits
 3392              	.Ldebug_abbrev0:
 3393 0000 01       		.uleb128 0x1
 3394 0001 11       		.uleb128 0x11
 3395 0002 01       		.byte	0x1
 3396 0003 25       		.uleb128 0x25
 3397 0004 0E       		.uleb128 0xe
 3398 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 71


 3399 0006 0B       		.uleb128 0xb
 3400 0007 03       		.uleb128 0x3
 3401 0008 0E       		.uleb128 0xe
 3402 0009 1B       		.uleb128 0x1b
 3403 000a 0E       		.uleb128 0xe
 3404 000b 55       		.uleb128 0x55
 3405 000c 17       		.uleb128 0x17
 3406 000d 11       		.uleb128 0x11
 3407 000e 01       		.uleb128 0x1
 3408 000f 10       		.uleb128 0x10
 3409 0010 17       		.uleb128 0x17
 3410 0011 00       		.byte	0
 3411 0012 00       		.byte	0
 3412 0013 02       		.uleb128 0x2
 3413 0014 24       		.uleb128 0x24
 3414 0015 00       		.byte	0
 3415 0016 0B       		.uleb128 0xb
 3416 0017 0B       		.uleb128 0xb
 3417 0018 3E       		.uleb128 0x3e
 3418 0019 0B       		.uleb128 0xb
 3419 001a 03       		.uleb128 0x3
 3420 001b 08       		.uleb128 0x8
 3421 001c 00       		.byte	0
 3422 001d 00       		.byte	0
 3423 001e 03       		.uleb128 0x3
 3424 001f 16       		.uleb128 0x16
 3425 0020 00       		.byte	0
 3426 0021 03       		.uleb128 0x3
 3427 0022 0E       		.uleb128 0xe
 3428 0023 3A       		.uleb128 0x3a
 3429 0024 0B       		.uleb128 0xb
 3430 0025 3B       		.uleb128 0x3b
 3431 0026 0B       		.uleb128 0xb
 3432 0027 49       		.uleb128 0x49
 3433 0028 13       		.uleb128 0x13
 3434 0029 00       		.byte	0
 3435 002a 00       		.byte	0
 3436 002b 04       		.uleb128 0x4
 3437 002c 24       		.uleb128 0x24
 3438 002d 00       		.byte	0
 3439 002e 0B       		.uleb128 0xb
 3440 002f 0B       		.uleb128 0xb
 3441 0030 3E       		.uleb128 0x3e
 3442 0031 0B       		.uleb128 0xb
 3443 0032 03       		.uleb128 0x3
 3444 0033 0E       		.uleb128 0xe
 3445 0034 00       		.byte	0
 3446 0035 00       		.byte	0
 3447 0036 05       		.uleb128 0x5
 3448 0037 0F       		.uleb128 0xf
 3449 0038 00       		.byte	0
 3450 0039 0B       		.uleb128 0xb
 3451 003a 0B       		.uleb128 0xb
 3452 003b 00       		.byte	0
 3453 003c 00       		.byte	0
 3454 003d 06       		.uleb128 0x6
 3455 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 72


 3456 003f 00       		.byte	0
 3457 0040 0B       		.uleb128 0xb
 3458 0041 0B       		.uleb128 0xb
 3459 0042 49       		.uleb128 0x49
 3460 0043 13       		.uleb128 0x13
 3461 0044 00       		.byte	0
 3462 0045 00       		.byte	0
 3463 0046 07       		.uleb128 0x7
 3464 0047 15       		.uleb128 0x15
 3465 0048 01       		.byte	0x1
 3466 0049 27       		.uleb128 0x27
 3467 004a 19       		.uleb128 0x19
 3468 004b 01       		.uleb128 0x1
 3469 004c 13       		.uleb128 0x13
 3470 004d 00       		.byte	0
 3471 004e 00       		.byte	0
 3472 004f 08       		.uleb128 0x8
 3473 0050 05       		.uleb128 0x5
 3474 0051 00       		.byte	0
 3475 0052 49       		.uleb128 0x49
 3476 0053 13       		.uleb128 0x13
 3477 0054 00       		.byte	0
 3478 0055 00       		.byte	0
 3479 0056 09       		.uleb128 0x9
 3480 0057 26       		.uleb128 0x26
 3481 0058 00       		.byte	0
 3482 0059 49       		.uleb128 0x49
 3483 005a 13       		.uleb128 0x13
 3484 005b 00       		.byte	0
 3485 005c 00       		.byte	0
 3486 005d 0A       		.uleb128 0xa
 3487 005e 13       		.uleb128 0x13
 3488 005f 01       		.byte	0x1
 3489 0060 0B       		.uleb128 0xb
 3490 0061 0B       		.uleb128 0xb
 3491 0062 3A       		.uleb128 0x3a
 3492 0063 0B       		.uleb128 0xb
 3493 0064 3B       		.uleb128 0x3b
 3494 0065 0B       		.uleb128 0xb
 3495 0066 01       		.uleb128 0x1
 3496 0067 13       		.uleb128 0x13
 3497 0068 00       		.byte	0
 3498 0069 00       		.byte	0
 3499 006a 0B       		.uleb128 0xb
 3500 006b 0D       		.uleb128 0xd
 3501 006c 00       		.byte	0
 3502 006d 03       		.uleb128 0x3
 3503 006e 0E       		.uleb128 0xe
 3504 006f 3A       		.uleb128 0x3a
 3505 0070 0B       		.uleb128 0xb
 3506 0071 3B       		.uleb128 0x3b
 3507 0072 0B       		.uleb128 0xb
 3508 0073 49       		.uleb128 0x49
 3509 0074 13       		.uleb128 0x13
 3510 0075 38       		.uleb128 0x38
 3511 0076 0B       		.uleb128 0xb
 3512 0077 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 73


 3513 0078 00       		.byte	0
 3514 0079 0C       		.uleb128 0xc
 3515 007a 0D       		.uleb128 0xd
 3516 007b 00       		.byte	0
 3517 007c 03       		.uleb128 0x3
 3518 007d 08       		.uleb128 0x8
 3519 007e 3A       		.uleb128 0x3a
 3520 007f 0B       		.uleb128 0xb
 3521 0080 3B       		.uleb128 0x3b
 3522 0081 0B       		.uleb128 0xb
 3523 0082 49       		.uleb128 0x49
 3524 0083 13       		.uleb128 0x13
 3525 0084 38       		.uleb128 0x38
 3526 0085 0B       		.uleb128 0xb
 3527 0086 00       		.byte	0
 3528 0087 00       		.byte	0
 3529 0088 0D       		.uleb128 0xd
 3530 0089 01       		.uleb128 0x1
 3531 008a 01       		.byte	0x1
 3532 008b 49       		.uleb128 0x49
 3533 008c 13       		.uleb128 0x13
 3534 008d 01       		.uleb128 0x1
 3535 008e 13       		.uleb128 0x13
 3536 008f 00       		.byte	0
 3537 0090 00       		.byte	0
 3538 0091 0E       		.uleb128 0xe
 3539 0092 21       		.uleb128 0x21
 3540 0093 00       		.byte	0
 3541 0094 49       		.uleb128 0x49
 3542 0095 13       		.uleb128 0x13
 3543 0096 2F       		.uleb128 0x2f
 3544 0097 0B       		.uleb128 0xb
 3545 0098 00       		.byte	0
 3546 0099 00       		.byte	0
 3547 009a 0F       		.uleb128 0xf
 3548 009b 2E       		.uleb128 0x2e
 3549 009c 01       		.byte	0x1
 3550 009d 03       		.uleb128 0x3
 3551 009e 0E       		.uleb128 0xe
 3552 009f 3A       		.uleb128 0x3a
 3553 00a0 0B       		.uleb128 0xb
 3554 00a1 3B       		.uleb128 0x3b
 3555 00a2 0B       		.uleb128 0xb
 3556 00a3 27       		.uleb128 0x27
 3557 00a4 19       		.uleb128 0x19
 3558 00a5 11       		.uleb128 0x11
 3559 00a6 01       		.uleb128 0x1
 3560 00a7 12       		.uleb128 0x12
 3561 00a8 06       		.uleb128 0x6
 3562 00a9 40       		.uleb128 0x40
 3563 00aa 18       		.uleb128 0x18
 3564 00ab 9642     		.uleb128 0x2116
 3565 00ad 19       		.uleb128 0x19
 3566 00ae 01       		.uleb128 0x1
 3567 00af 13       		.uleb128 0x13
 3568 00b0 00       		.byte	0
 3569 00b1 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 74


 3570 00b2 10       		.uleb128 0x10
 3571 00b3 05       		.uleb128 0x5
 3572 00b4 00       		.byte	0
 3573 00b5 03       		.uleb128 0x3
 3574 00b6 08       		.uleb128 0x8
 3575 00b7 3A       		.uleb128 0x3a
 3576 00b8 0B       		.uleb128 0xb
 3577 00b9 3B       		.uleb128 0x3b
 3578 00ba 0B       		.uleb128 0xb
 3579 00bb 49       		.uleb128 0x49
 3580 00bc 13       		.uleb128 0x13
 3581 00bd 02       		.uleb128 0x2
 3582 00be 18       		.uleb128 0x18
 3583 00bf 00       		.byte	0
 3584 00c0 00       		.byte	0
 3585 00c1 11       		.uleb128 0x11
 3586 00c2 35       		.uleb128 0x35
 3587 00c3 00       		.byte	0
 3588 00c4 00       		.byte	0
 3589 00c5 00       		.byte	0
 3590 00c6 12       		.uleb128 0x12
 3591 00c7 2E       		.uleb128 0x2e
 3592 00c8 01       		.byte	0x1
 3593 00c9 03       		.uleb128 0x3
 3594 00ca 0E       		.uleb128 0xe
 3595 00cb 3A       		.uleb128 0x3a
 3596 00cc 0B       		.uleb128 0xb
 3597 00cd 3B       		.uleb128 0x3b
 3598 00ce 0B       		.uleb128 0xb
 3599 00cf 27       		.uleb128 0x27
 3600 00d0 19       		.uleb128 0x19
 3601 00d1 49       		.uleb128 0x49
 3602 00d2 13       		.uleb128 0x13
 3603 00d3 11       		.uleb128 0x11
 3604 00d4 01       		.uleb128 0x1
 3605 00d5 12       		.uleb128 0x12
 3606 00d6 06       		.uleb128 0x6
 3607 00d7 40       		.uleb128 0x40
 3608 00d8 18       		.uleb128 0x18
 3609 00d9 9742     		.uleb128 0x2117
 3610 00db 19       		.uleb128 0x19
 3611 00dc 01       		.uleb128 0x1
 3612 00dd 13       		.uleb128 0x13
 3613 00de 00       		.byte	0
 3614 00df 00       		.byte	0
 3615 00e0 13       		.uleb128 0x13
 3616 00e1 2E       		.uleb128 0x2e
 3617 00e2 01       		.byte	0x1
 3618 00e3 03       		.uleb128 0x3
 3619 00e4 0E       		.uleb128 0xe
 3620 00e5 3A       		.uleb128 0x3a
 3621 00e6 0B       		.uleb128 0xb
 3622 00e7 3B       		.uleb128 0x3b
 3623 00e8 0B       		.uleb128 0xb
 3624 00e9 27       		.uleb128 0x27
 3625 00ea 19       		.uleb128 0x19
 3626 00eb 11       		.uleb128 0x11
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 75


 3627 00ec 01       		.uleb128 0x1
 3628 00ed 12       		.uleb128 0x12
 3629 00ee 06       		.uleb128 0x6
 3630 00ef 40       		.uleb128 0x40
 3631 00f0 18       		.uleb128 0x18
 3632 00f1 9742     		.uleb128 0x2117
 3633 00f3 19       		.uleb128 0x19
 3634 00f4 01       		.uleb128 0x1
 3635 00f5 13       		.uleb128 0x13
 3636 00f6 00       		.byte	0
 3637 00f7 00       		.byte	0
 3638 00f8 14       		.uleb128 0x14
 3639 00f9 05       		.uleb128 0x5
 3640 00fa 00       		.byte	0
 3641 00fb 03       		.uleb128 0x3
 3642 00fc 0E       		.uleb128 0xe
 3643 00fd 3A       		.uleb128 0x3a
 3644 00fe 0B       		.uleb128 0xb
 3645 00ff 3B       		.uleb128 0x3b
 3646 0100 0B       		.uleb128 0xb
 3647 0101 49       		.uleb128 0x49
 3648 0102 13       		.uleb128 0x13
 3649 0103 02       		.uleb128 0x2
 3650 0104 18       		.uleb128 0x18
 3651 0105 00       		.byte	0
 3652 0106 00       		.byte	0
 3653 0107 15       		.uleb128 0x15
 3654 0108 34       		.uleb128 0x34
 3655 0109 00       		.byte	0
 3656 010a 03       		.uleb128 0x3
 3657 010b 08       		.uleb128 0x8
 3658 010c 3A       		.uleb128 0x3a
 3659 010d 0B       		.uleb128 0xb
 3660 010e 3B       		.uleb128 0x3b
 3661 010f 0B       		.uleb128 0xb
 3662 0110 49       		.uleb128 0x49
 3663 0111 13       		.uleb128 0x13
 3664 0112 02       		.uleb128 0x2
 3665 0113 18       		.uleb128 0x18
 3666 0114 00       		.byte	0
 3667 0115 00       		.byte	0
 3668 0116 16       		.uleb128 0x16
 3669 0117 34       		.uleb128 0x34
 3670 0118 00       		.byte	0
 3671 0119 03       		.uleb128 0x3
 3672 011a 0E       		.uleb128 0xe
 3673 011b 3A       		.uleb128 0x3a
 3674 011c 0B       		.uleb128 0xb
 3675 011d 3B       		.uleb128 0x3b
 3676 011e 0B       		.uleb128 0xb
 3677 011f 49       		.uleb128 0x49
 3678 0120 13       		.uleb128 0x13
 3679 0121 02       		.uleb128 0x2
 3680 0122 18       		.uleb128 0x18
 3681 0123 00       		.byte	0
 3682 0124 00       		.byte	0
 3683 0125 17       		.uleb128 0x17
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 76


 3684 0126 0B       		.uleb128 0xb
 3685 0127 01       		.byte	0x1
 3686 0128 11       		.uleb128 0x11
 3687 0129 01       		.uleb128 0x1
 3688 012a 12       		.uleb128 0x12
 3689 012b 06       		.uleb128 0x6
 3690 012c 00       		.byte	0
 3691 012d 00       		.byte	0
 3692 012e 18       		.uleb128 0x18
 3693 012f 2E       		.uleb128 0x2e
 3694 0130 01       		.byte	0x1
 3695 0131 3F       		.uleb128 0x3f
 3696 0132 19       		.uleb128 0x19
 3697 0133 03       		.uleb128 0x3
 3698 0134 0E       		.uleb128 0xe
 3699 0135 3A       		.uleb128 0x3a
 3700 0136 0B       		.uleb128 0xb
 3701 0137 3B       		.uleb128 0x3b
 3702 0138 0B       		.uleb128 0xb
 3703 0139 27       		.uleb128 0x27
 3704 013a 19       		.uleb128 0x19
 3705 013b 11       		.uleb128 0x11
 3706 013c 01       		.uleb128 0x1
 3707 013d 12       		.uleb128 0x12
 3708 013e 06       		.uleb128 0x6
 3709 013f 40       		.uleb128 0x40
 3710 0140 18       		.uleb128 0x18
 3711 0141 9642     		.uleb128 0x2116
 3712 0143 19       		.uleb128 0x19
 3713 0144 01       		.uleb128 0x1
 3714 0145 13       		.uleb128 0x13
 3715 0146 00       		.byte	0
 3716 0147 00       		.byte	0
 3717 0148 19       		.uleb128 0x19
 3718 0149 2E       		.uleb128 0x2e
 3719 014a 01       		.byte	0x1
 3720 014b 03       		.uleb128 0x3
 3721 014c 0E       		.uleb128 0xe
 3722 014d 3A       		.uleb128 0x3a
 3723 014e 0B       		.uleb128 0xb
 3724 014f 3B       		.uleb128 0x3b
 3725 0150 0B       		.uleb128 0xb
 3726 0151 27       		.uleb128 0x27
 3727 0152 19       		.uleb128 0x19
 3728 0153 49       		.uleb128 0x49
 3729 0154 13       		.uleb128 0x13
 3730 0155 11       		.uleb128 0x11
 3731 0156 01       		.uleb128 0x1
 3732 0157 12       		.uleb128 0x12
 3733 0158 06       		.uleb128 0x6
 3734 0159 40       		.uleb128 0x40
 3735 015a 18       		.uleb128 0x18
 3736 015b 9642     		.uleb128 0x2116
 3737 015d 19       		.uleb128 0x19
 3738 015e 01       		.uleb128 0x1
 3739 015f 13       		.uleb128 0x13
 3740 0160 00       		.byte	0
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 77


 3741 0161 00       		.byte	0
 3742 0162 1A       		.uleb128 0x1a
 3743 0163 34       		.uleb128 0x34
 3744 0164 00       		.byte	0
 3745 0165 03       		.uleb128 0x3
 3746 0166 0E       		.uleb128 0xe
 3747 0167 3A       		.uleb128 0x3a
 3748 0168 0B       		.uleb128 0xb
 3749 0169 3B       		.uleb128 0x3b
 3750 016a 05       		.uleb128 0x5
 3751 016b 49       		.uleb128 0x49
 3752 016c 13       		.uleb128 0x13
 3753 016d 02       		.uleb128 0x2
 3754 016e 18       		.uleb128 0x18
 3755 016f 00       		.byte	0
 3756 0170 00       		.byte	0
 3757 0171 1B       		.uleb128 0x1b
 3758 0172 2E       		.uleb128 0x2e
 3759 0173 01       		.byte	0x1
 3760 0174 03       		.uleb128 0x3
 3761 0175 0E       		.uleb128 0xe
 3762 0176 3A       		.uleb128 0x3a
 3763 0177 0B       		.uleb128 0xb
 3764 0178 3B       		.uleb128 0x3b
 3765 0179 05       		.uleb128 0x5
 3766 017a 27       		.uleb128 0x27
 3767 017b 19       		.uleb128 0x19
 3768 017c 11       		.uleb128 0x11
 3769 017d 01       		.uleb128 0x1
 3770 017e 12       		.uleb128 0x12
 3771 017f 06       		.uleb128 0x6
 3772 0180 40       		.uleb128 0x40
 3773 0181 18       		.uleb128 0x18
 3774 0182 9642     		.uleb128 0x2116
 3775 0184 19       		.uleb128 0x19
 3776 0185 01       		.uleb128 0x1
 3777 0186 13       		.uleb128 0x13
 3778 0187 00       		.byte	0
 3779 0188 00       		.byte	0
 3780 0189 1C       		.uleb128 0x1c
 3781 018a 05       		.uleb128 0x5
 3782 018b 00       		.byte	0
 3783 018c 03       		.uleb128 0x3
 3784 018d 0E       		.uleb128 0xe
 3785 018e 3A       		.uleb128 0x3a
 3786 018f 0B       		.uleb128 0xb
 3787 0190 3B       		.uleb128 0x3b
 3788 0191 05       		.uleb128 0x5
 3789 0192 49       		.uleb128 0x49
 3790 0193 13       		.uleb128 0x13
 3791 0194 02       		.uleb128 0x2
 3792 0195 18       		.uleb128 0x18
 3793 0196 00       		.byte	0
 3794 0197 00       		.byte	0
 3795 0198 1D       		.uleb128 0x1d
 3796 0199 2E       		.uleb128 0x2e
 3797 019a 01       		.byte	0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 78


 3798 019b 03       		.uleb128 0x3
 3799 019c 0E       		.uleb128 0xe
 3800 019d 3A       		.uleb128 0x3a
 3801 019e 0B       		.uleb128 0xb
 3802 019f 3B       		.uleb128 0x3b
 3803 01a0 05       		.uleb128 0x5
 3804 01a1 27       		.uleb128 0x27
 3805 01a2 19       		.uleb128 0x19
 3806 01a3 11       		.uleb128 0x11
 3807 01a4 01       		.uleb128 0x1
 3808 01a5 12       		.uleb128 0x12
 3809 01a6 06       		.uleb128 0x6
 3810 01a7 40       		.uleb128 0x40
 3811 01a8 18       		.uleb128 0x18
 3812 01a9 9742     		.uleb128 0x2117
 3813 01ab 19       		.uleb128 0x19
 3814 01ac 01       		.uleb128 0x1
 3815 01ad 13       		.uleb128 0x13
 3816 01ae 00       		.byte	0
 3817 01af 00       		.byte	0
 3818 01b0 1E       		.uleb128 0x1e
 3819 01b1 34       		.uleb128 0x34
 3820 01b2 00       		.byte	0
 3821 01b3 03       		.uleb128 0x3
 3822 01b4 08       		.uleb128 0x8
 3823 01b5 3A       		.uleb128 0x3a
 3824 01b6 0B       		.uleb128 0xb
 3825 01b7 3B       		.uleb128 0x3b
 3826 01b8 05       		.uleb128 0x5
 3827 01b9 49       		.uleb128 0x49
 3828 01ba 13       		.uleb128 0x13
 3829 01bb 02       		.uleb128 0x2
 3830 01bc 18       		.uleb128 0x18
 3831 01bd 00       		.byte	0
 3832 01be 00       		.byte	0
 3833 01bf 1F       		.uleb128 0x1f
 3834 01c0 2E       		.uleb128 0x2e
 3835 01c1 01       		.byte	0x1
 3836 01c2 03       		.uleb128 0x3
 3837 01c3 0E       		.uleb128 0xe
 3838 01c4 3A       		.uleb128 0x3a
 3839 01c5 0B       		.uleb128 0xb
 3840 01c6 3B       		.uleb128 0x3b
 3841 01c7 05       		.uleb128 0x5
 3842 01c8 27       		.uleb128 0x27
 3843 01c9 19       		.uleb128 0x19
 3844 01ca 49       		.uleb128 0x49
 3845 01cb 13       		.uleb128 0x13
 3846 01cc 11       		.uleb128 0x11
 3847 01cd 01       		.uleb128 0x1
 3848 01ce 12       		.uleb128 0x12
 3849 01cf 06       		.uleb128 0x6
 3850 01d0 40       		.uleb128 0x40
 3851 01d1 18       		.uleb128 0x18
 3852 01d2 9642     		.uleb128 0x2116
 3853 01d4 19       		.uleb128 0x19
 3854 01d5 01       		.uleb128 0x1
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 79


 3855 01d6 13       		.uleb128 0x13
 3856 01d7 00       		.byte	0
 3857 01d8 00       		.byte	0
 3858 01d9 20       		.uleb128 0x20
 3859 01da 05       		.uleb128 0x5
 3860 01db 00       		.byte	0
 3861 01dc 03       		.uleb128 0x3
 3862 01dd 08       		.uleb128 0x8
 3863 01de 3A       		.uleb128 0x3a
 3864 01df 0B       		.uleb128 0xb
 3865 01e0 3B       		.uleb128 0x3b
 3866 01e1 05       		.uleb128 0x5
 3867 01e2 49       		.uleb128 0x49
 3868 01e3 13       		.uleb128 0x13
 3869 01e4 02       		.uleb128 0x2
 3870 01e5 18       		.uleb128 0x18
 3871 01e6 00       		.byte	0
 3872 01e7 00       		.byte	0
 3873 01e8 21       		.uleb128 0x21
 3874 01e9 2E       		.uleb128 0x2e
 3875 01ea 01       		.byte	0x1
 3876 01eb 3F       		.uleb128 0x3f
 3877 01ec 19       		.uleb128 0x19
 3878 01ed 03       		.uleb128 0x3
 3879 01ee 0E       		.uleb128 0xe
 3880 01ef 3A       		.uleb128 0x3a
 3881 01f0 0B       		.uleb128 0xb
 3882 01f1 3B       		.uleb128 0x3b
 3883 01f2 05       		.uleb128 0x5
 3884 01f3 27       		.uleb128 0x27
 3885 01f4 19       		.uleb128 0x19
 3886 01f5 11       		.uleb128 0x11
 3887 01f6 01       		.uleb128 0x1
 3888 01f7 12       		.uleb128 0x12
 3889 01f8 06       		.uleb128 0x6
 3890 01f9 40       		.uleb128 0x40
 3891 01fa 18       		.uleb128 0x18
 3892 01fb 9642     		.uleb128 0x2116
 3893 01fd 19       		.uleb128 0x19
 3894 01fe 01       		.uleb128 0x1
 3895 01ff 13       		.uleb128 0x13
 3896 0200 00       		.byte	0
 3897 0201 00       		.byte	0
 3898 0202 22       		.uleb128 0x22
 3899 0203 34       		.uleb128 0x34
 3900 0204 00       		.byte	0
 3901 0205 03       		.uleb128 0x3
 3902 0206 0E       		.uleb128 0xe
 3903 0207 3A       		.uleb128 0x3a
 3904 0208 0B       		.uleb128 0xb
 3905 0209 3B       		.uleb128 0x3b
 3906 020a 05       		.uleb128 0x5
 3907 020b 49       		.uleb128 0x49
 3908 020c 13       		.uleb128 0x13
 3909 020d 3F       		.uleb128 0x3f
 3910 020e 19       		.uleb128 0x19
 3911 020f 02       		.uleb128 0x2
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 80


 3912 0210 18       		.uleb128 0x18
 3913 0211 00       		.byte	0
 3914 0212 00       		.byte	0
 3915 0213 00       		.byte	0
 3916              		.section	.debug_aranges,"",%progbits
 3917 0000 BC000000 		.4byte	0xbc
 3918 0004 0200     		.2byte	0x2
 3919 0006 00000000 		.4byte	.Ldebug_info0
 3920 000a 04       		.byte	0x4
 3921 000b 00       		.byte	0
 3922 000c 0000     		.2byte	0
 3923 000e 0000     		.2byte	0
 3924 0010 00000000 		.4byte	.LFB0
 3925 0014 24000000 		.4byte	.LFE0-.LFB0
 3926 0018 00000000 		.4byte	.LFB2
 3927 001c 14000000 		.4byte	.LFE2-.LFB2
 3928 0020 00000000 		.4byte	.LFB3
 3929 0024 18000000 		.4byte	.LFE3-.LFB3
 3930 0028 00000000 		.4byte	.LFB6
 3931 002c 2C000000 		.4byte	.LFE6-.LFB6
 3932 0030 00000000 		.4byte	.LFB10
 3933 0034 3E000000 		.4byte	.LFE10-.LFB10
 3934 0038 00000000 		.4byte	.LFB27
 3935 003c 96000000 		.4byte	.LFE27-.LFB27
 3936 0040 00000000 		.4byte	.LFB28
 3937 0044 10010000 		.4byte	.LFE28-.LFB28
 3938 0048 00000000 		.4byte	.LFB29
 3939 004c 6A000000 		.4byte	.LFE29-.LFB29
 3940 0050 00000000 		.4byte	.LFB30
 3941 0054 56000000 		.4byte	.LFE30-.LFB30
 3942 0058 00000000 		.4byte	.LFB31
 3943 005c 70000000 		.4byte	.LFE31-.LFB31
 3944 0060 00000000 		.4byte	.LFB32
 3945 0064 F0000000 		.4byte	.LFE32-.LFB32
 3946 0068 00000000 		.4byte	.LFB33
 3947 006c 30000000 		.4byte	.LFE33-.LFB33
 3948 0070 00000000 		.4byte	.LFB34
 3949 0074 4A000000 		.4byte	.LFE34-.LFB34
 3950 0078 00000000 		.4byte	.LFB35
 3951 007c 5C000000 		.4byte	.LFE35-.LFB35
 3952 0080 00000000 		.4byte	.LFB36
 3953 0084 1C010000 		.4byte	.LFE36-.LFB36
 3954 0088 00000000 		.4byte	.LFB37
 3955 008c 70000000 		.4byte	.LFE37-.LFB37
 3956 0090 00000000 		.4byte	.LFB38
 3957 0094 F0000000 		.4byte	.LFE38-.LFB38
 3958 0098 00000000 		.4byte	.LFB39
 3959 009c 7A000000 		.4byte	.LFE39-.LFB39
 3960 00a0 00000000 		.4byte	.LFB40
 3961 00a4 5C000000 		.4byte	.LFE40-.LFB40
 3962 00a8 00000000 		.4byte	.LFB41
 3963 00ac 26010000 		.4byte	.LFE41-.LFB41
 3964 00b0 00000000 		.4byte	.LFB42
 3965 00b4 16000000 		.4byte	.LFE42-.LFB42
 3966 00b8 00000000 		.4byte	0
 3967 00bc 00000000 		.4byte	0
 3968              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 81


 3969              	.Ldebug_ranges0:
 3970 0000 00000000 		.4byte	.LFB0
 3971 0004 24000000 		.4byte	.LFE0
 3972 0008 00000000 		.4byte	.LFB2
 3973 000c 14000000 		.4byte	.LFE2
 3974 0010 00000000 		.4byte	.LFB3
 3975 0014 18000000 		.4byte	.LFE3
 3976 0018 00000000 		.4byte	.LFB6
 3977 001c 2C000000 		.4byte	.LFE6
 3978 0020 00000000 		.4byte	.LFB10
 3979 0024 3E000000 		.4byte	.LFE10
 3980 0028 00000000 		.4byte	.LFB27
 3981 002c 96000000 		.4byte	.LFE27
 3982 0030 00000000 		.4byte	.LFB28
 3983 0034 10010000 		.4byte	.LFE28
 3984 0038 00000000 		.4byte	.LFB29
 3985 003c 6A000000 		.4byte	.LFE29
 3986 0040 00000000 		.4byte	.LFB30
 3987 0044 56000000 		.4byte	.LFE30
 3988 0048 00000000 		.4byte	.LFB31
 3989 004c 70000000 		.4byte	.LFE31
 3990 0050 00000000 		.4byte	.LFB32
 3991 0054 F0000000 		.4byte	.LFE32
 3992 0058 00000000 		.4byte	.LFB33
 3993 005c 30000000 		.4byte	.LFE33
 3994 0060 00000000 		.4byte	.LFB34
 3995 0064 4A000000 		.4byte	.LFE34
 3996 0068 00000000 		.4byte	.LFB35
 3997 006c 5C000000 		.4byte	.LFE35
 3998 0070 00000000 		.4byte	.LFB36
 3999 0074 1C010000 		.4byte	.LFE36
 4000 0078 00000000 		.4byte	.LFB37
 4001 007c 70000000 		.4byte	.LFE37
 4002 0080 00000000 		.4byte	.LFB38
 4003 0084 F0000000 		.4byte	.LFE38
 4004 0088 00000000 		.4byte	.LFB39
 4005 008c 7A000000 		.4byte	.LFE39
 4006 0090 00000000 		.4byte	.LFB40
 4007 0094 5C000000 		.4byte	.LFE40
 4008 0098 00000000 		.4byte	.LFB41
 4009 009c 26010000 		.4byte	.LFE41
 4010 00a0 00000000 		.4byte	.LFB42
 4011 00a4 16000000 		.4byte	.LFE42
 4012 00a8 00000000 		.4byte	0
 4013 00ac 00000000 		.4byte	0
 4014              		.section	.debug_line,"",%progbits
 4015              	.Ldebug_line0:
 4016 0000 85040000 		.section	.debug_str,"MS",%progbits,1
 4016      0200C401 
 4016      00000201 
 4016      FB0E0D00 
 4016      01010101 
 4017              	.LASF4:
 4018 0000 73697A65 		.ascii	"size_t\000"
 4018      5F7400
 4019              	.LASF26:
 4020 0007 72656164 		.ascii	"read32_be\000"
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 82


 4020      33325F62 
 4020      6500
 4021              	.LASF5:
 4022 0011 5F5F7569 		.ascii	"__uint8_t\000"
 4022      6E74385F 
 4022      7400
 4023              	.LASF24:
 4024 001b 726F7472 		.ascii	"rotr32\000"
 4024      333200
 4025              	.LASF47:
 4026 0022 696E765F 		.ascii	"inv_sub_block\000"
 4026      7375625F 
 4026      626C6F63 
 4026      6B00
 4027              	.LASF51:
 4028 0030 63665F61 		.ascii	"cf_aes_decrypt\000"
 4028      65735F64 
 4028      65637279 
 4028      707400
 4029              	.LASF12:
 4030 003f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4030      206C6F6E 
 4030      6720756E 
 4030      7369676E 
 4030      65642069 
 4031              	.LASF1:
 4032 0056 6C6F6E67 		.ascii	"long long int\000"
 4032      206C6F6E 
 4032      6720696E 
 4032      7400
 4033              	.LASF3:
 4034 0064 7369676E 		.ascii	"signed char\000"
 4034      65642063 
 4034      68617200 
 4035              	.LASF43:
 4036 0070 63665F61 		.ascii	"cf_aes_init\000"
 4036      65735F69 
 4036      6E697400 
 4037              	.LASF25:
 4038 007c 726F746C 		.ascii	"rotl32\000"
 4038      333200
 4039              	.LASF21:
 4040 0083 63665F70 		.ascii	"cf_prp\000"
 4040      727000
 4041              	.LASF31:
 4042 008a 6165735F 		.ascii	"aes_schedule\000"
 4042      73636865 
 4042      64756C65 
 4042      00
 4043              	.LASF58:
 4044 0097 63665F61 		.ascii	"cf_aes\000"
 4044      657300
 4045              	.LASF27:
 4046 009e 6D656D5F 		.ascii	"mem_clean\000"
 4046      636C6561 
 4046      6E00
 4047              	.LASF53:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 83


 4048 00a8 52636F6E 		.ascii	"Rcon\000"
 4048      00
 4049              	.LASF37:
 4050 00ad 73746174 		.ascii	"state\000"
 4050      6500
 4051              	.LASF9:
 4052 00b3 6C6F6E67 		.ascii	"long int\000"
 4052      20696E74 
 4052      00
 4053              	.LASF39:
 4054 00bc 73686966 		.ascii	"shift_rows\000"
 4054      745F726F 
 4054      777300
 4055              	.LASF41:
 4056 00c7 6D69785F 		.ascii	"mix_column\000"
 4056      636F6C75 
 4056      6D6E00
 4057              	.LASF30:
 4058 00d2 73626F78 		.ascii	"sbox\000"
 4058      00
 4059              	.LASF22:
 4060 00d7 726F756E 		.ascii	"rounds\000"
 4060      647300
 4061              	.LASF10:
 4062 00de 5F5F7569 		.ascii	"__uint32_t\000"
 4062      6E743332 
 4062      5F7400
 4063              	.LASF35:
 4064 00e9 74656D70 		.ascii	"temp\000"
 4064      00
 4065              	.LASF0:
 4066 00ee 756E7369 		.ascii	"unsigned int\000"
 4066      676E6564 
 4066      20696E74 
 4066      00
 4067              	.LASF11:
 4068 00fb 6C6F6E67 		.ascii	"long unsigned int\000"
 4068      20756E73 
 4068      69676E65 
 4068      6420696E 
 4068      7400
 4069              	.LASF19:
 4070 010d 656E6372 		.ascii	"encrypt\000"
 4070      79707400 
 4071              	.LASF8:
 4072 0115 73686F72 		.ascii	"short unsigned int\000"
 4072      7420756E 
 4072      7369676E 
 4072      65642069 
 4072      6E7400
 4073              	.LASF18:
 4074 0128 626C6F63 		.ascii	"blocksz\000"
 4074      6B737A00 
 4075              	.LASF40:
 4076 0130 67665F70 		.ascii	"gf_poly_mul2\000"
 4076      6F6C795F 
 4076      6D756C32 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 84


 4076      00
 4077              	.LASF42:
 4078 013d 6D69785F 		.ascii	"mix_columns\000"
 4078      636F6C75 
 4078      6D6E7300 
 4079              	.LASF34:
 4080 0149 695F6D6F 		.ascii	"i_mod_nk\000"
 4080      645F6E6B 
 4080      00
 4081              	.LASF13:
 4082 0152 73697A65 		.ascii	"sizetype\000"
 4082      74797065 
 4082      00
 4083              	.LASF50:
 4084 015b 696E765F 		.ascii	"inv_mix_columns\000"
 4084      6D69785F 
 4084      636F6C75 
 4084      6D6E7300 
 4085              	.LASF2:
 4086 016b 6C6F6E67 		.ascii	"long double\000"
 4086      20646F75 
 4086      626C6500 
 4087              	.LASF44:
 4088 0177 63665F61 		.ascii	"cf_aes_encrypt\000"
 4088      65735F65 
 4088      6E637279 
 4088      707400
 4089              	.LASF32:
 4090 0186 6E6B6579 		.ascii	"nkey\000"
 4090      00
 4091              	.LASF28:
 4092 018b 77726974 		.ascii	"write32_be\000"
 4092      6533325F 
 4092      626500
 4093              	.LASF55:
 4094 0196 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4094      43313120 
 4094      352E342E 
 4094      31203230 
 4094      31363036 
 4095 01c9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4095      20726576 
 4095      6973696F 
 4095      6E203233 
 4095      37373135 
 4096 01fc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects -fomit-fram"
 4096      66756E63 
 4096      74696F6E 
 4096      2D736563 
 4096      74696F6E 
 4097 022f 652D706F 		.ascii	"e-pointer\000"
 4097      696E7465 
 4097      7200
 4098              	.LASF6:
 4099 0239 756E7369 		.ascii	"unsigned char\000"
 4099      676E6564 
 4099      20636861 
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 85


 4099      7200
 4100              	.LASF48:
 4101 0247 696E765F 		.ascii	"inv_shift_rows\000"
 4101      73686966 
 4101      745F726F 
 4101      777300
 4102              	.LASF49:
 4103 0256 696E765F 		.ascii	"inv_mix_column\000"
 4103      6D69785F 
 4103      636F6C75 
 4103      6D6E00
 4104              	.LASF7:
 4105 0265 73686F72 		.ascii	"short int\000"
 4105      7420696E 
 4105      7400
 4106              	.LASF38:
 4107 026f 7375625F 		.ascii	"sub_block\000"
 4107      626C6F63 
 4107      6B00
 4108              	.LASF46:
 4109 0279 726F756E 		.ascii	"round\000"
 4109      6400
 4110              	.LASF33:
 4111 027f 695F6469 		.ascii	"i_div_nk\000"
 4111      765F6E6B 
 4111      00
 4112              	.LASF45:
 4113 0288 726F756E 		.ascii	"round_keys\000"
 4113      645F6B65 
 4113      797300
 4114              	.LASF16:
 4115 0293 75696E74 		.ascii	"uint32_t\000"
 4115      33325F74 
 4115      00
 4116              	.LASF52:
 4117 029c 63665F61 		.ascii	"cf_aes_finish\000"
 4117      65735F66 
 4117      696E6973 
 4117      6800
 4118              	.LASF56:
 4119 02aa 6165732E 		.ascii	"aes.c\000"
 4119      6300
 4120              	.LASF14:
 4121 02b0 63686172 		.ascii	"char\000"
 4121      00
 4122              	.LASF17:
 4123 02b5 63665F70 		.ascii	"cf_prp_block\000"
 4123      72705F62 
 4123      6C6F636B 
 4123      00
 4124              	.LASF20:
 4125 02c2 64656372 		.ascii	"decrypt\000"
 4125      79707400 
 4126              	.LASF54:
 4127 02ca 535F696E 		.ascii	"S_inv\000"
 4127      7600
 4128              	.LASF29:
ARM GAS  C:\Users\andrew\AppData\Local\Temp\ccp3GFwa.s 			page 86


 4129 02d0 7375625F 		.ascii	"sub_word\000"
 4129      776F7264 
 4129      00
 4130              	.LASF15:
 4131 02d9 75696E74 		.ascii	"uint8_t\000"
 4131      385F7400 
 4132              	.LASF36:
 4133 02e1 6164645F 		.ascii	"add_round_key\000"
 4133      726F756E 
 4133      645F6B65 
 4133      7900
 4134              	.LASF57:
 4135 02ef 443A5C44 		.ascii	"D:\\Dropbox\\6_kurs\\diploma\\crypto_miscocontrolle"
 4135      726F7062 
 4135      6F785C36 
 4135      5F6B7572 
 4135      735C6469 
 4136 031e 725F5354 		.ascii	"r_STABLE\\BLE_Dynamic_GATT_Service_Configuration\\B"
 4136      41424C45 
 4136      5C424C45 
 4136      5F44796E 
 4136      616D6963 
 4137 034f 4C455F44 		.ascii	"LE_Dynamic_GATT_Service_Configuration.cydsn\000"
 4137      796E616D 
 4137      69635F47 
 4137      4154545F 
 4137      53657276 
 4138              	.LASF23:
 4139 037b 63665F61 		.ascii	"cf_aes_context\000"
 4139      65735F63 
 4139      6F6E7465 
 4139      787400
 4140              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
